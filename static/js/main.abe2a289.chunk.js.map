{"version":3,"sources":["game/blocks.js","assets/button_red_unpressed.svg","assets/button_red_pressed.svg","assets/button_blue_unpressed.svg","assets/button_blue_pressed.svg","assets/bridge.svg","assets/lab.svg","assets/rocket.svg","assets/rover.svg","assets/rover_flipped.svg","assets/mercury_crater.svg","assets/rock_blue.svg","assets/rock_red.svg","assets/volcano.svg","assets/mountain.svg","assets/photograph.svg","assets/box_samples.svg","assets/box_red.svg","assets/box_blue.svg","game/constants.js","game/objects.js","game/missions.js","analytics.js","components/ControlPanel.js","components/GameIntro.js","components/GameOver.js","components/Ground.js","components/PlanetIntro.js","components/ProgressIndicator.js","components/Item.js","components/Level.js","components/MissionObjective.js","components/MissionBriefing.js","components/Scene.js","assets/amerika.mp3","components/Page.js","App.js","reportWebVitals.js","index.js"],"names":["EVENTS","BLOCK_NAMES","BLOCKS","_BLOCKS","_defineProperty","name","args","remaining_blocks","blocks","program","counts","i","length","block","undefined","reduce","acc","_ref","_ref2","_slicedToArray","count","concat","_toConsumableArray","instruction_label","_ref3","var","CANVAS_WIDTH","CANVAS_HEIGHT","GROUND_HEIGHT","OBJECTS","BRIDGE","images","bridge","height","width","BOX_SAMPLES","box_samples","BOX_RED","box_red","BOX_BLUE","box_blue","ROVER","rover","rover_flipped","BUTTON_BLUE","button_blue_unpressed","button_blue_pressed","BUTTON_RED","button_red_unpressed","button_red_pressed","ROCKET","rocket","LAB","lab","MERCURY_CRATER","mercury_crater","VENUS_CRATER","venus_crater","ROCK_RED","rock_red","ROCK_BLUE","rock_blue","VOLCANO","volcano","MOUNTAIN","mountain","PHOTOGRAPH","photograph","obj_y","object","elevation","arguments","d","opacity","costumeNumber","PLANETS","introConfig","size","scale","orbitDuration","textColor","colors","main","sky","text","briefing","missions","objective","hint","items","_objectSpread","id","x","criteria","category","value","message","allowFall","canCarry","button","color","variables","ice","ReactGA","initialize","getMissionLabel","planetIndex","missionIndex","logEvent","event","ControlPanel","addToProgram","onResetProgram","onSubmitProgram","programSubmitted","_jsx","children","_jsxs","map","instruction","onClick","_validate_program","augmentedProgram","stack","Object","assign","meta","_step","found","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","isValid","error","top","push","type","line","parseInt","isNaN","pop","jumpBackTo","jumpTo","condition","elseJump","elseIndex","validate_program","action","label","alert","window","scrollTo","behavior","setTimeout","className","blockId","arg","key","prompt","blockClicked","GameIntro","onCompleteIntro","onStartPlaying","_useState","useState","_useState2","start","setStart","titleSpring","useSpring","to","from","config","duration","onRest","completeIntro","a","g","y","dominantBaseline","textAnchor","rx","fill","style","fontSize","GameOver","maxWidth","src","alt","href","Ground","planet","Array","keys","TICK_WIDTH","PlanetIntro","onZoomIntro","resetOrbit","setResetOrbit","_useState3","_useState4","exitIntro","setExitIntro","_useState5","_useState6","planetZoom","setPlanetZoom","_useState7","_useState8","planetText","setPlanetText","sunSpring","delay","planetOpacitySpring","planetMotionSpring","angle","Math","PI","reset","state","planetZoomSpring","zoom","sceneExitSpring","planetTextSpring","renderedPlanets","slice","isLastPlanet","radius","circle","cx","cy","r","fillOpacity","stroke","strokeWidth","interpolate","theta","cos","sin","useEffect","timer","clearTimeout","ProgressIndicator","completedMissions","mission","PADDING","Item","center","costumeIndex","STEP_SIZE","AItem","Level","onSuccess","onFailure","startTime","Date","currentInstruction","instructionsCompleted","winMessage","loseMessage","photographs","bridges","buttons","variable","loopMetadata","events","setState","roverIndex","findIndex","item","rocketIndex","checkCriteria","criterion","_step2","_iterator2","carried","_step3","_iterator3","_step4","_iterator4","_step5","_iterator5","_step6","_iterator6","console","log","getCarriedObject","_step11","_iterator11","roverNoop","util","obj","instr","amt","_step13","_iterator13","getVariableValue","_step10","_iterator10","getPickupObject","prevElevation","shouldLaunch","iterationsCompleted","_step14","blue_button","_iterator14","_step15","ice_detected","_iterator15","_step12","_iterator12","getCurrentButton","bridgeX","_step9","_iterator9","canBuildBridge","winSpring","round","loseSpring","itemSprings","useSprings","target","_step7","_iterator7","_step8","_iterator8","checkFall","_checkWin","isWin","checkWin","spring","fontFamily","MissionObjective","missionNumber","textAlign","MissionBriefing","onCompleteBriefing","ACTION","PLANET_INTRO_STATUS","HANDLER","_HANDLER","introShown","planetIntroStatus","briefingShown","reducer","payload","handler","Scene","props","development","_useReducer","useReducer","_useReducer2","dispatch","act","handleCompleteIntro","handleZoomPlanetIntro","handleCompletePlanetIntro","handleCompleteBriefing","backgroundColorSpring","levelInProgress","showControlPanel","svg","backgroundColor","ASound","Sound","Page","playing","setPlaying","audioSpring","volume","url","backgroundMusic","playStatus","status","PLAYING","STOPPED","autoLoad","loop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","send","hitType","page","location","pathname","search","ReactDOM","render","React","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.abe2a289.chunk.js","sourcesContent":["// Blocks available for usage\n\nexport const EVENTS = {\n  ROCKET_LAUNCH: 'ROCKET_LAUNCH'\n};\n\nexport const BLOCK_NAMES = {\n  BRIDGE: 'BUILD_BRIDGE',\n  FORWARD: 'FORWARD',\n  FORWARD_VAR: 'FORWARD_VAR',\n  INCREMENT_VAR: 'INCREMENT_VAR',\n  TAKE_PHOTO: 'TAKE_PHOTO',\n  TURN: 'TURN',\n  LAUNCH_ROCKET: 'LAUNCH_ROCKET',\n  PICK_UP: 'PICK_UP',\n  DROP: 'DROP',\n  PRESS_BUTTON: 'PRESS_BUTTON',\n  REPEAT: 'REPEAT',\n  END_REPEAT: 'END REPEAT',\n  IF_BUTTON_BLUE: 'IF_BUTTON_BLUE',\n  IF_CARRYING_BLUE: 'IF_CARRYING_BLUE',\n  IF_ICE: 'IF_ICE',\n  ELSE: 'ELSE',\n  END_IF: 'END_IF',\n};\n\nexport const BLOCKS = {\n\n  [BLOCK_NAMES.BRIDGE]: {\n    name: 'Build Bridge'\n  },\n  [BLOCK_NAMES.FORWARD]: {\n    name: 'Move Forward'\n  },\n\n  // TEMP: These two blocks are hard-coded to use the variable `x`.\n  // The program technically supports multiple variables, but not currently in use.\n  // If they're ever put into use, replace these `x`s in the `name` with the more generic \"Variable\"\n  [BLOCK_NAMES.FORWARD_VAR]: {\n    name: 'Move x Steps',\n    args: [\n      {'key': 'var', 'text': 'Variable name?'}\n    ]\n  },\n  [BLOCK_NAMES.INCREMENT_VAR]: {\n    name: 'Increase x by 1',\n    args: [\n      {'key': 'var', 'text': 'Variable name?'}\n    ]\n  },\n\n  [BLOCK_NAMES.TURN]: {\n    name: 'Turn Around'\n  },\n  [BLOCK_NAMES.PICK_UP]: {\n    name: 'Pick Up Object'\n  },\n  [BLOCK_NAMES.DROP]: {\n    name: 'Drop Object'\n  },\n  [BLOCK_NAMES.LAUNCH_ROCKET]: {\n    name: 'Launch Rocket'\n  },\n  [BLOCK_NAMES.TAKE_PHOTO]: {\n    name: 'Take Photo'\n  },\n  [BLOCK_NAMES.PRESS_BUTTON]: {\n    name: 'Press Button'\n  },\n  [BLOCK_NAMES.REPEAT]: {\n    name: 'Repeat',\n    args: [\n      {'key': 'count', 'text': 'How many times to repeat?'}\n    ]\n  },\n  [BLOCK_NAMES.END_REPEAT]: {\n    name: 'End Repeat'\n  },\n  [BLOCK_NAMES.IF_BUTTON_BLUE]: {\n    name: 'If Button is Blue'\n  },\n  [BLOCK_NAMES.IF_CARRYING_BLUE]: {\n    name: 'If Carrying Blue'\n  },\n  [BLOCK_NAMES.IF_ICE]: {\n    name: 'If Ice Detected'\n  },\n  [BLOCK_NAMES.ELSE]: {\n    name: 'Else'\n  },\n  [BLOCK_NAMES.END_IF]: {\n    name: 'End If'\n  },\n}\n\nexport const remaining_blocks = (blocks, program) => {\n\n  // Count up how many times each block is currently used in the program\n  const counts = {};\n  for (let i = 0; i < program.length; i++) {\n    const block = program[i].block;\n    if (counts[block] === undefined) {\n      counts[block] = 1;\n    } else {\n      counts[block]++;\n    }\n  }\n\n  // Remove\n  return blocks.reduce((acc, [block, count]) => (\n    [...acc, [block, count - (counts[block] || 0)]]\n  ), []);\n}\n\nexport const instruction_label = ({ block, args }) => {\n  const name = BLOCKS[block].name;\n  switch (block) {\n    case BLOCK_NAMES.REPEAT:\n      return `${name} ${args.count}`;\n\n    case BLOCK_NAMES.FORWARD_VAR:\n      return `Move ${args.var} Steps`;\n\n    case BLOCK_NAMES.INCREMENT_VAR:\n      return `Increase ${args.var} by 1`;\n\n    default:\n      return name;\n  }\n}\n\n// Check if a program is structurally correct\n// e.g. ensure all repeat blocks have an 'end repeat'\n// This function also adds metadata to block that's useful for execution\n// e.g. for 'end' blocks, keep tracks of where the jump back to should be\nexport const validate_program = (program, variables) => {\n  const augmentedProgram = [];\n  const stack = [];\n  for (let i = 0; i < program.length; i++) {\n\n    // Make a copy of the instruction before mutation\n    const instruction = Object.assign({}, program[i]);\n    instruction.meta = {id: i};\n\n    if (instruction.args.var !== undefined) {\n      let found = false;\n      for (const variable of variables) {\n        if (variable.name === instruction.args.var) {\n          found = true;\n        }\n      }\n      if (!found) {\n        return {isValid: false, error: `Tenacity does not have a variable called ${instruction.args.var}`};\n      }\n    }\n\n    let top;\n    switch (instruction.block) {\n\n      case BLOCK_NAMES.REPEAT:\n        stack.push({type: BLOCK_NAMES.REPEAT, line: i});\n        const count = parseInt(instruction.args.count);\n        if (isNaN(count)) {\n          return {isValid: false, error: 'Tenacity only understands an integer number of times to repeat!'};\n        }\n        instruction.args.count = count;\n        break;\n\n      case BLOCK_NAMES.END_REPEAT:\n        top = stack.pop();\n        if (top === undefined) {\n          return {isValid: false, error: 'Tenacity can only End Repeat after a matching Repeat instruction.'};\n        }\n        else if (top.type !== BLOCK_NAMES.REPEAT) {\n          return {isValid: false, error: 'Tenacity tried to End Repeat, but it looks like some other part of the program needs to be resolved first.'};\n        }\n        instruction.meta.jumpBackTo = top.line;\n        augmentedProgram[top.line].meta.jumpTo = i + 1;\n        break;\n\n      case BLOCK_NAMES.IF_BUTTON_BLUE:\n      case BLOCK_NAMES.IF_CARRYING_BLUE:\n      case BLOCK_NAMES.IF_ICE:\n        stack.push({type: instruction.block, condition: true, line: i});\n        break;\n\n      case BLOCK_NAMES.ELSE:\n        top = stack.pop();\n        if (top === undefined) {\n          return {isValid: false, error: 'Tenacity can only have an Else after a matching If instruction.'};\n        }\n        else if (top.condition !== true) {\n          return {isValid: false, error: 'Tenacity tried to Else, but it looks like some other part of the program needs to be resolved first.'};\n        }\n        else if (augmentedProgram[top.line].meta.elseJump !== undefined) {\n          return {isValid: false, error: 'An If instruction can only have one Else expression.'};\n        }\n        augmentedProgram[top.line].meta.elseIndex = i;\n        augmentedProgram[top.line].meta.elseJump = i + 1;\n        stack.push(top);\n        break;\n\n      case BLOCK_NAMES.END_IF:\n        top = stack.pop();\n        if (top === undefined) {\n          return {isValid: false, error: 'Tenacity can only End If after a matching If instruction.'};\n        }\n        else if (top.condition !== true) {\n          return {isValid: false, error: 'Tenacity tried to End If, but it looks like some other part of the program needs to be resolved first.'};\n        }\n        augmentedProgram[top.line].meta.jumpTo = i + 1;\n        const elseIndex = augmentedProgram[top.line].meta.elseIndex;\n        if (elseIndex !== undefined) {\n          augmentedProgram[elseIndex].meta.jumpTo = i + 1;\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    augmentedProgram.push(instruction);\n  }\n\n  // Make sure nothing is left on the stack\n  const top = stack.pop();\n  if (top !== undefined) {\n    if (top.type === BLOCK_NAMES.REPEAT) {\n      return {isValid: false, error: 'Tenacity found a Repeat instruction, but it needs a matching End Repeat instruction so that it knows when to stop repeating.'};\n    }\n    else if (top.condition === true) {\n      return {isValid: false, error: 'Tenacity found an If instruction, but it needs a matching End If instruction so that it knows when the condition ends.'};\n    }\n    else {\n      // TODO: Shouldn't ever come up, but make this error more descriptive just in case.\n      return {isValid: false, error: 'Tenacity found a mistake in the program.'};\n    }\n  }\n\n  return {isValid: true, augmentedProgram}\n}","export default __webpack_public_path__ + \"static/media/button_red_unpressed.86163d0f.svg\";","export default __webpack_public_path__ + \"static/media/button_red_pressed.108133ca.svg\";","export default __webpack_public_path__ + \"static/media/button_blue_unpressed.11c1cc6b.svg\";","export default __webpack_public_path__ + \"static/media/button_blue_pressed.14541aa3.svg\";","export default __webpack_public_path__ + \"static/media/bridge.76f2dfc2.svg\";","export default __webpack_public_path__ + \"static/media/lab.18e56e2e.svg\";","export default __webpack_public_path__ + \"static/media/rocket.0dec99f9.svg\";","export default __webpack_public_path__ + \"static/media/rover.b107911f.svg\";","export default __webpack_public_path__ + \"static/media/rover_flipped.1ce4141d.svg\";","export default __webpack_public_path__ + \"static/media/mercury_crater.af0b0b06.svg\";","export default __webpack_public_path__ + \"static/media/rock_blue.2c73d521.svg\";","export default __webpack_public_path__ + \"static/media/rock_red.31b2b06f.svg\";","export default __webpack_public_path__ + \"static/media/volcano.957d8bd8.svg\";","export default __webpack_public_path__ + \"static/media/mountain.7dc848e1.svg\";","export default __webpack_public_path__ + \"static/media/photograph.86f8d649.svg\";","export default __webpack_public_path__ + \"static/media/box_samples.3014cc1b.svg\";","export default __webpack_public_path__ + \"static/media/box_red.566ab204.svg\";","export default __webpack_public_path__ + \"static/media/box_blue.ee76ee2b.svg\";","// Game dimensions\nexport const CANVAS_WIDTH = 800;\nexport const CANVAS_HEIGHT = 600;\nexport const GROUND_HEIGHT = 100;\n","import button_red_unpressed from '../assets/button_red_unpressed.svg';\nimport button_red_pressed from '../assets/button_red_pressed.svg';\nimport button_blue_unpressed from '../assets/button_blue_unpressed.svg';\nimport button_blue_pressed from '../assets/button_blue_pressed.svg';\nimport bridge from '../assets/bridge.svg';\nimport lab from '../assets/lab.svg';\nimport rocket from '../assets/rocket.svg';\nimport rover from '../assets/rover.svg';\nimport rover_flipped from '../assets/rover_flipped.svg';\nimport mercury_crater from '../assets/mercury_crater.svg';\nimport venus_crater from '../assets/mercury_crater.svg';\nimport rock_blue from '../assets/rock_blue.svg';\nimport rock_red from '../assets/rock_red.svg';\nimport volcano from '../assets/volcano.svg';\nimport mountain from '../assets/mountain.svg';\nimport photograph from '../assets/photograph.svg';\nimport box_samples from '../assets/box_samples.svg';\nimport box_red from '../assets/box_red.svg';\nimport box_blue from '../assets/box_blue.svg';\n\nimport { CANVAS_HEIGHT, GROUND_HEIGHT } from './constants';\n\nexport const OBJECTS = {\n  BRIDGE: {\n    images: [bridge],\n    height: 13.5,\n    width: 90\n  },\n  BOX_SAMPLES: {\n    images: [box_samples],\n    height: 90,\n    width: 90\n  },\n  BOX_RED: {\n    images: [box_red],\n    height: 90,\n    width: 90\n  },\n  BOX_BLUE: {\n    images: [box_blue],\n    height: 90,\n    width: 90\n  },\n  ROVER: {\n    images: [rover, rover_flipped],\n    height: 80,\n    width: 80\n  },\n  BUTTON_BLUE: {\n    images: [button_blue_unpressed, button_blue_pressed],\n    height: 40,\n    width: 40\n  },\n  BUTTON_RED: {\n    images: [button_red_unpressed, button_red_pressed],\n    height: 40,\n    width: 40\n  },\n  ROCKET: {\n    images: [rocket],\n    height: 100,\n    width: 57\n  },\n  LAB: {\n    images: [lab],\n    height: 250,\n    width: 150 \n  },\n  MERCURY_CRATER: {\n    images: [mercury_crater],\n    height: 30,\n    width: 90\n  },\n  VENUS_CRATER: {\n    images: [venus_crater],\n    height: 30,\n    width: 90\n  },\n  ROCK_RED: {\n    images: [rock_red],\n    height: 30,\n    width: 40\n  },\n  ROCK_BLUE: {\n    images: [rock_blue],\n    height: 30,\n    width: 40\n  },\n  VOLCANO: {\n    images: [volcano],\n    height: 100,\n    width: 100,\n  },\n  MOUNTAIN: {\n    images: [mountain],\n    height: 100,\n    width: 100,\n  },\n  PHOTOGRAPH: {\n    images: [photograph],\n    height: 60,\n    width: 60\n  }\n}\n\n// Get y position of object based on its elevation off the ground\nexport const obj_y = (object, elevation = 0) => (\n  CANVAS_HEIGHT - GROUND_HEIGHT - object.height - elevation \n)","// Game is divided into Planets and Missions\n\nimport { BLOCK_NAMES, EVENTS } from './blocks';\nimport { OBJECTS } from './objects';\n\n// Defaults for objects\nconst defaults = {\n  elevation: 0,\n  opacity: 1,\n  costumeNumber: 0,\n}\nconst d = defaults;\n\nexport const PLANETS = [\n  {\n    name: 'Mercury',\n    introConfig: {\n      size: 15,\n      scale: 2,\n      orbitDuration: 10000,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#bfbaac',\n      sky: '#7d705b',\n      text: 'black'\n    },\n    briefing: 'The Tenacity rover has arrived on Mercury. Use the control panel to help Tenacity complete its missions.',\n    missions: [\n      {\n        objective: 'Navigate Tenacity back to the spacecraft for refueling.',\n        hint: 'Click on a function to add it to Tenacity\\'s program. Click \"Submit Instructions\" when the program is ready to run.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 2]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 500},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 300},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 500, message: 'Tenacity did not make it back to spacecraft.'}\n        ]\n      },\n      {\n        objective: 'Get close to the crater to explore it. But be careful not to fall in!',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'crater', object: OBJECTS.MERCURY_CRATER, x: 500, elevation: -30, allowFall: true},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 100},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 400, message: 'Tenacity did not make it close enough to crater.'}\n        ]\n      },\n      {\n        objective: 'Return the rock sample back to the rocket.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.TURN, 1]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'crater', object: OBJECTS.MERCURY_CRATER, x: 500, elevation: -30, allowFall: true},\n          {...d, id: 'rock', object: OBJECTS.ROCK_RED, x: 400, elevation: -30, canCarry: true},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 100, message: 'Tenacity did not make it back to rocket.'},\n          {category: 'rover_carry', value: 'rock', message: 'Tenacity does not have rock sample.'},\n        ]\n      },\n      {\n        objective: \"We're done here on Mercury! Launch the rocket to head to the next planet.\",\n        blocks: [\n          [BLOCK_NAMES.LAUNCH_ROCKET, 1]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 400},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'event', value: EVENTS.ROCKET_LAUNCH, message: 'Rocket did not launch.'}\n        ]\n      }\n    ]\n  },\n  {\n    name: 'Venus',\n    introConfig: {\n      size: 20,\n      scale: 1.7,\n      orbitDuration: 28900,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#ae7c43',\n      sky: '#dbb78f',\n      text: 'black'\n    },\n    briefing: 'Welcome to Venus! Tenacity\\'s mission is to explore the volcanos on the planet.',\n    missions: [\n      {\n        objective: 'Get to the base of the volcano and take a photo.',\n        hint: 'To repeat a section of a program multiple times, put it in between a \"Repeat\" and \"End Repeat\" instruction.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 1],\n          [BLOCK_NAMES.TAKE_PHOTO, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'volcano', object: OBJECTS.VOLCANO, x: 700},\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 200},\n        ],\n        criteria: [\n          {category: 'photograph', value: 700, message: 'Tenacity did not take photograph of volcano.'},\n        ]\n      },\n      {\n        objective: 'Collect the rock sample.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 2],\n          [BLOCK_NAMES.BRIDGE, 1],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'crater', object: OBJECTS.VENUS_CRATER, x: 300, allowFall: true, elevation: -30},\n          {...d, id: 'rock', object: OBJECTS.ROCK_RED, x: 600, elevation: -30, canCarry: true},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 100},\n        ],\n        criteria: [\n          {category: 'rover_carry', value: 'rock', message: 'Tenacity does not have rock sample.'},\n        ]\n      },\n      {\n        objective: 'Take photos at each of the five volcanos.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 3],\n          [BLOCK_NAMES.TURN, 2],\n          [BLOCK_NAMES.TAKE_PHOTO, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'volcano1', object: OBJECTS.VOLCANO, x: 200},\n          {...d, id: 'volcano2', object: OBJECTS.VOLCANO, x: 300},\n          {...d, id: 'volcano3', object: OBJECTS.VOLCANO, x: 400},\n          {...d, id: 'volcano4', object: OBJECTS.VOLCANO, x: 500},\n          {...d, id: 'volcano5', object: OBJECTS.VOLCANO, x: 600},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'photograph', value: 200, message: 'Tenacity did not take photograph of all volcano.'},\n          {category: 'photograph', value: 300, message: 'Tenacity did not take photograph of all volcano.'},\n          {category: 'photograph', value: 400, message: 'Tenacity did not take photograph of all volcano.'},\n          {category: 'photograph', value: 500, message: 'Tenacity did not take photograph of all volcano.'},\n          {category: 'photograph', value: 600, message: 'Tenacity did not take photograph of all volcano.'},\n        ]\n      },\n      {\n        objective: 'Drop off both rock samples at the rocket.',\n        hint: 'Tenacity can only hold one object at a time.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5],\n          [BLOCK_NAMES.TURN, 1],\n          [BLOCK_NAMES.BRIDGE, 1],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.DROP, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'crater1', object: OBJECTS.VENUS_CRATER, x: 500, allowFall: true, elevation: -30},\n          {...d, id: 'rock1', object: OBJECTS.ROCK_BLUE, x: 600, elevation: -30, canCarry: true},\n          {...d, id: 'crater2', object: OBJECTS.VENUS_CRATER, x: 300, allowFall: true, elevation: -30},\n          {...d, id: 'rock2', object: OBJECTS.ROCK_BLUE, x: 200, elevation: -30, canCarry: true},\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 400},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'location_x', id: 'rock1', value: 400, message: 'Both rock samples were not dropped off at rocket.'},\n          {category: 'location_x', id: 'rock2', value: 400, message: 'Both rock samples were not dropped off at rocket.'},\n        ]\n      },\n      {\n        objective: \"We're done here on Venus! Launch the rocket to head to the next planet.\",\n        blocks: [\n          [BLOCK_NAMES.LAUNCH_ROCKET, 1]\n        ],\n        items: [\n          {...d, id: 'crater1', object: OBJECTS.VENUS_CRATER, x: 500, allowFall: true, elevation: -30},\n          {...d, id: 'crater2', object: OBJECTS.VENUS_CRATER, x: 300, allowFall: true, elevation: -30},\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 400},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'event', value: EVENTS.ROCKET_LAUNCH, message: 'Rocket did not launch.'}\n        ]\n      }\n    ]\n  },\n  {\n    name: 'Earth',\n    introConfig: {\n      size: 21,\n      scale: 1.3,\n      orbitDuration: 47000,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#34bf9a',\n      sky: '#9df2ee',\n      text: 'black'\n    },\n    briefing: 'The Tenacity rover has arrived on Earth. Deliver the rock samples to the lab before proceeding to the next planet.',\n    missions: [\n      {\n        objective: 'Unlock the lab. To unlock the lab, press all of the blue buttons without pressing the red button.',\n        hint: 'Any instructions between an \"If\" and an \"End If\" instruction will only run if the \"If\" condition is true.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 1],\n          [BLOCK_NAMES.PRESS_BUTTON, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n          [BLOCK_NAMES.IF_BUTTON_BLUE, 1],\n          [BLOCK_NAMES.END_IF, 1],\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'lab', object: OBJECTS.LAB, x: 400},\n          {...d, id: 'button1', object: OBJECTS.BUTTON_BLUE, x: 400, elevation: 70, button: true},\n          {...d, id: 'button2', object: OBJECTS.BUTTON_RED, x: 500, elevation: 70, button: true},\n          {...d, id: 'button3', object: OBJECTS.BUTTON_BLUE, x: 600, elevation: 70, button: true},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 300},\n        ],\n        criteria: [\n          {category: 'button_press', id: 'button1', value: true, message: 'Tenacity did not press all blue buttons.'},\n          {category: 'button_press', id: 'button2', value: false, message: 'Tenacity pressed a red button.'},\n          {category: 'button_press', id: 'button3', value: true, message: 'Tenacity did not press all blue buttons.'},\n        ]\n      },\n      {\n        objective: 'There is one rock sample in the \"Samples\" box. Move it to the appropriately labeled color box.',\n        hint: 'Red rocks should go to the \"Red\" box and blue rocks should go to the \"Blue\" box.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.DROP, 1],\n          [BLOCK_NAMES.IF_CARRYING_BLUE, 1],\n          [BLOCK_NAMES.END_IF, 1],\n        ],\n        items: [\n          {...d, id: 'rock', object: OBJECTS.ROCK_BLUE, x: 200, elevation: -50, canCarry: true, color: 'blue'},\n          {...d, id: 'box_samples', object: OBJECTS.BOX_SAMPLES, x: 200, elevation: -100},\n          {...d, id: 'box_red', object: OBJECTS.BOX_RED, x: 400, elevation: -100},\n          {...d, id: 'box_blue', object: OBJECTS.BOX_BLUE, x: 500, elevation: -100},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 200},\n        ],\n        criteria: [\n          {category: 'location_x', id: 'rock', value: 500, message: 'Rock sample did not end up in blue box.'},\n        ]\n      },\n      {\n        objective: 'There is one rock sample in the \"Samples\" box. Move it to the appropriately labeled color box.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.DROP, 1],\n          [BLOCK_NAMES.IF_CARRYING_BLUE, 1],\n          [BLOCK_NAMES.ELSE, 1],\n          [BLOCK_NAMES.END_IF, 1],\n        ],\n        items: [\n          {...d, id: 'rock', object: OBJECTS.ROCK_RED, x: 200, elevation: -50, canCarry: true, color: 'red'},\n          {...d, id: 'box_samples', object: OBJECTS.BOX_SAMPLES, x: 200, elevation: -100},\n          {...d, id: 'box_red', object: OBJECTS.BOX_RED, x: 500, elevation: -100},\n          {...d, id: 'box_blue', object: OBJECTS.BOX_BLUE, x: 400, elevation: -100},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 200},\n        ],\n        criteria: [\n          {category: 'location_x', id: 'rock', value: 500, message: 'Rock sample did not end up in red box.'},\n        ]\n      },\n      {\n        objective: 'There are three rock samples in the \"Samples\" box. Move each of them to the appropriately labeled color box.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 7],\n          [BLOCK_NAMES.TURN, 4],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.DROP, 2],\n          [BLOCK_NAMES.IF_CARRYING_BLUE, 1],\n          [BLOCK_NAMES.ELSE, 1],\n          [BLOCK_NAMES.END_IF, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'rock1', object: OBJECTS.ROCK_RED, x: 200, elevation: -50, canCarry: true, color: 'red'},\n          {...d, id: 'rock2', object: OBJECTS.ROCK_BLUE, x: 200, elevation: -51, canCarry: true, color: 'blue'},\n          {...d, id: 'rock3', object: OBJECTS.ROCK_RED, x: 200, elevation: -52, canCarry: true, color: 'red'},\n          {...d, id: 'box_samples', object: OBJECTS.BOX_SAMPLES, x: 200, elevation: -100},\n          {...d, id: 'box_red', object: OBJECTS.BOX_RED, x: 400, elevation: -100},\n          {...d, id: 'box_blue', object: OBJECTS.BOX_BLUE, x: 500, elevation: -100},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 200},\n        ],\n        criteria: [\n          {category: 'location_x', id: 'rock1', value: 400, message: 'Red rock sample did not end up in red box.'},\n          {category: 'location_x', id: 'rock2', value: 500, message: 'Blue rock sample did not end up in blue box.'},\n          {category: 'location_x', id: 'rock3', value: 400, message: 'Red rock sample did not end up in red box.'},\n        ]\n      }, \n      {\n        objective: \"We're done here on Earth! Launch the rocket to head to the next planet.\",\n        blocks: [\n          [BLOCK_NAMES.LAUNCH_ROCKET, 1]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 400},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'event', value: EVENTS.ROCKET_LAUNCH, message: 'Rocket did not launch.'}\n        ]\n      }\n    ]\n  },\n  {\n    name: 'Mars',\n    introConfig: {\n      size: 11,\n      scale: 1,\n      orbitDuration: 88000,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#942c25',\n      sky: '#e67870',\n      text: 'black'\n    },\n    briefing: 'The Tenacity rover has arrived on Mars, the last planet on this journey.',\n    missions: [\n      {\n        objective: 'Take a photograph at the base of the mountain.',\n        hint: 'Tenacity store data in variables, found in the upper right. Some instructions let you type the name of a variable to control how the instruction behaves.',\n        variables: [\n          {name: 'x', value: 0},\n        ],\n        blocks: [\n          [BLOCK_NAMES.FORWARD_VAR, 1],\n          [BLOCK_NAMES.INCREMENT_VAR, 4],\n          [BLOCK_NAMES.TAKE_PHOTO, 1],\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'mountain', object: OBJECTS.MOUNTAIN, x: 500},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 200},\n        ],\n        criteria: [\n          {category: 'photograph', value: 500, message: 'Tenacity did not take photograph of mountain.'},\n        ]\n      },\n      {\n        objective: 'Test each mountain for the presence of ice. Set the variable x to the number of mountains where ice was found.',\n        variables: [\n          {name: 'x', value: 0},\n        ],\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 1],\n          [BLOCK_NAMES.INCREMENT_VAR, 2],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n          [BLOCK_NAMES.IF_ICE, 1],\n          [BLOCK_NAMES.END_IF, 1],\n        ],\n        items: [\n          {...d, id: 'mountain1', object: OBJECTS.MOUNTAIN, x: 200, ice: false},\n          {...d, id: 'mountain2', object: OBJECTS.MOUNTAIN, x: 300, ice: true},\n          {...d, id: 'mountain3', object: OBJECTS.MOUNTAIN, x: 400, ice: false},\n          {...d, id: 'mountain4', object: OBJECTS.MOUNTAIN, x: 500, ice: true},\n          {...d, id: 'mountain5', object: OBJECTS.MOUNTAIN, x: 600, ice: false},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 100},\n        ],\n        criteria: [\n          {category: 'variable', id: 'x', value: 2, message: 'Tenacity did not calculate x correctly.'},\n        ]\n      },\n      {\n        objective: 'Take a photograph at the base of each mountain. Don\\'t take more photographs than you need.',\n        variables: [\n          {name: 'x', value: 0},\n        ],\n        blocks: [\n          [BLOCK_NAMES.FORWARD_VAR, 1],\n          [BLOCK_NAMES.INCREMENT_VAR, 4],\n          [BLOCK_NAMES.TAKE_PHOTO, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'mountain1', object: OBJECTS.MOUNTAIN, x: 200},\n          {...d, id: 'mountain2', object: OBJECTS.MOUNTAIN, x: 400},\n          {...d, id: 'mountain3', object: OBJECTS.MOUNTAIN, x: 700},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 100},\n        ],\n        criteria: [\n          {category: 'photograph', value: 200, message: 'Tenacity did not take a photograph of each mountain.'},\n          {category: 'photograph', value: 400, message: 'Tenacity did not take a photograph of each mountain.'},\n          {category: 'photograph', value: 700, message: 'Tenacity did not take a photograph of each mountain.'},\n          {category: 'max_photographs', value: 3, message: 'Tenacity took too many photographs.'},\n        ]\n      },\n      {\n        objective: 'Bring all of the red rock samples back to the rocket. Do not move the blue rocks.',\n        variables: [\n          {name: 'x', value: 0},\n        ],\n        blocks: [\n          [BLOCK_NAMES.FORWARD_VAR, 5],\n          [BLOCK_NAMES.TURN, 2],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.DROP, 1],\n          [BLOCK_NAMES.INCREMENT_VAR, 4],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'rock1', object: OBJECTS.ROCK_RED, x: 200, elevation: -50, canCarry: true, color: 'red'},\n          {...d, id: 'rock2', object: OBJECTS.ROCK_RED, x: 400, elevation: -50, canCarry: true, color: 'red'},\n          {...d, id: 'rock3', object: OBJECTS.ROCK_RED, x: 600, elevation: -50, canCarry: true, color: 'red'},\n          {...d, id: 'rock4', object: OBJECTS.ROCK_BLUE, x: 300, elevation: -50, canCarry: true, color: 'blue'},\n          {...d, id: 'rock5', object: OBJECTS.ROCK_BLUE, x: 500, elevation: -50, canCarry: true, color: 'blue'},\n          {...d, id: 'rock6', object: OBJECTS.ROCK_BLUE, x: 700, elevation: -50, canCarry: true, color: 'blue'},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 100},\n        ],\n        criteria: [\n          {category: 'location_x', id: 'rock1', value: 100, message: 'Rock samples were not dropped off at rocket.'},\n          {category: 'location_x', id: 'rock2', value: 100, message: 'Rock samples were not dropped off at rocket.'},\n          {category: 'location_x', id: 'rock3', value: 100, message: 'Rock samples were not dropped off at rocket.'},\n          {category: 'location_x', id: 'rock4', value: 300, message: 'A blue rock was moved.'},\n          {category: 'location_x', id: 'rock5', value: 500, message: 'A blue rock was moved.'},\n          {category: 'location_x', id: 'rock6', value: 700, message: 'A blue rock was moved.'},\n        ]\n      },\n      {\n        objective: \"We're done here on Mars! Launch the rocket to head home.\",\n        blocks: [\n          [BLOCK_NAMES.LAUNCH_ROCKET, 1]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 400},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'event', value: EVENTS.ROCKET_LAUNCH, message: 'Rocket did not launch.'}\n        ]\n      } \n    ]\n  },\n]","import ReactGA from 'react-ga4';\n\nimport { PLANETS } from './game/missions.js';\n\nReactGA.initialize('G-SBZELV63L8');\n\nconst logAnalytics = process.env.NODE_ENV != 'development';\n\nexport const getMissionLabel = (planetIndex, missionIndex) => {\n  return `${PLANETS[planetIndex].name}, Mission ${missionIndex + 1}`;\n}\n\nexport const logPageview = () => {\n  if (logAnalytics) {\n    ReactGA.send({\n      hitType: 'pageview',\n      page: window.location.pathname + window.location.search\n    });\n  }\n}\n\nexport const logEvent = (event) => {\n  if (logAnalytics) {\n    ReactGA.event(event);\n  }\n}\n","import { BLOCKS, instruction_label, validate_program } from '../game/blocks';\nimport { getMissionLabel, logEvent } from '../analytics';\n\nconst ControlPanel = ({ addToProgram, blocks, onResetProgram, onSubmitProgram,\n                  program, programSubmitted, planetIndex, missionIndex, variables }) => {\n\n  function blockClicked(blockId) {\n    if (!programSubmitted) {\n\n      const block = BLOCKS[blockId];\n\n      // Check for block arguments to add\n      const args = {};\n      if (block.args !== undefined) {\n        for (const arg of block.args) {\n\n          // TEMP: Since right now, the only variable is `x`, automatically set variable to x.\n          // If we ever supported multiple variables, this will need to be removed.\n          if (arg.key === 'var') {\n            args[arg.key] = 'x';\n            continue;\n          }\n\n          args[arg.key] = window.prompt(arg.text);\n          if (args[arg.key] === null) {\n            return;\n          }\n        }\n      }\n      addToProgram(blockId, args);\n    }\n  }\n\n  function submitProgram() {\n\n    const { isValid, augmentedProgram, error } = validate_program(program, variables);\n\n    // Don't allow submission of an invalid program\n    if (!isValid) {\n      logEvent({\n        category: 'Error',\n        action: 'Invalid Program Error',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: error\n      });\n      alert(error);\n      return;\n    }\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    setTimeout(() => {\n      onSubmitProgram(augmentedProgram);\n    }, 1000);\n  }\n\n  return (\n    <div id='control-panel'>\n      <div id='control-panel-container'>\n        <div>\n          <div id='program'>\n            {program.map((instruction, i) => {\n              return <div key={i}>\n                {instruction_label(instruction)}\n              </div>\n            })}\n          </div>\n          {!programSubmitted &&\n          <div>\n            <button onClick={onResetProgram}>Reset</button>\n            <button onClick={submitProgram}>Submit Instructions</button>\n          </div>\n          }\n        </div>\n        <div id='blocks'>\n          {blocks.map(([block, count], i) => {\n            if (count === 0)\n              return false;\n            return <button\n              className='block'\n              key={i}\n              onClick={() => blockClicked(block)}\n            >\n              {BLOCKS[block].name} (x{count})\n            </button>\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ControlPanel;","import { useState } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport { logEvent } from '../analytics';\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\nimport '../css/GameIntro.css';\n\nconst BUTTON_WIDTH = 200;\nconst BUTTON_HEIGHT = 80;\n\nconst GameIntro = ({ onCompleteIntro, onStartPlaying }) => {\n\n  // State to keep track of whether play button has been clicked\n  const [start, setStart] = useState(false);\n\n  // Fade in and fade out for titles\n  const titleSpring = useSpring({\n    to: {opacity: start ? 0 : 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    onRest: () => {\n      if (start)\n        onCompleteIntro();\n    }\n  });\n\n  // Start playing music and begin game\n  const completeIntro = () => {\n    logEvent({\n      'category': 'Game',\n      'action': 'Play Game'\n    });\n    onStartPlaying();\n    setStart(true);\n  };\n\n  return (\n    <a.g opacity={titleSpring.opacity}>\n\n      {/* Main title */}\n      <text\n        x='50%'\n        y='30%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        className='titleText'\n        opacity={titleSpring.opacity}\n      >\n        Tenacity\n      </text>\n\n      {/* Subtitle */}\n      <text\n        x='50%'\n        y='45%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        className='subheadText'\n        opacity={titleSpring.opacity}\n      >\n        A game by Brian Yu\n      </text>\n\n      {/* Play button */}\n      <rect\n        x={(CANVAS_WIDTH - BUTTON_WIDTH) / 2}\n        y='360'\n        height={BUTTON_HEIGHT}\n        width={BUTTON_WIDTH}\n        rx={20}\n        fill='white'\n        className='hoverable'\n        onClick={completeIntro}\n      />\n      <text\n        x={CANVAS_WIDTH / 2}\n        y='400'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        style={{ fontSize: '48px', fill: 'black' }}\n        className='hoverable'\n        onClick={completeIntro}\n      >\n        Play\n      </text>\n\n    </a.g>\n  );\n}\n\nexport default GameIntro;","import rover from '../assets/rover.svg';\n\nconst GameOver = () => {\n  return (<div style={{ maxWidth: '500px' }}>\n    <img src={rover} alt='Tenacity' style={{ width: 150 }} />\n    <h1>Congratulations!</h1>\n    <div>\n      You've successfully navigated the Tenacity rover\n      to successfully completion of all of its missions.\n      Thank you for playing!\n    </div>\n    <br/>\n    <h2>About Tenacity</h2>\n    <div>\n      I'm Brian Yu, and I developed Tenacity as part of a project at\n      Harvard's Graduate School of Education.\n      I would love to hear your thoughts and feedback on the experience: you can reach me\n      at <a style={{color: 'white'}} href=\"mailto:brian@brianyu.me\">brian@brianyu.me</a>.\n    </div>\n  </div>);\n}\n\nexport default GameOver;","import { CANVAS_HEIGHT, CANVAS_WIDTH, GROUND_HEIGHT } from '../game/constants';\n\nconst SHOW_TICKS = true;\nconst TICK_INTERVAL = 100;\nconst TICK_WIDTH = 1;\nconst TICK_HEIGHT = 10;\n\nconst Ground = ({ planet }) => {\n  return (\n    <g>\n      <rect\n        x={0} y={CANVAS_HEIGHT - GROUND_HEIGHT} width={CANVAS_WIDTH} height={GROUND_HEIGHT}\n        fill={planet.colors.main}\n      />\n      {SHOW_TICKS && [...Array(CANVAS_WIDTH / TICK_INTERVAL).keys()].map(i => {\n        return <rect\n          key={i}\n          x={i * TICK_INTERVAL - (TICK_WIDTH / 2)}\n          y={CANVAS_HEIGHT - GROUND_HEIGHT}\n          width={TICK_WIDTH}\n          height={TICK_HEIGHT}\n        />\n      })}\n    </g>\n  );\n}\n\nexport default Ground;","import { useState, useEffect } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\nimport { PLANETS } from '../game/missions';\n\nconst START_RADIUS = 100;\nconst RADIUS_INCREMENT = 50;\n\nconst PlanetIntro = ({ onCompleteIntro, onZoomIntro, planetIndex }) => {\n\n  // Determine current planet and scale\n  const planet = PLANETS[planetIndex];\n  const scale = planet.introConfig.scale;\n\n  // State to keep track of stage in animation\n  const [resetOrbit, setResetOrbit] = useState(false);\n  const [exitIntro, setExitIntro] = useState(false);\n  const [planetZoom, setPlanetZoom] = useState(false);\n  const [planetText, setPlanetText] = useState(false);\n\n  // Fade in for sun\n  const sunSpring = useSpring({\n    to: {opacity: 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    delay: 1500,\n  });\n\n  // Fade in for planets\n  const planetOpacitySpring = useSpring({\n    to: {opacity: 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    delay: 3000\n  })\n\n  // Angle for planets' orbit\n  const planetMotionSpring = useSpring({\n    to: {angle: 4 * Math.PI},\n    from: {angle: 0},\n    config: {duration: 20000},\n    reset: resetOrbit,\n    onRest: () => setResetOrbit(state => !state)\n  });\n\n  // Planet zoom\n  const planetZoomSpring = useSpring({\n    to: {zoom: planetZoom ? 1 : 0},\n    from: {zoom: 0},\n    config: {duration: 1000},\n    onRest: () => {\n      if (planetZoom) {\n        onZoomIntro();\n        setPlanetText(true);\n      } \n    }\n  });\n\n  // Fade out for scene\n  const sceneExitSpring = useSpring({\n    to: {opacity: exitIntro ? 0: 1},\n    from: {opacity: 1},\n    config: {duration: 2000},\n    onRest: () => {\n      if (exitIntro) {\n        onCompleteIntro();\n      }\n    }\n  });\n\n  // Fade in for planet text\n  const planetTextSpring = useSpring({\n    to: {opacity: planetText ? 1: 0},\n    from: {opacity: 0},\n    config: {duration: 1000},\n    onRest: () => {\n      if (planetText) {\n        setTimeout(() => {\n          setExitIntro(true);\n        }, 2000);\n      }\n    }\n  })\n\n  // Generate orbit and planet for each visible planet\n  const renderedPlanets = PLANETS.slice(0, 1 + planetIndex).map((planet, i) => {\n\n    const isLastPlanet = i == planetIndex;\n\n    const radius = START_RADIUS + RADIUS_INCREMENT * i;\n    return <a.g key={i} opacity={planetOpacitySpring.opacity}>\n      <a.circle\n        cx={CANVAS_WIDTH / 2}\n        cy={CANVAS_HEIGHT / 2}\n        r={radius * scale}\n        fillOpacity={0}\n        stroke={'white'}\n        strokeWidth={2}\n      />\n      <a.circle\n        cx={planetMotionSpring.angle.interpolate(theta =>\n          (CANVAS_WIDTH / 2) + scale * (radius * Math.cos(theta * (10000 / planet.introConfig.orbitDuration))))\n        }\n        cy={planetMotionSpring.angle.interpolate(theta =>\n          (CANVAS_HEIGHT / 2) - scale * (radius * Math.sin(theta * (10000 / planet.introConfig.orbitDuration))))\n        }\n        r={isLastPlanet ?\n            planetZoomSpring.zoom.interpolate(zoom => \n              planet.introConfig.size * scale + zoom * (1600 - planet.introConfig.size * scale)\n            )\n            : planet.introConfig.size * scale}\n        style={{ fill: planet.colors.main }}\n      /> \n    </a.g>;\n  });\n\n  // Fade out intro screen\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setPlanetZoom(true);\n    }, 10000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <a.g opacity={sceneExitSpring.opacity}>\n\n      {/* Sun */}\n      <a.circle\n        cx={CANVAS_WIDTH / 2}\n        cy={CANVAS_HEIGHT / 2}\n        r={50 * scale}\n        style={{ fill: '#f0f067' }}\n        opacity={sunSpring.opacity}  \n      />\n\n      {/* Other Planets */}\n      {renderedPlanets}\n\n      <a.text\n        x='50%'\n        y='50%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        style={{ fontSize: '80px', fill: planet.introConfig.textColor }}\n        opacity={planetTextSpring.opacity}\n      >\n        {planet.name}\n      </a.text>\n    </a.g>\n  );\n}\n\nexport default PlanetIntro;","import { CANVAS_WIDTH } from '../game/constants';\n\nconst PADDING = 15;\nconst CIRCLE_RADIUS = 20;\n\nconst ProgressIndicator = ({ planet, completedMissions }) => {\n  return (\n    <g>\n      <text\n        textAnchor='end'\n        dominantBaseline='hanging'\n        x={CANVAS_WIDTH - PADDING}\n        y={PADDING}\n        style={{ fill: planet.colors.text, fontSize: '24px' }}\n      >\n        {planet.name}\n      </text>\n\n      {planet.missions.map((mission, i) => {\n        return (\n          <circle\n            key={i}\n            cx={PADDING + CIRCLE_RADIUS + (CIRCLE_RADIUS * 2 + PADDING) * i}\n            cy={PADDING + CIRCLE_RADIUS}\n            r={CIRCLE_RADIUS}\n            style={{\n                fill: completedMissions > i ? planet.colors.main : 'rgba(0, 0, 0, 0)',\n                stroke: planet.colors.main,\n                strokeWidth: completedMissions > i ? 0 : 1\n            }}\n          />\n        )\n      })}\n    </g>\n  )\n};\n\nexport default ProgressIndicator;","const Item = ({object, x, y, center, costumeIndex, opacity}) => {\n\n  // Use costume 0 by default\n  if (costumeIndex === undefined) {\n    costumeIndex = 0;\n  }\n\n  return (\n    <image\n      href={object.images[costumeIndex]}\n      height={object.height}\n      x={center === false ? x : x - (object.width / 2)}\n      y={y}\n      opacity={opacity}\n    />\n  )\n}\n\nexport default Item;","import { useState, useEffect } from 'react';\nimport { useSpring, useSprings, animated as a } from 'react-spring';\n\nimport Item from './Item';\n\nimport { CANVAS_WIDTH } from '../game/constants';\nimport { getMissionLabel, logEvent } from '../analytics';\nimport { BLOCK_NAMES, EVENTS } from '../game/blocks';\nimport { PLANETS } from '../game/missions';\nimport { OBJECTS, obj_y } from '../game/objects';\n\nconst STEP_SIZE = 100;\nconst PADDING = 20;\n\nconst AItem = a(Item);\n\nconst Level = ({ planetIndex, missionIndex, onSuccess, onFailure, program, programSubmitted }) => {\n\n  const planet = PLANETS[planetIndex];\n  const mission = planet.missions[missionIndex];\n\n  useEffect(() => {\n    logEvent({\n      category: 'Level',\n      action: 'Start Level',\n      label: getMissionLabel(planetIndex, missionIndex)\n    });\n  }, [missionIndex, planetIndex]);\n\n  const [state, setState] = useState({\n    startTime: new Date(),\n    currentInstruction: 0,\n    instructionsCompleted: 0,\n    items: mission.items,\n    winMessage: false,\n    loseMessage: false,\n    photographs: [], // x locations of photographs\n    bridges: [], // x locations of bridges\n    buttons: [], // ids of buttons that have been pressed\n    variables: (mission.variables || []).map(variable => ({...variable})), // values for variables\n    loopMetadata: {}, // how many times has each loop run so far\n    events: [] // events that have taken place\n  });\n\n  const { startTime, currentInstruction, instructionsCompleted, items, photographs,\n          bridges, buttons, variables, winMessage, loseMessage } = state;\n\n  // Determine index of rover\n  const roverIndex = items.findIndex(item => item.id === 'rover');\n  const rover = roverIndex !== -1 ? items[roverIndex] : null;\n  const rocketIndex = items.findIndex(item => item.id === 'rocket');\n  const rocket = rocketIndex !== -1 ? items[rocketIndex] : null;\n\n  // Check if level is won\n  function checkWin() {\n    for (let i = 0; i < mission.criteria.length; i++) {\n      if (!checkCriteria(mission.criteria[i])) {\n        return {isWin: false, message: mission.criteria[i].message || true};\n      }\n    }\n    return {isWin: true};\n  }\n\n  // Check if particular criteria is true\n  function checkCriteria(criterion) {\n    switch (criterion.category) {\n      \n      // Confirm x location of rover\n      case 'rover_x':\n        if (criterion.value === rover.x) {\n          return true;\n        }\n        return false;\n\n      case 'location_x':\n        for (const item of items) {\n          if (item.id === criterion.id && item.x === criterion.value) {\n            return true;\n          }\n        }\n        return false;\n\n      case 'rover_carry':\n        for (const item of items) {\n          if (item.id === criterion.value && item.carried === true) {\n            return true;\n          }\n        }\n        return false;\n      \n      // Confirm that event took place\n      case 'event':\n        for (const event of state.events) {\n          if (criterion.value === event) {\n            return true;\n          }\n        }\n        return false;\n\n      case 'photograph':\n        for (const photograph of photographs)  {\n          if (criterion.value === photograph) {\n            return true;\n          };\n        }\n        return false;\n\n      case 'max_photographs':\n        return photographs.length <= criterion.value;\n\n      case 'button_press':\n        // If button is pressed, return true if that was the goal, false otherwise\n        for (const button of buttons) {\n          if (button === criterion.id) {\n            return criterion.value;\n          }\n        }\n        return !criterion.value;\n\n      case 'variable':\n        for (const variable of variables) {\n          if (variable.name === criterion.id && variable.value === criterion.value) {\n            return true;\n          }\n        }\n        return false;\n\n      default:\n        console.log('Error: Unknown criterion.');\n        return false;\n    }\n\n  }\n\n  // Check to see if item will fall into something that allows falling\n  function checkFall(target) {\n    \n    // If there's a bridge at target's x elevation, don't fall\n    for (const bridge of bridges) {\n      if (bridge === target.x) {\n        return false;\n      }\n    }\n\n    // If there's no bridge, check for an item that allows falling\n    for (const item of items) {\n      if (item.allowFall && item.x === target.x && target.elevation === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Checks if a bridge can be built at a particular x location\n  // Bridges can only be built over fallable items\n  function canBuildBridge(x) {\n    for (const item of items) {\n      if (item.allowFall && item.x === x) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Get object to pick up; closest object to rover, null if none\n  function getPickupObject() {\n    let obj = null; \n    for (const item of items) {\n      if (!item.carried && item.canCarry &&\n          item !== rover && item.x === rover.x && (obj === null || item.elevation > obj.elevation)) {\n        obj = item;\n      }\n    }\n    return obj;\n  }\n\n  // Get the object that is currently carried\n  function getCarriedObject() {\n    for (const item of items) {\n      if (item.carried) {\n        return item;\n      }\n    }\n    return null;\n  }\n\n  // Get the button where the rover currently is\n  function getCurrentButton() {\n    for (const item of items) {\n      if (item.button === true && item.x === rover.x) {\n        return item;\n      }\n    }\n    return null;\n  }\n\n  function getVariableValue(name) {\n    for (const variable of variables) {\n      if (variable.name === name) {\n        return variable.value;\n      }\n    }\n    return null;\n  }\n\n  // Takes a list of items and returns items with the util value for the rover flipped\n  // Doesn't functionally change anything about the items, but triggers an animation\n  function roverNoop(items) {\n    return items.map((item, i) => i === roverIndex ? {\n      ...rover,\n      util: (rover.util || 0) + 1\n    } : item);\n  }\n\n  // Run an instruction\n  if (programSubmitted && currentInstruction < program.length &&\n      instructionsCompleted === currentInstruction && !winMessage && !loseMessage) {\n    const instruction = program[currentInstruction];\n\n    // Decide which instruction to use\n    let obj;\n    let instr;\n    switch (instruction.block) {\n\n      // Move the rover forward\n      case BLOCK_NAMES.FORWARD:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: state.items.map((item, i) => i === roverIndex || item.carried === true ? {\n              ...item,\n              x: rover.costumeNumber === 0 ? item.x + STEP_SIZE : item.x - STEP_SIZE\n            } : item),\n        }));\n        break;\n\n        case BLOCK_NAMES.FORWARD_VAR:\n          let amt = getVariableValue(instruction.args.var);\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: state.items.map((item, i) => i === roverIndex || item.carried === true ? {\n                ...item,\n                x: rover.costumeNumber === 0 ? item.x + amt * STEP_SIZE : item.x - amt * STEP_SIZE\n              } : item),\n          }));\n          break;\n\n      case BLOCK_NAMES.TURN:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: state.items.map((item, i) => i === roverIndex ? {\n              ...rover,\n              costumeNumber: rover.costumeNumber === 0 ? 1 : 0\n            } : item),\n        }));\n        break;\n\n      case BLOCK_NAMES.PICK_UP:\n        obj = getPickupObject();\n        if (obj !== null) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: state.items.map((item, i) => item === obj ? {\n              ...obj,\n              elevation: 30,\n              prevElevation: obj.elevation,\n              carried: true\n            } : i === roverIndex ? {\n              ...rover,\n              util: (rover.util || 0) + 1\n            } : item),\n          }))\n        } else {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.DROP:\n        obj = getCarriedObject();\n        if (obj !== null) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: state.items.map((item, i) => item === obj ? {\n              ...obj,\n              elevation: obj.prevElevation,\n              carried: false\n            } : i === roverIndex ? {\n              ...rover,\n              util: (rover.util || 0) + 1,\n            } : item),\n          }));\n        } else {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.LAUNCH_ROCKET:\n        const shouldLaunch = rocket && rover && rocket.x === rover.x;\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: shouldLaunch ?\n            state.items.map((item, i) =>\n              i === roverIndex ? {\n                ...rover,\n                opacity: -10\n              } :\n              i === rocketIndex ? {\n                ...rocket,\n                elevation: 600\n              } : item\n            )\n          : state.items,\n          events: [...state.events, EVENTS.ROCKET_LAUNCH]\n        }));\n        break;\n\n      case BLOCK_NAMES.REPEAT:\n        const iterationsCompleted = state.loopMetadata[instruction.meta.id] || 0;\n\n        // Done looping\n        if (iterationsCompleted >= instruction.args.count) {\n          setState(state => ({\n            ...state,\n            currentInstruction: instruction.meta.jumpTo - 1,\n            instructionsCompleted: instruction.meta.jumpTo,\n            items: roverNoop(state.items),\n          }));\n\n        // Need to loop more\n        } else {\n          setState(state => ({\n            ...state,\n            currentInstruction: state.currentInstruction + 1,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n            loopMetadata: {\n              ...state.loopMetadata,\n              [instruction.meta.id]: iterationsCompleted + 1\n            }\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.END_REPEAT:\n        setState(state => ({\n          ...state,\n          currentInstruction: instruction.meta.jumpBackTo,\n          instructionsCompleted: instruction.meta.jumpBackTo,\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      case BLOCK_NAMES.IF_BUTTON_BLUE:\n        let blue_button = false;\n        for (const item of items) {\n          if (item.x === rover.x && item.object === OBJECTS.BUTTON_BLUE) {\n            blue_button = true;\n            break;\n          }\n        }\n        if (blue_button) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n          }));\n        } else {\n          instr = instruction.meta.elseJump === undefined ? instruction.meta.jumpTo : instruction.meta.elseJump;\n          setState(state => ({\n            ...state,\n            currentInstruction: instr - 1,\n            instructionsCompleted: instr,\n            items: roverNoop(state.items),\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.IF_CARRYING_BLUE:\n        obj = getCarriedObject();\n        if (obj && obj.color === 'blue') {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n          }));\n        } else {\n          instr = instruction.meta.elseJump === undefined ? instruction.meta.jumpTo : instruction.meta.elseJump;\n          setState(state => ({\n            ...state,\n            currentInstruction: instr - 1,\n            instructionsCompleted: instr,\n            items: roverNoop(state.items),\n          }));\n        }\n        break;\n\n        case BLOCK_NAMES.IF_ICE:\n          let ice_detected = false;\n          for (const item of items) {\n            if (item.x === rover.x && item.ice === true) {\n              ice_detected = true;\n              break;\n            }\n          }\n          if (ice_detected) {\n            setState(state => ({\n              ...state,\n              instructionsCompleted: state.instructionsCompleted + 1,\n              items: roverNoop(state.items),\n            }));\n          } else {\n            instr = instruction.meta.elseJump === undefined ? instruction.meta.jumpTo : instruction.meta.elseJump;\n            setState(state => ({\n              ...state,\n              currentInstruction: instr - 1,\n              instructionsCompleted: instr,\n              items: roverNoop(state.items),\n            }));\n          }\n          break;\n\n      case BLOCK_NAMES.ELSE:\n        instr = instruction.meta.jumpTo;\n        setState(state => ({\n          ...state,\n          currentInstruction: instr - 1,\n          instructionsCompleted: instr,\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      case BLOCK_NAMES.END_IF:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      case BLOCK_NAMES.PRESS_BUTTON:\n        obj = getCurrentButton();\n        if (obj !== null) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            buttons: [...state.buttons, obj.id],\n            items: state.items.map((item, i) => item.id === obj.id ?\n              {\n                ...item,\n                costumeNumber: 1 \n              }\n              : item\n            ),\n          }));\n        } else {\n          setState(state => ({\n            ...state,\n           loseMessage: 'Tenacity tried to press a button that wasn\\'t there.'\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.TAKE_PHOTO:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          photographs: [...state.photographs, rover.x],\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      case BLOCK_NAMES.BRIDGE:\n        const bridgeX = rover.costumeNumber === 0 ? rover.x + STEP_SIZE : rover.x - STEP_SIZE;\n        if (canBuildBridge(bridgeX)) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            bridges: [...state.bridges, bridgeX],\n            items: roverNoop(state.items),\n          }));\n        } else {\n          setState(state => ({\n            ...state,\n           loseMessage: 'Tenacity can only build bridges over craters.'\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.INCREMENT_VAR:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          variables: state.variables.map((variable) => (\n            variable.name === instruction.args.var ?\n            {\n              ...variable,\n              value: variable.value + 1\n            }\n            : variable\n          )),\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      default:\n        console.log('ERROR: Unknown block.');\n    }\n}\n\nconst winSpring = useSpring({\n  to: {opacity: winMessage ? 1 : 0},\n  from: {opacity: 0},\n  config: {duration: 1000},\n  delay: 500,\n  onRest: () => {\n    if (winMessage) {\n      logEvent({\n        category: 'Level',\n        action: 'Win Level',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: Math.round((new Date() - startTime) / 1000)\n      });\n      setTimeout(() => {\n        onSuccess();\n      }, 2500);\n    }\n  }\n});\n\nconst loseSpring = useSpring({\n  to: {opacity: loseMessage ? 1 : 0},\n  from: {opacity: 0},\n  config: {duration: 1000},\n  delay: 500,\n  onRest: () => {\n    if (loseMessage) {\n      logEvent({\n        category: 'Level',\n        action: 'Lose Level',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: Math.round((new Date() - startTime) / 1000)\n      });\n      setTimeout(() => {\n        onFailure();\n      }, 2500);\n    }\n  }\n});\n\nconst itemSprings = useSprings(items.length, items.map((item, i) => ({\n  to: {\n    x: item.x,\n    elevation: item.elevation,\n    opacity: item.opacity,\n    util: item.util || 0 // utility variable to force transitions\n  },\n  config: {duration: 1000},\n  onRest: () => {\n\n    if (winMessage || loseMessage) {\n      return;\n    }\n\n    // Check for collisions\n    if (i === roverIndex && programSubmitted) {\n      if (checkFall(item)) {\n        setState(state => ({\n          ...state,\n          items: state.items.map((item, i) => i === roverIndex || item.carried === true ? {\n            ...item,\n            elevation: item.elevation - 20\n          } : item),\n          loseMessage: 'Tenacity fell into crater.'\n        }));\n        return;\n      }\n    }\n\n    // Check if program is over\n    if (i === roverIndex && programSubmitted && state.instructionsCompleted === program.length) {\n      const { isWin, message } = checkWin();\n      if (isWin) {\n        setState(state => ({...state, winMessage: true})); \n      } else {\n        setState(state => ({...state, loseMessage: message})); \n      }\n    }\n\n    // When rover completes its action, move on to the next instruction\n    if (i === roverIndex && programSubmitted\n        && state.instructionsCompleted > currentInstruction\n        && state.instructionsCompleted !== program.length) {\n\n      setTimeout(() => {\n        setState(state => ({\n          ...state,\n          currentInstruction: state.currentInstruction + 1\n        }));\n      }, 250);\n    }\n  }\n})));\n\n\n\nreturn (\n    <g>\n      {itemSprings.map((spring, i) => {\n        const item = items[i];\n        return (<AItem\n          key={i}\n          object={item.object}\n          x={spring.x}\n          y={spring.elevation.interpolate(e => obj_y(item.object, e))}\n          costumeIndex={item.costumeNumber}\n          center={item.object.center !== false}\n          opacity={spring.opacity}\n        />);\n      })}\n      {\n        bridges.map((x, i) => {\n          const bridge = OBJECTS.BRIDGE;\n          return (<AItem\n            key={i}\n            object={bridge}\n            x={x}\n            y={obj_y(bridge, -bridge.height)}\n            costumeIndex={0}\n            center={true}\n            opacity={1}\n          />);\n        })\n      }\n      {\n        photographs.map((x, i) => {\n          const photograph = OBJECTS.PHOTOGRAPH;\n          return (<AItem\n            key={i}\n            object={photograph}\n            x={x}\n            y={obj_y(photograph, -80)}\n            costumeIndex={0}\n            center={true}\n            opacity={1}\n          />);\n        })\n      }\n      {\n        variables.map((variable, i) => {\n          return (<text\n            key={i}\n            textAnchor='end'\n            dominantBaseline='hanging'\n            x={CANVAS_WIDTH - PADDING}\n            y={PADDING + (24) * (i + 1)}\n            style={{ fill: planet.colors.text, fontSize: '20px', fontFamily: 'monospace' }}\n          >\n            {variable.name}: {variable.value}\n          </text>)\n        })\n      }\n      <a.text\n        x='50%'\n        y='20%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={winSpring.opacity}\n        style={{ fontSize: '80px', fill: planet.colors.text }}\n      >\n        Mission Success\n      </a.text>\n      <a.text\n        x='50%'\n        y='20%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={loseSpring.opacity}\n        style={{ fontSize: '80px', fill: planet.colors.text }}\n      >\n        Try Again\n      </a.text>\n      <a.text\n        x='50%'\n        y='35%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={loseSpring.opacity}\n        style={{ fontSize: '30px', fill: planet.colors.text }}\n      >\n        {loseMessage === true ? '' : loseMessage}\n      </a.text>\n    </g>\n  );\n}\n\nexport default Level;","const MissionObjective = ({ missionNumber, objective, hint }) => {\n  return (\n    <div style={{ fontSize: '24px', textAlign: 'center' }}>\n      <strong>Mission {missionNumber} Objective</strong>\n      <br/>\n      {objective}\n      {\n        hint &&\n        <div style={{ fontSize: '18px', textAlign: 'center' }}>\n          <hr/>\n          {hint}\n          <br/>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default MissionObjective;","const MissionBriefing = ({ briefing, onCompleteBriefing }) => {\n  return (\n    <div style={{ fontSize: '24px', textAlign: 'center' }}>\n      {briefing}\n      <br/>\n      <button onClick={onCompleteBriefing}>Continue</button>\n    </div>\n  );\n}\n\nexport default MissionBriefing;","import React, { useReducer } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport ControlPanel from './ControlPanel';\nimport GameIntro from './GameIntro';\nimport GameOver from './GameOver';\nimport Ground from './Ground';\nimport PlanetIntro from './PlanetIntro';\nimport ProgressIndicator from './ProgressIndicator';\nimport Level from './Level';\nimport MissionObjective from './MissionObjective';\nimport MissionBriefing from './MissionBriefing';\n\nimport { PLANETS } from '../game/missions';\nimport { CANVAS_WIDTH, CANVAS_HEIGHT } from '../game/constants';\nimport { remaining_blocks } from '../game/blocks';\n\n// Skip certain sequences\nconst DEV_MODE = false;\nconst START_PLANET = 0;\nconst START_MISSION = 0;\n\nconst ACTION = {\n\n  // Intro screens\n  COMPLETE_INTRO: 'COMPLETE_INTRO',\n  COMPLETE_PLANET_INTRO: 'COMPLETE_PLANET_INTRO',\n  ZOOM_PLANET_INTRO: 'ZOOM_PLANET_INTRO',\n  COMPLETE_BRIEFING: 'COMPLETE_BRIEFING',\n\n  // Program actions\n  ADD_TO_PROGRAM: 'ADD_TO_PROGRAM',\n  RESET_PROGRAM: 'RESET_PROGRAM',\n  SUBMIT_PROGRAM: 'SUBMIT_PROGRAM',\n\n  // Changing missions\n  NEXT_MISSION: 'NEXT_MISSION',\n  REPEAT_MISSION: 'REPEAT_MISSION'\n}\n\n// Keeps track of current position in planet intro\nconst PLANET_INTRO_STATUS = {\n  NOT_SHOWN: 0,\n  ZOOMING: 1,\n  COMPLETE: 2\n};\n\nconst HANDLER = {\n\n  // Intro screens\n  [ACTION.COMPLETE_INTRO]: state => {\n    return {...state, introShown: true};\n  },\n  [ACTION.ZOOM_PLANET_INTRO]: state => {\n    if (state.planetIntroStatus === PLANET_INTRO_STATUS.NOT_SHOWN) {\n      return {...state, planetIntroStatus: PLANET_INTRO_STATUS.ZOOMING}\n    } else {\n      return state;\n    }\n  },\n  [ACTION.COMPLETE_PLANET_INTRO]: state => {\n    return {...state, planetIntroStatus: PLANET_INTRO_STATUS.COMPLETE}\n  },\n  [ACTION.COMPLETE_BRIEFING]: state => {\n    return {...state, briefingShown: true}\n  },\n\n  // Program actions\n  // TODO: add args\n  [ACTION.ADD_TO_PROGRAM]: (state, {block, args}) => {\n    return {...state, program: [...state.program, {block, args} ]}\n  },\n  [ACTION.RESET_PROGRAM]: state => {\n    return {...state, program: []}\n  },\n  [ACTION.SUBMIT_PROGRAM]: (state, augmentedProgram) => {\n    return {...state, program: augmentedProgram, programSubmitted: true}\n  },\n\n  // Changing missions\n  [ACTION.NEXT_MISSION]: (state) => {\n    const planet = PLANETS[state.planetIndex];\n\n    // Next mission on this planet\n    if (state.missionIndex + 1 < planet.missions.length) {\n      return {\n        ...state,\n        missionIndex: state.missionIndex + 1,\n        round: state.round + 1,\n        program: [],\n        programSubmitted: false,\n      }\n\n    // Next mission takes us to a new planet\n    } else if (state.planetIndex + 1 < PLANETS.length) {\n      return {\n        ...state,\n        planetIndex: state.planetIndex + 1,\n        missionIndex: 0,\n        round: state.round + 1,\n        planetIntroStatus: PLANET_INTRO_STATUS.NOT_SHOWN,\n        briefingShown: false,\n        program: [],\n        programSubmitted: false,\n      }\n    \n    // No more levels\n    } else {\n      return {\n        ...state,\n        done: true\n      }\n    }\n  },\n\n  [ACTION.REPEAT_MISSION]: (state) => {\n    return {\n      ...state,\n      round: state.round + 1,\n      program: [],\n      programSubmitted: false,\n    }\n  }\n};\n\nconst reducer = (state, { type, payload }) => {\n  const handler = HANDLER[type];\n  if (!handler) return state;\n  return handler(state, payload);\n};\n\n// Returns initial state. Includes devellopment flag for skipping parts.\nconst getInitialState = (development) => {\n\n  return {\n\n    // Track current mission for user\n    planetIndex: START_PLANET || 0,\n    missionIndex: START_MISSION || 0,\n    done: false,\n    round: 0,\n\n    // Track current status of game\n    introShown: development ? true : false,\n    planetIntroStatus: development ? PLANET_INTRO_STATUS.COMPLETE: PLANET_INTRO_STATUS.NOT_SHOWN,\n    briefingShown: development ? true : false,\n\n    // Current sequence of blocks\n    program: [],\n    programSubmitted: false,\n\n  }\n}\n\nconst Scene = (props) => {\n\n  const { onStartPlaying } = props;\n\n  const [state, dispatch] = useReducer(reducer, getInitialState(DEV_MODE));\n  const act = (type, payload) => dispatch({ type, payload });\n\n  const {\n    planetIndex,\n    missionIndex,\n    introShown,\n    planetIntroStatus,\n    briefingShown,\n    program,\n    programSubmitted,\n    round,\n    done\n  } = state;\n\n  const planet = PLANETS[planetIndex];\n  const mission = planet.missions[missionIndex];\n\n  // Handle entering and exiting introduction screens\n  function handleCompleteIntro() {\n    act(ACTION.COMPLETE_INTRO);\n  }\n\n  function handleZoomPlanetIntro() {\n    act(ACTION.ZOOM_PLANET_INTRO);\n  }\n\n  function handleCompletePlanetIntro() {\n    act(ACTION.COMPLETE_PLANET_INTRO);\n  }\n\n  function handleCompleteBriefing() {\n    act(ACTION.COMPLETE_BRIEFING);\n  }\n\n  function addToProgram(block, args) {\n    act(ACTION.ADD_TO_PROGRAM, {block, args});\n  }\n\n  function showIntro() {\n    return <GameIntro\n      onStartPlaying={onStartPlaying}\n      onCompleteIntro={handleCompleteIntro}\n    />;\n  }\n\n  function showPlanetIntro() {\n    return <PlanetIntro\n      planetIndex={planetIndex}\n      onZoomIntro={handleZoomPlanetIntro}\n      onCompleteIntro={handleCompletePlanetIntro}\n    />\n  }\n\n  function showLevel() {\n    return <Level\n      key={round}\n      planetIndex={planetIndex}\n      missionIndex={missionIndex}\n      onFailure={() => act(ACTION.REPEAT_MISSION)}\n      onSuccess={() => act(ACTION.NEXT_MISSION)}\n      program={program}\n      programSubmitted={programSubmitted}\n    />\n  }\n\n  function showBriefing() {\n    return <MissionBriefing\n      briefing={planet.briefing}\n      onCompleteBriefing={handleCompleteBriefing}\n    />\n  }\n\n  function showGround() {\n    return <Ground\n      planet={planet}\n    />\n  }\n\n  const backgroundColorSpring = useSpring({\n    to: {color: introShown ? (\n      planetIntroStatus >= PLANET_INTRO_STATUS.ZOOMING ? planet.colors.sky : 'black'\n      ) : 'rgba(0, 0, 0, 0)'},\n    from: {color: 'rgba(0, 0, 0, 0)'},\n    config: {duration: 1500}\n  });\n\n  const levelInProgress = planetIntroStatus === PLANET_INTRO_STATUS.COMPLETE;\n  const showControlPanel = levelInProgress && briefingShown;\n\n  // Game over screen\n  if (done) {\n    return <GameOver />;\n  }\n\n  return (\n    <div style={{ maxWidth: CANVAS_WIDTH }}>\n      <a.svg width={CANVAS_WIDTH} height={CANVAS_HEIGHT} className='scene'\n           style={{ backgroundColor: backgroundColorSpring.color }}\n      >\n\n        {/* Ground, appears when planet has been zoomed in  */}\n        {planetIntroStatus >= PLANET_INTRO_STATUS.ZOOMING && showGround()}\n\n        {levelInProgress && \n          <ProgressIndicator\n            planet={planet}\n            completedMissions={missionIndex}\n          />\n        }\n\n        {!introShown ? showIntro() : !levelInProgress ? showPlanetIntro() : showLevel()}\n      </a.svg>\n      {levelInProgress &&\n        (briefingShown ?\n          <MissionObjective\n            missionNumber={missionIndex + 1}\n            objective={mission.objective}\n            hint={mission.hint}\n          />\n        : showBriefing())\n      }\n      {showControlPanel &&\n        <ControlPanel\n          planetIndex={planetIndex}\n          missionIndex={missionIndex}\n          addToProgram={addToProgram}\n          blocks={remaining_blocks(mission.blocks, program)}\n          variables={mission.variables || []}\n          onResetProgram={() => act(ACTION.RESET_PROGRAM)}\n          onSubmitProgram={(augmentedProgram) => act(ACTION.SUBMIT_PROGRAM, augmentedProgram)}\n          program={program}\n          programSubmitted={programSubmitted}\n        />\n      }\n    </div>\n  );\n};\n\nexport default Scene;","export default __webpack_public_path__ + \"static/media/amerika.421d9361.mp3\";","import React, { useState } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\nimport Sound from 'react-sound';\n\nimport Scene from './Scene';\n\nimport backgroundMusic from '../assets/amerika.mp3';\n\nconst ASound = a(Sound);\n\nconst Page = () => {\n\n  const [playing, setPlaying] = useState(false);\n  const handleStartPlaying = () => setPlaying(true);\n\n  // Fade in audio\n  const audioSpring = useSpring({\n    to: {volume: playing ? 100 : 0},\n    from: {volume: 0},\n    config: {duration: 8000}\n  });\n\n  return (\n    <div className='page'>\n      <div className='scene-container'>\n        <Scene\n          onStartPlaying={handleStartPlaying}\n        />\n      </div>\n      <ASound\n        url={backgroundMusic}\n        playStatus={playing ? Sound.status.PLAYING : Sound.status.STOPPED}\n        autoLoad={true}\n        loop={true}\n        volume={audioSpring.volume}\n      />\n    </div>\n  );\n}\n\nexport default Page;","import Page from './components/Page';\n\nexport default Page;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { logPageview } from './analytics';\nimport reportWebVitals from './reportWebVitals';\n\nlogPageview();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}