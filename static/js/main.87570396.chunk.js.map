{"version":3,"sources":["game/blocks.js","assets/rocket.svg","assets/rover.svg","assets/rover_flipped.svg","assets/mercury_crater.svg","assets/rock_red.svg","assets/volcano.svg","assets/photograph.svg","game/constants.js","game/objects.js","game/missions.js","analytics.js","components/ControlPanel.js","components/GameIntro.js","components/GameWIP.js","components/Ground.js","components/PlanetIntro.js","components/ProgressIndicator.js","components/Item.js","components/Level.js","components/MissionObjective.js","components/MissionBriefing.js","components/Scene.js","assets/amerika.mp3","components/Page.js","App.js","reportWebVitals.js","index.js"],"names":["EVENTS","BLOCK_NAMES","FORWARD","TAKE_PHOTO","TURN","PICK_UP","REPEAT","END_REPEAT","BLOCKS","name","LAUNCH_ROCKET","args","remaining_blocks","blocks","program","counts","i","length","block","undefined","reduce","acc","count","instruction_label","CANVAS_WIDTH","CANVAS_HEIGHT","GROUND_HEIGHT","OBJECTS","ROVER","images","rover","rover_flipped","height","width","ROCKET","rocket","MERCURY_CRATER","mercury_crater","ROCK_RED","rock_red","VOLCANO","volcano","PHOTOGRAPH","photograph","obj_y","object","elevation","d","opacity","costumeNumber","PLANETS","introConfig","size","scale","orbitDuration","textColor","colors","main","sky","text","briefing","missions","objective","items","id","x","criteria","category","value","hint","allowFall","ReactGA","initialize","getMissionLabel","planetIndex","missionIndex","logEvent","event","ControlPanel","addToProgram","onResetProgram","onSubmitProgram","programSubmitted","map","instruction","onClick","augmentedProgram","stack","Object","assign","meta","push","type","line","parseInt","isNaN","isValid","error","top","pop","jumpBackTo","jumpTo","validate_program","action","label","alert","window","scrollTo","behavior","setTimeout","className","blockId","arg","key","prompt","blockClicked","GameIntro","onCompleteIntro","onStartPlaying","useState","start","setStart","titleSpring","useSpring","to","from","config","duration","onRest","completeIntro","g","y","dominantBaseline","textAnchor","rx","fill","style","fontSize","GameWIP","maxWidth","color","href","Ground","planet","Array","keys","TICK_WIDTH","PlanetIntro","onZoomIntro","resetOrbit","setResetOrbit","exitIntro","setExitIntro","planetZoom","setPlanetZoom","planetText","setPlanetText","sunSpring","delay","planetOpacitySpring","planetMotionSpring","angle","Math","PI","reset","state","planetZoomSpring","zoom","sceneExitSpring","planetTextSpring","renderedPlanets","slice","isLastPlanet","radius","circle","cx","cy","r","fillOpacity","stroke","strokeWidth","interpolate","theta","cos","sin","useEffect","timer","clearTimeout","ProgressIndicator","completedMissions","mission","PADDING","Item","center","costumeIndex","AItem","a","Level","onSuccess","onFailure","startTime","Date","currentInstruction","instructionsCompleted","winMessage","loseMessage","photographs","loopMetadata","events","setState","roverIndex","findIndex","item","rocketIndex","checkCriteria","criterion","carried","console","log","roverNoop","util","obj","getPickupObject","shouldLaunch","iterationsCompleted","winSpring","round","loseSpring","itemSprings","useSprings","target","checkFall","checkWin","spring","e","MissionObjective","missionNumber","textAlign","MissionBriefing","onCompleteBriefing","ACTION","PLANET_INTRO_STATUS","HANDLER","introShown","planetIntroStatus","briefingShown","done","reducer","payload","handler","Scene","props","development","useReducer","dispatch","act","handleCompleteIntro","handleZoomPlanetIntro","handleCompletePlanetIntro","handleCompleteBriefing","backgroundColorSpring","levelInProgress","showControlPanel","svg","backgroundColor","ASound","Sound","Page","playing","setPlaying","audioSpring","volume","url","backgroundMusic","playStatus","status","PLAYING","STOPPED","autoLoad","loop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","pageview","location","pathname","search","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.87570396.chunk.js","sourcesContent":["// Blocks available for usage\n\nexport const EVENTS = {\n  ROCKET_LAUNCH: 'ROCKET_LAUNCH'\n};\n\nexport const BLOCK_NAMES = {\n  FORWARD: 'FORWARD',\n  TAKE_PHOTO: 'TAKE_PHOTO',\n  TURN: 'TURN',\n  PICK_UP: 'PICK_UP',\n  REPEAT: 'REPEAT',\n  END_REPEAT: 'END REPEAT',\n};\n\nexport const BLOCKS = {\n\n  [BLOCK_NAMES.FORWARD]: {\n    name: 'Move Forward'\n  },\n  [BLOCK_NAMES.TURN]: {\n    name: 'Turn Around'\n  },\n  [BLOCK_NAMES.PICK_UP]: {\n    name: 'Pick Up Object'\n  },\n  [BLOCK_NAMES.LAUNCH_ROCKET]: {\n    name: 'Launch Rocket'\n  },\n  [BLOCK_NAMES.TAKE_PHOTO]: {\n    name: 'Take Photo'\n  },\n  [BLOCK_NAMES.REPEAT]: {\n    name: 'Repeat',\n    args: [\n      {'key': 'count', 'text': 'How many times to repeat?'}\n    ]\n  },\n  [BLOCK_NAMES.END_REPEAT]: {\n    name: 'End Repeat'\n  },\n}\n\nexport const remaining_blocks = (blocks, program) => {\n\n  // Count up how many times each block is currently used in the program\n  const counts = {};\n  for (let i = 0; i < program.length; i++) {\n    const block = program[i].block;\n    if (counts[block] === undefined) {\n      counts[block] = 1;\n    } else {\n      counts[block]++;\n    }\n  }\n\n  // Remove\n  return blocks.reduce((acc, [block, count]) => (\n    [...acc, [block, count - (counts[block] || 0)]]\n  ), []);\n}\n\nexport const instruction_label = ({ block, args }) => {\n  const name = BLOCKS[block].name;\n  switch (block) {\n    case BLOCK_NAMES.REPEAT:\n      return `${name} ${args.count}`;\n\n    default:\n      return name;\n  }\n}\n\n// Check if a program is structurally correct\n// e.g. ensure all repeat blocks have an 'end repeat'\n// This function also adds metadata to block that's useful for execution\n// e.g. for 'end' blocks, keep tracks of where the jump back to should be\nexport const validate_program = (program) => {\n  const augmentedProgram = [];\n  const stack = [];\n  for (let i = 0; i < program.length; i++) {\n\n    // Make a copy of the instruction before mutation\n    const instruction = Object.assign({}, program[i]);\n    instruction.meta = {id: i};\n\n    switch (instruction.block) {\n\n      case BLOCK_NAMES.REPEAT:\n        stack.push({type: BLOCK_NAMES.REPEAT, line: i});\n        const count = parseInt(instruction.args.count);\n        if (isNaN(count)) {\n          return {isValid: false, error: 'Tenacity only understands an integer number of times to repeat!'};\n        }\n        instruction.args.count = count;\n        break;\n\n      case BLOCK_NAMES.END_REPEAT:\n        const top = stack.pop();\n        if (top === undefined) {\n          return {isValid: false, error: 'Tenacity can only End Repeat after a matching Repeat instruction.'};\n        }\n        else if (top.type !== BLOCK_NAMES.REPEAT) {\n          return {isValid: false, error: 'Tenacity tried to End Repeat, but it looks like some other part of the program needs to be resolved first.'};\n        }\n        instruction.meta.jumpBackTo = top.line;\n        augmentedProgram[top.line].meta.jumpTo = i + 1;\n        break;\n\n      default:\n        break;\n    }\n\n    augmentedProgram.push(instruction);\n  }\n\n  // Make sure nothing is left on the stack\n  const top = stack.pop();\n  if (top !== undefined) {\n    if (top.type === BLOCK_NAMES.REPEAT) {\n      return {isValid: false, error: 'Tenacity found a Repeat instruction, but it needs a matching End Repeat instruction so that it knows when to stop repeating.'};\n    }\n    else {\n      // TODO: Shouldn't ever come up, but make this error more descriptive just in case.\n      return {isValid: false, error: 'Tenacity found a mistake in the program.'};\n    }\n  }\n\n  return {isValid: true, augmentedProgram}\n}","export default __webpack_public_path__ + \"static/media/rocket.0dec99f9.svg\";","export default __webpack_public_path__ + \"static/media/rover.b107911f.svg\";","export default __webpack_public_path__ + \"static/media/rover_flipped.1ce4141d.svg\";","export default __webpack_public_path__ + \"static/media/mercury_crater.af0b0b06.svg\";","export default __webpack_public_path__ + \"static/media/rock_red.31b2b06f.svg\";","export default __webpack_public_path__ + \"static/media/volcano.957d8bd8.svg\";","export default __webpack_public_path__ + \"static/media/photograph.86f8d649.svg\";","// Game dimensions\nexport const CANVAS_WIDTH = 800;\nexport const CANVAS_HEIGHT = 600;\nexport const GROUND_HEIGHT = 100;\n","import rocket from '../assets/rocket.svg';\nimport rover from '../assets/rover.svg';\nimport rover_flipped from '../assets/rover_flipped.svg';\nimport mercury_crater from '../assets/mercury_crater.svg';\nimport rock_red from '../assets/rock_red.svg';\nimport volcano from '../assets/volcano.svg';\nimport photograph from '../assets/photograph.svg';\n\nimport { CANVAS_HEIGHT, GROUND_HEIGHT } from './constants';\n\nexport const OBJECTS = {\n  ROVER: {\n    images: [rover, rover_flipped],\n    height: 80,\n    width: 80\n  },\n  ROCKET: {\n    images: [rocket],\n    height: 100,\n    width: 57\n  },\n  MERCURY_CRATER: {\n    images: [mercury_crater],\n    height: 30,\n    width: 90\n  },\n  ROCK_RED: {\n    images: [rock_red],\n    height: 30,\n    width: 40\n  },\n  VOLCANO: {\n    images: [volcano],\n    height: 100,\n    width: 100,\n  },\n  PHOTOGRAPH: {\n    images: [photograph],\n    height: 60,\n    width: 60\n  }\n}\n\n// Get y position of object based on its elevation off the ground\nexport const obj_y = (object, elevation = 0) => (\n  CANVAS_HEIGHT - GROUND_HEIGHT - object.height - elevation \n)","// Game is divided into Planets and Missions\n\nimport { BLOCK_NAMES, EVENTS } from './blocks';\nimport { OBJECTS } from './objects';\n\n// Defaults for objects\nconst defaults = {\n  elevation: 0,\n  opacity: 1,\n  costumeNumber: 0,\n}\nconst d = defaults;\n\nexport const PLANETS = [\n  {\n    name: 'Mercury',\n    introConfig: {\n      size: 15,\n      scale: 2,\n      orbitDuration: 10000,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#bfbaac',\n      sky: '#7d705b',\n      text: 'black'\n    },\n    briefing: 'The Tenacity rover has arrived on Mercury. Use the control panel to help Tenacity complete its missions.',\n    missions: [\n      {\n        objective: 'Navigate Tenacity back to the spacecraft for refueling.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 2]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 500},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 300},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 500}\n        ]\n      },\n      {\n        objective: 'Get close to the crater to explore it. But be careful not to fall in!',\n        hint: 'You do not always need to use every block available to you.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'crater', object: OBJECTS.MERCURY_CRATER, x: 500, elevation: -30, allowFall: true},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 100},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 400}\n        ]\n      },\n      {\n        objective: 'Return the rock sample back to the rocket.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.TURN, 1]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'crater', object: OBJECTS.MERCURY_CRATER, x: 500, elevation: -30, allowFall: true},\n          {...d, id: 'rock', object: OBJECTS.ROCK_RED, x: 400, elevation: -30},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 100},\n          {category: 'rover_carry', value: 'rock'},\n        ]\n      },\n      {\n        objective: \"We're done here on Mercury! Launch the rocket to head to the next planet.\",\n        blocks: [\n          [BLOCK_NAMES.LAUNCH_ROCKET, 1]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 400},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'event', value: EVENTS.ROCKET_LAUNCH}\n        ]\n      }\n    ]\n  },\n  {\n    name: 'Venus',\n    introConfig: {\n      size: 20,\n      scale: 1.7,\n      orbitDuration: 28900,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#ae7c43',\n      sky: '#dbb78f',\n      text: 'black'\n    },\n    briefing: 'Welcome to Venus!',\n    missions: [\n      {\n        objective: 'Get to the base of the volcano and take a photo.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 1],\n          [BLOCK_NAMES.TAKE_PHOTO, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'volcano', object: OBJECTS.VOLCANO, x: 700},\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 200},\n        ],\n        criteria: [\n          {category: 'photograph', value: 700}\n        ]\n      },\n    ]\n  }\n]","import ReactGA from 'react-ga';\n\nimport { PLANETS } from './game/missions.js';\n\nReactGA.initialize('UA-123778931-5');\n\nconst logAnalytics = process.env.NODE_ENV != 'development';\n\nexport const getMissionLabel = (planetIndex, missionIndex) => {\n  return `${PLANETS[planetIndex].name}, Mission ${missionIndex + 1}`;\n}\n\nexport const logPageview = () => {\n  if (logAnalytics) {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n}\n\nexport const logEvent = (event) => {\n  if (logAnalytics) {\n    ReactGA.event(event);\n  }\n}","import { BLOCKS, instruction_label, validate_program } from '../game/blocks';\nimport { getMissionLabel, logEvent } from '../analytics';\n\nconst ControlPanel = ({ addToProgram, blocks, onResetProgram, onSubmitProgram,\n                  program, programSubmitted, planetIndex, missionIndex }) => {\n\n  function blockClicked(blockId) {\n    if (!programSubmitted) {\n\n      const block = BLOCKS[blockId];\n\n      // Check for block arguments to add\n      const args = {};\n      if (block.args !== undefined) {\n        for (const arg of block.args) {\n          args[arg.key] = window.prompt(arg.text);\n          if (args[arg.key] === null) {\n            return;\n          }\n        }\n      }\n      addToProgram(blockId, args);\n    }\n  }\n\n  function submitProgram() {\n\n    const { isValid, augmentedProgram, error } = validate_program(program);\n\n    // Don't allow submission of an invalid program\n    if (!isValid) {\n      logEvent({\n        category: 'Error',\n        action: 'Invalid Program Error',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: error\n      });\n      alert(error);\n      return;\n    }\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    setTimeout(() => {\n      onSubmitProgram(augmentedProgram);\n    }, 1000);\n  }\n\n  return (\n    <div id='control-panel'>\n      <div id='control-panel-container'>\n        <div>\n          <div id='program'>\n            {program.map((instruction, i) => {\n              return <div key={i}>\n                {instruction_label(instruction)}\n              </div>\n            })}\n          </div>\n          {!programSubmitted &&\n          <div>\n            <button onClick={onResetProgram}>Reset</button>\n            <button onClick={submitProgram}>Submit Instructions</button>\n          </div>\n          }\n        </div>\n        <div id='blocks'>\n          {blocks.map(([block, count], i) => {\n            if (count === 0)\n              return false;\n            return <button\n              className='block'\n              key={i}\n              onClick={() => blockClicked(block)}\n            >\n              {BLOCKS[block].name} (x{count})\n            </button>\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ControlPanel;","import { useState } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport { logEvent } from '../analytics';\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\nimport '../css/GameIntro.css';\n\nconst BUTTON_WIDTH = 200;\nconst BUTTON_HEIGHT = 80;\n\nconst GameIntro = ({ onCompleteIntro, onStartPlaying }) => {\n\n  // State to keep track of whether play button has been clicked\n  const [start, setStart] = useState(false);\n\n  // Fade in and fade out for titles\n  const titleSpring = useSpring({\n    to: {opacity: start ? 0 : 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    onRest: () => {\n      if (start)\n        onCompleteIntro();\n    }\n  });\n\n  // Start playing music and begin game\n  const completeIntro = () => {\n    logEvent({\n      'category': 'Game',\n      'action': 'Play Game'\n    });\n    onStartPlaying();\n    setStart(true);\n  };\n\n  return (\n    <a.g opacity={titleSpring.opacity}>\n\n      {/* Main title */}\n      <text\n        x='50%'\n        y='30%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        className='titleText'\n        opacity={titleSpring.opacity}\n      >\n        Tenacity\n      </text>\n\n      {/* Subtitle */}\n      <text\n        x='50%'\n        y='45%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        className='subheadText'\n        opacity={titleSpring.opacity}\n      >\n        A game by Brian Yu\n      </text>\n\n      {/* Play button */}\n      <rect\n        x={(CANVAS_WIDTH - BUTTON_WIDTH) / 2}\n        y='360'\n        height={BUTTON_HEIGHT}\n        width={BUTTON_WIDTH}\n        rx={20}\n        fill='white'\n        className='hoverable'\n        onClick={completeIntro}\n      />\n      <text\n        x={CANVAS_WIDTH / 2}\n        y='400'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        style={{ fontSize: '48px', fill: 'black' }}\n        className='hoverable'\n        onClick={completeIntro}\n      >\n        Play\n      </text>\n\n    </a.g>\n  );\n}\n\nexport default GameIntro;","const GameWIP = () => {\n  return (<div style={{ maxWidth: '500px' }}>\n    <div>\n      Tenacity is a work in progress, and you've reached the end of what's been\n      developed so far! Check back soon for more missions.\n    </div>\n    <br/>\n    <div>\n      Tenacity is developed by Brian Yu at Harvard Graduate School of Education.\n      While the game is in development, I would love to hear thoughts, feedback, and\n      recommendations: you can reach me\n      at <a style={{color: 'white'}} href=\"mailto:brian@brianyu.me\">brian@brianyu.me</a>.\n    </div>\n  </div>);\n}\n\nexport default GameWIP;","import { CANVAS_HEIGHT, CANVAS_WIDTH, GROUND_HEIGHT } from '../game/constants';\n\nconst SHOW_TICKS = true;\nconst TICK_INTERVAL = 100;\nconst TICK_WIDTH = 1;\nconst TICK_HEIGHT = 10;\n\nconst Ground = ({ planet }) => {\n  return (\n    <g>\n      <rect\n        x={0} y={CANVAS_HEIGHT - GROUND_HEIGHT} width={CANVAS_WIDTH} height={GROUND_HEIGHT}\n        fill={planet.colors.main}\n      />\n      {SHOW_TICKS && [...Array(CANVAS_WIDTH / TICK_INTERVAL).keys()].map(i => {\n        return <rect\n          key={i}\n          x={i * TICK_INTERVAL - (TICK_WIDTH / 2)}\n          y={CANVAS_HEIGHT - GROUND_HEIGHT}\n          width={TICK_WIDTH}\n          height={TICK_HEIGHT}\n        />\n      })}\n    </g>\n  );\n}\n\nexport default Ground;","import { useState, useEffect } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\nimport { PLANETS } from '../game/missions';\n\nconst START_RADIUS = 100;\nconst RADIUS_INCREMENT = 50;\n\nconst PlanetIntro = ({ onCompleteIntro, onZoomIntro, planetIndex }) => {\n\n  // Determine current planet and scale\n  const planet = PLANETS[planetIndex];\n  const scale = planet.introConfig.scale;\n\n  // State to keep track of stage in animation\n  const [resetOrbit, setResetOrbit] = useState(false);\n  const [exitIntro, setExitIntro] = useState(false);\n  const [planetZoom, setPlanetZoom] = useState(false);\n  const [planetText, setPlanetText] = useState(false);\n\n  // Fade in for sun\n  const sunSpring = useSpring({\n    to: {opacity: 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    delay: 1500,\n  });\n\n  // Fade in for planets\n  const planetOpacitySpring = useSpring({\n    to: {opacity: 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    delay: 3000\n  })\n\n  // Angle for planets' orbit\n  const planetMotionSpring = useSpring({\n    to: {angle: 4 * Math.PI},\n    from: {angle: 0},\n    config: {duration: 20000},\n    reset: resetOrbit,\n    onRest: () => setResetOrbit(state => !state)\n  });\n\n  // Planet zoom\n  const planetZoomSpring = useSpring({\n    to: {zoom: planetZoom ? 1 : 0},\n    from: {zoom: 0},\n    config: {duration: 1000},\n    onRest: () => {\n      if (planetZoom) {\n        onZoomIntro();\n        setPlanetText(true);\n      } \n    }\n  });\n\n  // Fade out for scene\n  const sceneExitSpring = useSpring({\n    to: {opacity: exitIntro ? 0: 1},\n    from: {opacity: 1},\n    config: {duration: 2000},\n    onRest: () => {\n      if (exitIntro) {\n        onCompleteIntro();\n      }\n    }\n  });\n\n  // Fade in for planet text\n  const planetTextSpring = useSpring({\n    to: {opacity: planetText ? 1: 0},\n    from: {opacity: 0},\n    config: {duration: 1000},\n    onRest: () => {\n      if (planetText) {\n        setTimeout(() => {\n          setExitIntro(true);\n        }, 2000);\n      }\n    }\n  })\n\n  // Generate orbit and planet for each visible planet\n  const renderedPlanets = PLANETS.slice(0, 1 + planetIndex).map((planet, i) => {\n\n    const isLastPlanet = i == planetIndex;\n\n    const radius = START_RADIUS + RADIUS_INCREMENT * i;\n    return <a.g key={i} opacity={planetOpacitySpring.opacity}>\n      <a.circle\n        cx={CANVAS_WIDTH / 2}\n        cy={CANVAS_HEIGHT / 2}\n        r={radius * scale}\n        fillOpacity={0}\n        stroke={'white'}\n        strokeWidth={2}\n      />\n      <a.circle\n        cx={planetMotionSpring.angle.interpolate(theta =>\n          (CANVAS_WIDTH / 2) + scale * (radius * Math.cos(theta * (10000 / planet.introConfig.orbitDuration))))\n        }\n        cy={planetMotionSpring.angle.interpolate(theta =>\n          (CANVAS_HEIGHT / 2) - scale * (radius * Math.sin(theta * (10000 / planet.introConfig.orbitDuration))))\n        }\n        r={isLastPlanet ?\n            planetZoomSpring.zoom.interpolate(zoom => \n              planet.introConfig.size * scale + zoom * (1600 - planet.introConfig.size * scale)\n            )\n            : planet.introConfig.size * scale}\n        style={{ fill: planet.colors.main }}\n      /> \n    </a.g>;\n  });\n\n  // Fade out intro screen\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setPlanetZoom(true);\n    }, 10000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <a.g opacity={sceneExitSpring.opacity}>\n\n      {/* Sun */}\n      <a.circle\n        cx={CANVAS_WIDTH / 2}\n        cy={CANVAS_HEIGHT / 2}\n        r={50 * scale}\n        style={{ fill: '#f0f067' }}\n        opacity={sunSpring.opacity}  \n      />\n\n      {/* Other Planets */}\n      {renderedPlanets}\n\n      <a.text\n        x='50%'\n        y='50%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        style={{ fontSize: '80px', fill: planet.introConfig.textColor }}\n        opacity={planetTextSpring.opacity}\n      >\n        {planet.name}\n      </a.text>\n    </a.g>\n  );\n}\n\nexport default PlanetIntro;","import { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\n\nconst PADDING = 15;\nconst CIRCLE_RADIUS = 20;\n\nconst ProgressIndicator = ({ planet, completedMissions }) => {\n  return (\n    <g>\n      <text\n        textAnchor='end'\n        dominantBaseline='hanging'\n        x={CANVAS_WIDTH - PADDING}\n        y={PADDING}\n        style={{ fill: planet.colors.text, fontSize: '24px' }}\n      >\n        {planet.name}\n      </text>\n\n      {planet.missions.map((mission, i) => {\n        return (\n          <circle\n            key={i}\n            cx={PADDING + CIRCLE_RADIUS + (CIRCLE_RADIUS * 2 + PADDING) * i}\n            cy={PADDING + CIRCLE_RADIUS}\n            r={CIRCLE_RADIUS}\n            style={{\n                fill: completedMissions > i ? planet.colors.main : 'rgba(0, 0, 0, 0)',\n                stroke: planet.colors.main,\n                strokeWidth: completedMissions > i ? 0 : 1\n            }}\n          />\n        )\n      })}\n    </g>\n  )\n};\n\nexport default ProgressIndicator;","const Item = ({object, x, y, center, costumeIndex, opacity}) => {\n\n  // Use costume 0 by default\n  if (costumeIndex === undefined) {\n    costumeIndex = 0;\n  }\n\n  return (\n    <image\n      href={object.images[costumeIndex]}\n      height={object.height}\n      x={center === false ? x : x - (object.width / 2)}\n      y={y}\n      opacity={opacity}\n    />\n  )\n}\n\nexport default Item;","import { useState, useEffect } from 'react';\nimport { useSpring, useSprings, animated as a } from 'react-spring';\n\nimport Item from './Item';\n\nimport { getMissionLabel, logEvent } from '../analytics';\nimport { BLOCK_NAMES, EVENTS } from '../game/blocks';\nimport { PLANETS } from '../game/missions';\nimport { OBJECTS, obj_y } from '../game/objects';\n\nconst AItem = a(Item);\n\nconst Level = ({ planetIndex, missionIndex, onSuccess, onFailure, program, programSubmitted }) => {\n\n  const planet = PLANETS[planetIndex];\n  const mission = planet.missions[missionIndex];\n\n  useEffect(() => {\n    logEvent({\n      category: 'Level',\n      action: 'Start Level',\n      label: getMissionLabel(planetIndex, missionIndex)\n    });\n  }, [missionIndex, planetIndex]);\n\n  const [state, setState] = useState({\n    startTime: new Date(),\n    currentInstruction: 0,\n    instructionsCompleted: 0,\n    items: mission.items,\n    winMessage: false,\n    loseMessage: false,\n    photographs: [], // x locations of photographs\n    loopMetadata: {}, // how many times has each loop run so far\n    events: [] // events that have taken place\n  });\n\n  const { startTime, currentInstruction, instructionsCompleted, items, photographs, winMessage, loseMessage } = state;\n  \n  // Determine index of rover\n  const roverIndex = items.findIndex(item => item.id === 'rover');\n  const rover = roverIndex !== -1 ? items[roverIndex] : null;\n  const rocketIndex = items.findIndex(item => item.id === 'rocket');\n  const rocket = rocketIndex !== -1 ? items[rocketIndex] : null;\n\n  // Check if level is won\n  function checkWin() {\n    for (let i = 0; i < mission.criteria.length; i++) {\n      if (!checkCriteria(mission.criteria[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Check if particular criteria is true\n  function checkCriteria(criterion) {\n    switch (criterion.category) {\n      \n      // Confirm x location of rover\n      case 'rover_x':\n        if (criterion.value === rover.x) {\n          return true;\n        }\n        return false;\n\n      case 'rover_carry':\n        for (const item of items) {\n          if (item.id === criterion.value && item.carried === true) {\n            return true;\n          }\n        }\n        return false;\n      \n      // Confirm that event took place\n      case 'event':\n        for (const event of state.events) {\n          if (criterion.value === event) {\n            return true;\n          }\n        }\n        return false;\n\n      case 'photograph':\n        for (const photograph of photographs)  {\n          if (criterion.value === photograph) {\n            return true;\n          };\n        }\n        return false;\n\n      default:\n        console.log('Error: Unknown criterion.');\n        return false;\n    }\n\n  }\n\n  // Check to see if item will fall into something that allows falling\n  function checkFall(target) {\n    for (const item of items) {\n      if (item.allowFall && item.x === target.x && target.elevation === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Get object to pick up; closest object to rover, null if none\n  function getPickupObject() {\n    let obj = null; \n    for (const item of items) {\n      if (item !== rover && item.x === rover.x && (obj === null || item.elevation > obj.elevation)) {\n        obj = item;\n      }\n    }\n    return obj;\n  }\n\n  // Takes a list of items and returns items with the util value for the rover flipped\n  // Doesn't functionally change anything about the items, but triggers an animation\n  function roverNoop(items) {\n    return items.map((item, i) => i === roverIndex ? {\n      ...rover,\n      util: (rover.util || 0) + 1\n    } : item);\n  }\n\n  // Run an instruction\n  if (programSubmitted && currentInstruction < program.length &&\n      instructionsCompleted === currentInstruction && !winMessage && !loseMessage) {\n    const instruction = program[currentInstruction];\n\n    // Decide which instruction to use\n    switch (instruction.block) {\n\n      // Move the rover forward\n      case BLOCK_NAMES.FORWARD:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: state.items.map((item, i) => i === roverIndex || item.carried === true ? {\n              ...item,\n              x: rover.costumeNumber === 0 ? item.x + 100 : item.x - 100\n            } : item),\n        }));\n        break;\n\n      case BLOCK_NAMES.TURN:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: state.items.map((item, i) => i === roverIndex ? {\n              ...rover,\n              costumeNumber: rover.costumeNumber === 0 ? 1 : 0\n            } : item),\n        }));\n        break;\n\n      case BLOCK_NAMES.PICK_UP:\n        const obj = getPickupObject();\n        if (obj != null) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: state.items.map((item, i) => item === obj ? {\n              ...obj,\n              elevation: 30,\n              carried: true\n            } : i === roverIndex ? {\n              ...rover,\n              util: (rover.util || 0) + 1\n            } : item),\n          }))\n        } else {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.LAUNCH_ROCKET:\n        const shouldLaunch = rocket && rover && rocket.x === rover.x;\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: shouldLaunch ?\n            state.items.map((item, i) =>\n              i === roverIndex ? {\n                ...rover,\n                opacity: -10\n              } :\n              i === rocketIndex ? {\n                ...rocket,\n                elevation: 600\n              } : item\n            )\n          : state.items,\n          events: [...state.events, EVENTS.ROCKET_LAUNCH]\n        }));\n        break;\n\n      case BLOCK_NAMES.REPEAT:\n        const iterationsCompleted = state.loopMetadata[instruction.meta.id] || 0;\n\n        // Done looping\n        if (iterationsCompleted >= instruction.args.count) {\n          setState(state => ({\n            ...state,\n            currentInstruction: instruction.meta.jumpTo - 1,\n            instructionsCompleted: instruction.meta.jumpTo,\n            items: roverNoop(state.items),\n          }));\n\n        // Need to loop more\n        } else {\n          setState(state => ({\n            ...state,\n            currentInstruction: state.currentInstruction + 1,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n            loopMetadata: {\n              ...state.loopMetadata,\n              [instruction.meta.id]: iterationsCompleted + 1\n            }\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.END_REPEAT:\n        setState(state => ({\n          ...state,\n          currentInstruction: instruction.meta.jumpBackTo,\n          instructionsCompleted: instruction.meta.jumpBackTo,\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      case BLOCK_NAMES.TAKE_PHOTO:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          photographs: [...state.photographs, rover.x],\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      default:\n        console.log('ERROR: Unknown block.');\n    }\n}\n\nconst winSpring = useSpring({\n  to: {opacity: winMessage ? 1 : 0},\n  from: {opacity: 0},\n  config: {duration: 1000},\n  delay: 500,\n  onRest: () => {\n    if (winMessage) {\n      logEvent({\n        category: 'Level',\n        action: 'Win Level',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: Math.round((new Date() - startTime) / 1000)\n      });\n      setTimeout(() => {\n        onSuccess();\n      }, 2500);\n    }\n  }\n});\n\nconst loseSpring = useSpring({\n  to: {opacity: loseMessage ? 1 : 0},\n  from: {opacity: 0},\n  config: {duration: 1000},\n  delay: 500,\n  onRest: () => {\n    if (loseMessage) {\n      logEvent({\n        category: 'Level',\n        action: 'Lose Level',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: Math.round((new Date() - startTime) / 1000)\n      });\n      setTimeout(() => {\n        onFailure();\n      }, 2500);\n    }\n  }\n});\n\nconst itemSprings = useSprings(items.length, items.map((item, i) => ({\n  to: {\n    x: item.x,\n    elevation: item.elevation,\n    opacity: item.opacity,\n    util: item.util || 0 // utility variable to force transitions\n  },\n  config: {duration: 1000},\n  onRest: () => {\n\n    if (winMessage || loseMessage) {\n      return;\n    }\n\n    // Check for collisions\n    if (i === roverIndex && programSubmitted) {\n      if (checkFall(item)) {\n        setState(state => ({\n          ...state,\n          items: state.items.map((item, i) => i === roverIndex || item.carried === true ? {\n            ...item,\n            elevation: item.elevation - 20\n          } : item),\n          loseMessage: true\n        }));\n        return;\n      }\n    }\n\n    // Check if program is over\n    if (i === roverIndex && programSubmitted && state.instructionsCompleted === program.length) {\n      if (checkWin()) {\n        setState(state => ({...state, winMessage: true})); \n      } else {\n        setState(state => ({...state, loseMessage: true})); \n      }\n    }\n\n    // When rover completes its action, move on to the next instruction\n    if (i === roverIndex && programSubmitted\n        && state.instructionsCompleted > currentInstruction\n        && state.instructionsCompleted !== program.length) {\n\n      setTimeout(() => {\n        setState(state => ({\n          ...state,\n          currentInstruction: state.currentInstruction + 1\n        }));\n      }, 250);\n    }\n  }\n})));\n\n\n\nreturn (\n    <g>\n      {itemSprings.map((spring, i) => {\n        const item = items[i];\n        return (<AItem\n          key={i}\n          object={item.object}\n          x={spring.x}\n          y={spring.elevation.interpolate(e => obj_y(item.object, e))}\n          costumeIndex={item.costumeNumber}\n          center={item.object.center !== false}\n          opacity={spring.opacity}\n        />);\n      })}\n      {\n        photographs.map((x, i) => {\n          const photograph = OBJECTS.PHOTOGRAPH;\n          return (<AItem\n            key={i}\n            object={photograph}\n            x={20 + (photograph.width + 10) * i}\n            y={obj_y(photograph, -80)}\n            costumeIndex={0}\n            center={false}\n            opacity={1}\n          />);\n        })\n      }\n      <a.text\n        x='50%'\n        y='20%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={winSpring.opacity}\n        style={{ fontSize: '80px', fill: planet.colors.text }}\n      >\n        Mission Success\n      </a.text>\n      <a.text\n        x='50%'\n        y='20%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={loseSpring.opacity}\n        style={{ fontSize: '80px', fill: planet.colors.text }}\n      >\n        Try Again\n      </a.text>\n    </g>\n  );\n}\n\nexport default Level;","const MissionObjective = ({ missionNumber, objective }) => {\n  return (\n    <div style={{ fontSize: '24px', textAlign: 'center' }}>\n      <strong>Mission {missionNumber} Objective</strong>\n      <br/>\n      {objective}\n    </div>\n  );\n}\n\nexport default MissionObjective;","const MissionBriefing = ({ briefing, onCompleteBriefing }) => {\n  return (\n    <div style={{ fontSize: '24px', textAlign: 'center' }}>\n      {briefing}\n      <br/>\n      <button onClick={onCompleteBriefing}>Continue</button>\n    </div>\n  );\n}\n\nexport default MissionBriefing;","import React, { useReducer } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport ControlPanel from './ControlPanel';\nimport GameIntro from './GameIntro';\nimport GameWIP from './GameWIP';\nimport Ground from './Ground';\nimport PlanetIntro from './PlanetIntro';\nimport ProgressIndicator from './ProgressIndicator';\nimport Level from './Level';\nimport MissionObjective from './MissionObjective';\nimport MissionBriefing from './MissionBriefing';\n\nimport { PLANETS } from '../game/missions';\nimport { CANVAS_WIDTH, CANVAS_HEIGHT } from '../game/constants';\nimport { remaining_blocks } from '../game/blocks';\n\n// Skip certain sequences\nconst DEV_MODE = false;\nconst START_PLANET = 0;\nconst START_MISSION = 0;\n\nconst ACTION = {\n\n  // Intro screens\n  COMPLETE_INTRO: 'COMPLETE_INTRO',\n  COMPLETE_PLANET_INTRO: 'COMPLETE_PLANET_INTRO',\n  ZOOM_PLANET_INTRO: 'ZOOM_PLANET_INTRO',\n  COMPLETE_BRIEFING: 'COMPLETE_BRIEFING',\n\n  // Program actions\n  ADD_TO_PROGRAM: 'ADD_TO_PROGRAM',\n  RESET_PROGRAM: 'RESET_PROGRAM',\n  SUBMIT_PROGRAM: 'SUBMIT_PROGRAM',\n\n  // Changing missions\n  NEXT_MISSION: 'NEXT_MISSION',\n  REPEAT_MISSION: 'REPEAT_MISSION'\n}\n\n// Keeps track of current position in planet intro\nconst PLANET_INTRO_STATUS = {\n  NOT_SHOWN: 0,\n  ZOOMING: 1,\n  COMPLETE: 2\n};\n\nconst HANDLER = {\n\n  // Intro screens\n  [ACTION.COMPLETE_INTRO]: state => {\n    return {...state, introShown: true};\n  },\n  [ACTION.ZOOM_PLANET_INTRO]: state => {\n    if (state.planetIntroStatus === PLANET_INTRO_STATUS.NOT_SHOWN) {\n      return {...state, planetIntroStatus: PLANET_INTRO_STATUS.ZOOMING}\n    } else {\n      return state;\n    }\n  },\n  [ACTION.COMPLETE_PLANET_INTRO]: state => {\n    return {...state, planetIntroStatus: PLANET_INTRO_STATUS.COMPLETE}\n  },\n  [ACTION.COMPLETE_BRIEFING]: state => {\n    return {...state, briefingShown: true}\n  },\n\n  // Program actions\n  // TODO: add args\n  [ACTION.ADD_TO_PROGRAM]: (state, {block, args}) => {\n    return {...state, program: [...state.program, {block, args} ]}\n  },\n  [ACTION.RESET_PROGRAM]: state => {\n    return {...state, program: []}\n  },\n  [ACTION.SUBMIT_PROGRAM]: (state, augmentedProgram) => {\n    return {...state, program: augmentedProgram, programSubmitted: true}\n  },\n\n  // Changing missions\n  [ACTION.NEXT_MISSION]: (state) => {\n    const planet = PLANETS[state.planetIndex];\n\n    // Next mission on this planet\n    if (state.missionIndex + 1 < planet.missions.length) {\n      return {\n        ...state,\n        missionIndex: state.missionIndex + 1,\n        round: state.round + 1,\n        program: [],\n        programSubmitted: false,\n      }\n\n    // Next mission takes us to a new planet\n    } else if (state.planetIndex + 1 < PLANETS.length) {\n      return {\n        ...state,\n        planetIndex: state.planetIndex + 1,\n        missionIndex: 0,\n        round: state.round + 1,\n        planetIntroStatus: PLANET_INTRO_STATUS.NOT_SHOWN,\n        briefingShown: false,\n        program: [],\n        programSubmitted: false,\n      }\n    \n    // No more levels\n    } else {\n      return {\n        ...state,\n        done: true\n      }\n    }\n  },\n\n  [ACTION.REPEAT_MISSION]: (state) => {\n    return {\n      ...state,\n      round: state.round + 1,\n      program: [],\n      programSubmitted: false,\n    }\n  }\n};\n\nconst reducer = (state, { type, payload }) => {\n  const handler = HANDLER[type];\n  if (!handler) return state;\n  return handler(state, payload);\n};\n\n// Returns initial state. Includes devellopment flag for skipping parts.\nconst getInitialState = (development) => {\n\n  return {\n\n    // Track current mission for user\n    planetIndex: START_PLANET || 0,\n    missionIndex: START_MISSION || 0,\n    done: false,\n    round: 0,\n\n    // Track current status of game\n    introShown: development ? true : false,\n    planetIntroStatus: development ? PLANET_INTRO_STATUS.COMPLETE: PLANET_INTRO_STATUS.NOT_SHOWN,\n    briefingShown: development ? true : false,\n\n    // Current sequence of blocks\n    program: [],\n    programSubmitted: false,\n\n  }\n}\n\nconst Scene = (props) => {\n\n  const { onStartPlaying } = props;\n\n  const [state, dispatch] = useReducer(reducer, getInitialState(DEV_MODE));\n  const act = (type, payload) => dispatch({ type, payload });\n\n  const {\n    planetIndex,\n    missionIndex,\n    introShown,\n    planetIntroStatus,\n    briefingShown,\n    program,\n    programSubmitted,\n    round,\n    done\n  } = state;\n\n  const planet = PLANETS[planetIndex];\n  const mission = planet.missions[missionIndex];\n\n  // Handle entering and exiting introduction screens\n  function handleCompleteIntro() {\n    act(ACTION.COMPLETE_INTRO);\n  }\n\n  function handleZoomPlanetIntro() {\n    act(ACTION.ZOOM_PLANET_INTRO);\n  }\n\n  function handleCompletePlanetIntro() {\n    act(ACTION.COMPLETE_PLANET_INTRO);\n  }\n\n  function handleCompleteBriefing() {\n    act(ACTION.COMPLETE_BRIEFING);\n  }\n\n  function addToProgram(block, args) {\n    act(ACTION.ADD_TO_PROGRAM, {block, args});\n  }\n\n  function showIntro() {\n    return <GameIntro\n      onStartPlaying={onStartPlaying}\n      onCompleteIntro={handleCompleteIntro}\n    />;\n  }\n\n  function showPlanetIntro() {\n    return <PlanetIntro\n      planetIndex={planetIndex}\n      onZoomIntro={handleZoomPlanetIntro}\n      onCompleteIntro={handleCompletePlanetIntro}\n    />\n  }\n\n  function showLevel() {\n    return <Level\n      key={round}\n      planetIndex={planetIndex}\n      missionIndex={missionIndex}\n      onFailure={() => act(ACTION.REPEAT_MISSION)}\n      onSuccess={() => act(ACTION.NEXT_MISSION)}\n      program={program}\n      programSubmitted={programSubmitted}\n    />\n  }\n\n  function showBriefing() {\n    return <MissionBriefing\n      briefing={planet.briefing}\n      onCompleteBriefing={handleCompleteBriefing}\n    />\n  }\n\n  function showGround() {\n    return <Ground\n      planet={planet}\n    />\n  }\n\n  const backgroundColorSpring = useSpring({\n    to: {color: introShown ? (\n      planetIntroStatus >= PLANET_INTRO_STATUS.ZOOMING ? planet.colors.sky : 'black'\n      ) : 'rgba(0, 0, 0, 0)'},\n    from: {color: 'rgba(0, 0, 0, 0)'},\n    config: {duration: 1500}\n  });\n\n  const levelInProgress = planetIntroStatus === PLANET_INTRO_STATUS.COMPLETE;\n  const showControlPanel = levelInProgress && briefingShown;\n\n  // Temporary game over screen\n  if (done) {\n    return <GameWIP />;\n  }\n\n  return (\n    <div style={{ maxWidth: CANVAS_WIDTH }}>\n      <a.svg width={CANVAS_WIDTH} height={CANVAS_HEIGHT} className='scene'\n           style={{ backgroundColor: backgroundColorSpring.color }}\n      >\n\n        {/* Ground, appears when planet has been zoomed in  */}\n        {planetIntroStatus >= PLANET_INTRO_STATUS.ZOOMING && showGround()}\n\n        {levelInProgress && \n          <ProgressIndicator\n            planet={planet}\n            completedMissions={missionIndex}\n          />\n        }\n\n        {!introShown ? showIntro() : !levelInProgress ? showPlanetIntro() : showLevel()}\n      </a.svg>\n      {levelInProgress &&\n        (briefingShown ? <MissionObjective missionNumber={missionIndex + 1} objective={mission.objective} />\n        : showBriefing())\n      }\n      {showControlPanel &&\n        <ControlPanel\n          planetIndex={planetIndex}\n          missionIndex={missionIndex}\n          addToProgram={addToProgram}\n          blocks={remaining_blocks(mission.blocks, program)}\n          onResetProgram={() => act(ACTION.RESET_PROGRAM)}\n          onSubmitProgram={(augmentedProgram) => act(ACTION.SUBMIT_PROGRAM, augmentedProgram)}\n          program={program}\n          programSubmitted={programSubmitted}\n        />\n      }\n    </div>\n  );\n};\n\nexport default Scene;","export default __webpack_public_path__ + \"static/media/amerika.421d9361.mp3\";","import React, { useState } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\nimport Sound from 'react-sound';\n\nimport Scene from './Scene';\n\nimport backgroundMusic from '../assets/amerika.mp3';\n\nconst ASound = a(Sound);\n\nconst Page = () => {\n\n  const [playing, setPlaying] = useState(false);\n  const handleStartPlaying = () => setPlaying(true);\n\n  // Fade in audio\n  const audioSpring = useSpring({\n    to: {volume: playing ? 100 : 0},\n    from: {volume: 0},\n    config: {duration: 8000}\n  });\n\n  return (\n    <div className='page'>\n      <div className='scene-container'>\n        <Scene\n          onStartPlaying={handleStartPlaying}\n        />\n      </div>\n      <ASound\n        url={backgroundMusic}\n        playStatus={playing ? Sound.status.PLAYING : Sound.status.STOPPED}\n        autoLoad={true}\n        loop={true}\n        volume={audioSpring.volume}\n      />\n    </div>\n  );\n}\n\nexport default Page;","import Page from './components/Page';\n\nexport default Page;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { logPageview } from './analytics';\nimport reportWebVitals from './reportWebVitals';\n\nlogPageview();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}