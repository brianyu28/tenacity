{"version":3,"sources":["game/blocks.js","assets/button_red_unpressed.svg","assets/button_red_pressed.svg","assets/button_blue_unpressed.svg","assets/button_blue_pressed.svg","assets/bridge.svg","assets/lab.svg","assets/rocket.svg","assets/rover.svg","assets/rover_flipped.svg","assets/mercury_crater.svg","assets/rock_blue.svg","assets/rock_red.svg","assets/volcano.svg","assets/photograph.svg","game/constants.js","game/objects.js","game/missions.js","analytics.js","components/ControlPanel.js","components/GameIntro.js","components/GameWIP.js","components/Ground.js","components/PlanetIntro.js","components/ProgressIndicator.js","components/Item.js","components/Level.js","components/MissionObjective.js","components/MissionBriefing.js","components/Scene.js","assets/amerika.mp3","components/Page.js","App.js","reportWebVitals.js","index.js"],"names":["EVENTS","BLOCK_NAMES","BRIDGE","FORWARD","TAKE_PHOTO","TURN","PICK_UP","DROP","PRESS_BUTTON","REPEAT","END_REPEAT","IF_BUTTON_BLUE","END_IF","BLOCKS","name","LAUNCH_ROCKET","args","remaining_blocks","blocks","program","counts","i","length","block","undefined","reduce","acc","count","instruction_label","CANVAS_WIDTH","CANVAS_HEIGHT","GROUND_HEIGHT","OBJECTS","images","bridge","height","width","ROVER","rover","rover_flipped","BUTTON_BLUE","button_blue_unpressed","button_blue_pressed","BUTTON_RED","button_red_unpressed","button_red_pressed","ROCKET","rocket","LAB","lab","MERCURY_CRATER","mercury_crater","VENUS_CRATER","venus_crater","ROCK_RED","rock_red","ROCK_BLUE","rock_blue","VOLCANO","volcano","PHOTOGRAPH","photograph","obj_y","object","elevation","d","opacity","costumeNumber","PLANETS","introConfig","size","scale","orbitDuration","textColor","colors","main","sky","text","briefing","missions","objective","hint","items","id","x","criteria","category","value","message","allowFall","button","ReactGA","initialize","getMissionLabel","planetIndex","missionIndex","logEvent","event","ControlPanel","addToProgram","onResetProgram","onSubmitProgram","programSubmitted","map","instruction","onClick","augmentedProgram","stack","Object","assign","meta","top","push","type","line","parseInt","isNaN","isValid","error","pop","jumpBackTo","jumpTo","condition","validate_program","action","label","alert","window","scrollTo","behavior","setTimeout","className","blockId","arg","key","prompt","blockClicked","GameIntro","onCompleteIntro","onStartPlaying","useState","start","setStart","titleSpring","useSpring","to","from","config","duration","onRest","completeIntro","g","y","dominantBaseline","textAnchor","rx","fill","style","fontSize","GameWIP","maxWidth","color","href","Ground","planet","Array","keys","TICK_WIDTH","PlanetIntro","onZoomIntro","resetOrbit","setResetOrbit","exitIntro","setExitIntro","planetZoom","setPlanetZoom","planetText","setPlanetText","sunSpring","delay","planetOpacitySpring","planetMotionSpring","angle","Math","PI","reset","state","planetZoomSpring","zoom","sceneExitSpring","planetTextSpring","renderedPlanets","slice","isLastPlanet","radius","circle","cx","cy","r","fillOpacity","stroke","strokeWidth","interpolate","theta","cos","sin","useEffect","timer","clearTimeout","ProgressIndicator","completedMissions","mission","PADDING","Item","center","costumeIndex","STEP_SIZE","AItem","a","Level","onSuccess","onFailure","startTime","Date","currentInstruction","instructionsCompleted","winMessage","loseMessage","photographs","bridges","buttons","loopMetadata","events","setState","roverIndex","findIndex","item","rocketIndex","checkCriteria","criterion","carried","console","log","roverNoop","util","obj","getPickupObject","prevElevation","getCarriedObject","shouldLaunch","iterationsCompleted","blue_button","getCurrentButton","bridgeX","canBuildBridge","winSpring","round","loseSpring","itemSprings","useSprings","target","checkFall","isWin","checkWin","spring","e","MissionObjective","missionNumber","textAlign","MissionBriefing","onCompleteBriefing","ACTION","PLANET_INTRO_STATUS","HANDLER","introShown","planetIntroStatus","briefingShown","done","reducer","payload","handler","Scene","props","development","useReducer","dispatch","act","handleCompleteIntro","handleZoomPlanetIntro","handleCompletePlanetIntro","handleCompleteBriefing","backgroundColorSpring","levelInProgress","showControlPanel","svg","backgroundColor","ASound","Sound","Page","playing","setPlaying","audioSpring","volume","url","backgroundMusic","playStatus","status","PLAYING","STOPPED","autoLoad","loop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","pageview","location","pathname","search","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"gQAEaA,EACI,gBAGJC,EAAc,CACzBC,OAAQ,eACRC,QAAS,UACTC,WAAY,aACZC,KAAM,OACNC,QAAS,UACTC,KAAM,OACNC,aAAc,eACdC,OAAQ,SACRC,WAAY,aACZC,eAAgB,iBAChBC,OAAQ,UAGGC,GAAM,mBAEhBZ,EAAYC,OAAS,CACpBY,KAAM,iBAHS,cAKhBb,EAAYE,QAAU,CACrBW,KAAM,iBANS,cAQhBb,EAAYI,KAAO,CAClBS,KAAM,gBATS,cAWhBb,EAAYK,QAAU,CACrBQ,KAAM,mBAZS,cAchBb,EAAYM,KAAO,CAClBO,KAAM,gBAfS,cAiBhBb,EAAYc,cAAgB,CAC3BD,KAAM,kBAlBS,cAoBhBb,EAAYG,WAAa,CACxBU,KAAM,eArBS,cAuBhBb,EAAYO,aAAe,CAC1BM,KAAM,iBAxBS,cA0BhBb,EAAYQ,OAAS,CACpBK,KAAM,SACNE,KAAM,CACJ,CAAC,IAAO,QAAS,KAAQ,gCA7BZ,cAgChBf,EAAYS,WAAa,CACxBI,KAAM,eAjCS,cAmChBb,EAAYU,eAAiB,CAC5BG,KAAM,sBApCS,cAsChBb,EAAYW,OAAS,CACpBE,KAAM,WAvCS,GA2CNG,EAAmB,SAACC,EAAQC,GAIvC,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACvC,IAAME,EAAQJ,EAAQE,GAAGE,WACHC,IAAlBJ,EAAOG,GACTH,EAAOG,GAAS,EAEhBH,EAAOG,KAKX,OAAOL,EAAOO,QAAO,SAACC,EAAD,0BAAOH,EAAP,KAAcI,EAAd,iCACfD,GADe,CACV,CAACH,EAAOI,GAASP,EAAOG,IAAU,QAC1C,KAGQK,EAAoB,SAAC,GAAqB,IAAnBL,EAAkB,EAAlBA,MAAOP,EAAW,EAAXA,KACnCF,EAAOD,EAAOU,GAAOT,KAC3B,OAAQS,GACN,KAAKtB,EAAYQ,OACf,MAAM,GAAN,OAAUK,EAAV,YAAkBE,EAAKW,OAEzB,QACE,OAAOb,I,QCzFE,MAA0B,iDCA1B,MAA0B,+CCA1B,MAA0B,kDCA1B,MAA0B,gDCA1B,MAA0B,mCCA1B,MAA0B,gCCA1B,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,0CCA1B,MAA0B,2CCA1B,MAA0B,sCCA1B,MAA0B,qCCA1B,MAA0B,oCCA1B,MAA0B,uCCC5Be,EAAe,IACfC,EAAgB,IAChBC,EAAgB,ICehBC,EAAU,CACrB9B,OAAQ,CACN+B,OAAQ,CAACC,GACTC,OAAQ,KACRC,MAAO,IAETC,MAAO,CACLJ,OAAQ,CAACK,EAAOC,GAChBJ,OAAQ,GACRC,MAAO,IAETI,YAAa,CACXP,OAAQ,CAACQ,EAAuBC,GAChCP,OAAQ,GACRC,MAAO,IAETO,WAAY,CACVV,OAAQ,CAACW,EAAsBC,GAC/BV,OAAQ,GACRC,MAAO,IAETU,OAAQ,CACNb,OAAQ,CAACc,GACTZ,OAAQ,IACRC,MAAO,IAETY,IAAK,CACHf,OAAQ,CAACgB,GACTd,OAAQ,IACRC,MAAO,KAETc,eAAgB,CACdjB,OAAQ,CAACkB,GACThB,OAAQ,GACRC,MAAO,IAETgB,aAAc,CACZnB,OAAQ,CAACoB,GACTlB,OAAQ,GACRC,MAAO,IAETkB,SAAU,CACRrB,OAAQ,CAACsB,GACTpB,OAAQ,GACRC,MAAO,IAEToB,UAAW,CACTvB,OAAQ,CAACwB,GACTtB,OAAQ,GACRC,MAAO,IAETsB,QAAS,CACPzB,OAAQ,CAAC0B,GACTxB,OAAQ,IACRC,MAAO,KAETwB,WAAY,CACV3B,OAAQ,CAAC4B,GACT1B,OAAQ,GACRC,MAAO,KAKE0B,EAAQ,SAACC,GAAD,IAASC,EAAT,uDAAqB,EAArB,OACnBlC,IAAgCiC,EAAO5B,OAAS6B,GCxE5CC,EALW,CACfD,UAAW,EACXE,QAAS,EACTC,cAAe,GAIJC,EAAU,CACrB,CACEtD,KAAM,UACNuD,YAAa,CACXC,KAAM,GACNC,MAAO,EACPC,cAAe,IACfC,UAAW,SAEbC,OAAQ,CACNC,KAAM,UACNC,IAAK,UACLC,KAAM,SAERC,SAAU,2GACVC,SAAU,CACR,CACEC,UAAW,0DACXC,KAAM,sHACN/D,OAAQ,CACN,CAACjB,EAAYE,QAAS,IAExB+E,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,SAAUpB,OAAQ/B,EAAQc,OAAQsC,EAAG,MAD3C,2BAEDnB,GAFC,IAEEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,UAAWC,MAAO,IAAKC,QAAS,kDAG/C,CACER,UAAW,wEACX9D,OAAQ,CACN,CAACjB,EAAYE,QAAS,IAExB+E,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,SAAUpB,OAAQ/B,EAAQc,OAAQsC,EAAG,MAD3C,2BAEDnB,GAFC,IAEEkB,GAAI,SAAUpB,OAAQ/B,EAAQkB,eAAgBkC,EAAG,IAAKpB,WAAY,GAAIyB,WAAW,IAFnF,2BAGDxB,GAHC,IAGEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,UAAWC,MAAO,IAAKC,QAAS,sDAG/C,CACER,UAAW,6CACX9D,OAAQ,CACN,CAACjB,EAAYE,QAAS,GACtB,CAACF,EAAYK,QAAS,GACtB,CAACL,EAAYI,KAAM,IAErB6E,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,SAAUpB,OAAQ/B,EAAQc,OAAQsC,EAAG,MAD3C,2BAEDnB,GAFC,IAEEkB,GAAI,SAAUpB,OAAQ/B,EAAQkB,eAAgBkC,EAAG,IAAKpB,WAAY,GAAIyB,WAAW,IAFnF,2BAGDxB,GAHC,IAGEkB,GAAI,OAAQpB,OAAQ/B,EAAQsB,SAAU8B,EAAG,IAAKpB,WAAY,KAH5D,2BAIDC,GAJC,IAIEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,UAAWC,MAAO,IAAKC,QAAS,4CAC3C,CAACF,SAAU,cAAeC,MAAO,OAAQC,QAAS,yCAGtD,CACER,UAAW,4EACX9D,OAAQ,CACN,CAACjB,EAAYc,cAAe,IAE9BmE,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,SAAUpB,OAAQ/B,EAAQc,OAAQsC,EAAG,MAD3C,2BAEDnB,GAFC,IAEEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,QAASC,MAAOvF,EAAsBwF,QAAS,8BAKlE,CACE1E,KAAM,QACNuD,YAAa,CACXC,KAAM,GACNC,MAAO,IACPC,cAAe,MACfC,UAAW,SAEbC,OAAQ,CACNC,KAAM,UACNC,IAAK,UACLC,KAAM,SAERC,SAAU,iFACVC,SAAU,CACR,CACEC,UAAW,mDACXC,KAAM,8GACN/D,OAAQ,CACN,CAACjB,EAAYE,QAAS,GACtB,CAACF,EAAYG,WAAY,GACzB,CAACH,EAAYQ,OAAQ,GACrB,CAACR,EAAYS,WAAY,IAE3BwE,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,UAAWpB,OAAQ/B,EAAQ0B,QAAS0B,EAAG,MAD7C,2BAEDnB,GAFC,IAEEkB,GAAI,SAAUpB,OAAQ/B,EAAQc,OAAQsC,EAAG,MAF3C,2BAGDnB,GAHC,IAGEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,aAAcC,MAAO,IAAKC,QAAS,kDAGlD,CACER,UAAW,2BACX9D,OAAQ,CACN,CAACjB,EAAYE,QAAS,GACtB,CAACF,EAAYC,OAAQ,GACrB,CAACD,EAAYK,QAAS,GACtB,CAACL,EAAYQ,OAAQ,GACrB,CAACR,EAAYS,WAAY,IAE3BwE,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,SAAUpB,OAAQ/B,EAAQoB,aAAcgC,EAAG,IAAKK,WAAW,EAAMzB,WAAY,KADnF,2BAEDC,GAFC,IAEEkB,GAAI,OAAQpB,OAAQ/B,EAAQsB,SAAU8B,EAAG,IAAKpB,WAAY,KAF5D,2BAGDC,GAHC,IAGEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,cAAeC,MAAO,OAAQC,QAAS,yCAGtD,CACER,UAAW,4CACX9D,OAAQ,CACN,CAACjB,EAAYE,QAAS,GACtB,CAACF,EAAYI,KAAM,GACnB,CAACJ,EAAYG,WAAY,GACzB,CAACH,EAAYQ,OAAQ,GACrB,CAACR,EAAYS,WAAY,IAE3BwE,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,WAAYpB,OAAQ/B,EAAQ0B,QAAS0B,EAAG,MAD9C,2BAEDnB,GAFC,IAEEkB,GAAI,WAAYpB,OAAQ/B,EAAQ0B,QAAS0B,EAAG,MAF9C,2BAGDnB,GAHC,IAGEkB,GAAI,WAAYpB,OAAQ/B,EAAQ0B,QAAS0B,EAAG,MAH9C,2BAIDnB,GAJC,IAIEkB,GAAI,WAAYpB,OAAQ/B,EAAQ0B,QAAS0B,EAAG,MAJ9C,2BAKDnB,GALC,IAKEkB,GAAI,WAAYpB,OAAQ/B,EAAQ0B,QAAS0B,EAAG,MAL9C,2BAMDnB,GANC,IAMEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,aAAcC,MAAO,IAAKC,QAAS,oDAC9C,CAACF,SAAU,aAAcC,MAAO,IAAKC,QAAS,oDAC9C,CAACF,SAAU,aAAcC,MAAO,IAAKC,QAAS,oDAC9C,CAACF,SAAU,aAAcC,MAAO,IAAKC,QAAS,oDAC9C,CAACF,SAAU,aAAcC,MAAO,IAAKC,QAAS,sDAGlD,CACER,UAAW,4CACXC,KAAM,+CACN/D,OAAQ,CACN,CAACjB,EAAYE,QAAS,GACtB,CAACF,EAAYI,KAAM,GACnB,CAACJ,EAAYC,OAAQ,GACrB,CAACD,EAAYK,QAAS,GACtB,CAACL,EAAYM,KAAM,GACnB,CAACN,EAAYQ,OAAQ,GACrB,CAACR,EAAYS,WAAY,IAE3BwE,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,UAAWpB,OAAQ/B,EAAQoB,aAAcgC,EAAG,IAAKK,WAAW,EAAMzB,WAAY,KADpF,2BAEDC,GAFC,IAEEkB,GAAI,QAASpB,OAAQ/B,EAAQwB,UAAW4B,EAAG,IAAKpB,WAAY,KAF9D,2BAGDC,GAHC,IAGEkB,GAAI,UAAWpB,OAAQ/B,EAAQoB,aAAcgC,EAAG,IAAKK,WAAW,EAAMzB,WAAY,KAHpF,2BAIDC,GAJC,IAIEkB,GAAI,QAASpB,OAAQ/B,EAAQwB,UAAW4B,EAAG,IAAKpB,WAAY,KAJ9D,2BAKDC,GALC,IAKEkB,GAAI,SAAUpB,OAAQ/B,EAAQc,OAAQsC,EAAG,MAL3C,2BAMDnB,GANC,IAMEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,aAAcH,GAAI,QAASI,MAAO,IAAKC,QAAS,qDAC3D,CAACF,SAAU,aAAcH,GAAI,QAASI,MAAO,IAAKC,QAAS,uDAG/D,CACER,UAAW,0EACX9D,OAAQ,CACN,CAACjB,EAAYc,cAAe,IAE9BmE,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,UAAWpB,OAAQ/B,EAAQoB,aAAcgC,EAAG,IAAKK,WAAW,EAAMzB,WAAY,KADpF,2BAEDC,GAFC,IAEEkB,GAAI,UAAWpB,OAAQ/B,EAAQoB,aAAcgC,EAAG,IAAKK,WAAW,EAAMzB,WAAY,KAFpF,2BAGDC,GAHC,IAGEkB,GAAI,SAAUpB,OAAQ/B,EAAQc,OAAQsC,EAAG,MAH3C,2BAIDnB,GAJC,IAIEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,QAASC,MAAOvF,EAAsBwF,QAAS,8BAKlE,CACE1E,KAAM,QACNuD,YAAa,CACXC,KAAM,GACNC,MAAO,IACPC,cAAe,KACfC,UAAW,SAEbC,OAAQ,CACNC,KAAM,UACNC,IAAK,UACLC,KAAM,SAERC,SAAU,gIACVC,SAAU,CACR,CACEC,UAAW,oGACXC,KAAM,4GACN/D,OAAQ,CACN,CAACjB,EAAYE,QAAS,GACtB,CAACF,EAAYO,aAAc,GAC3B,CAACP,EAAYQ,OAAQ,GACrB,CAACR,EAAYS,WAAY,GACzB,CAACT,EAAYU,eAAgB,GAC7B,CAACV,EAAYW,OAAQ,IAEvBsE,MAAO,CAAC,2BACFjB,GADC,IACEkB,GAAI,MAAOpB,OAAQ/B,EAAQgB,IAAKoC,EAAG,MADrC,2BAEDnB,GAFC,IAEEkB,GAAI,UAAWpB,OAAQ/B,EAAQQ,YAAa4C,EAAG,IAAKpB,UAAW,GAAI0B,QAAQ,IAF7E,2BAGDzB,GAHC,IAGEkB,GAAI,UAAWpB,OAAQ/B,EAAQW,WAAYyC,EAAG,IAAKpB,UAAW,GAAI0B,QAAQ,IAH5E,2BAIDzB,GAJC,IAIEkB,GAAI,UAAWpB,OAAQ/B,EAAQQ,YAAa4C,EAAG,IAAKpB,UAAW,GAAI0B,QAAQ,IAJ7E,2BAKDzB,GALC,IAKEkB,GAAI,QAASpB,OAAQ/B,EAAQK,MAAO+C,EAAG,OAEhDC,SAAU,CACR,CAACC,SAAU,eAAgBH,GAAI,UAAWI,OAAO,EAAMC,QAAS,4CAChE,CAACF,SAAU,eAAgBH,GAAI,UAAWI,OAAO,EAAOC,QAAS,kCACjE,CAACF,SAAU,eAAgBH,GAAI,UAAWI,OAAO,EAAMC,QAAS,iDChP1EG,IAAQC,WAAW,kBAEnB,I,EAEaC,EAAkB,SAACC,EAAaC,GAC3C,MAAM,GAAN,OAAU3B,EAAQ0B,GAAahF,KAA/B,qBAAgDiF,EAAe,IASpDC,EAAW,SAACC,GAErBN,IAAQM,MAAMA,I,OCkEHC,EAnFM,SAAC,GACwD,IADtDC,EACqD,EADrDA,aAAcjF,EACuC,EADvCA,OAAQkF,EAC+B,EAD/BA,eAAgBC,EACe,EADfA,gBAC5ClF,EAA2D,EAA3DA,QAASmF,EAAkD,EAAlDA,iBAAkBR,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aA8CxD,OACE,qBAAKZ,GAAG,gBAAR,SACE,sBAAKA,GAAG,0BAAR,UACE,gCACE,qBAAKA,GAAG,UAAR,SACGhE,EAAQoF,KAAI,SAACC,EAAanF,GACzB,OAAO,8BACJO,EAAkB4E,IADJnF,SAKnBiF,GACF,gCACE,wBAAQG,QAASL,EAAjB,mBACA,wBAAQK,QAvClB,WAA0B,IAAD,EnBwEK,SAACtF,GAG/B,IAFA,IAAMuF,EAAmB,GACnBC,EAAQ,GACLtF,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CAGvC,IAAMmF,EAAcI,OAAOC,OAAO,GAAI1F,EAAQE,IAC9CmF,EAAYM,KAAO,CAAC3B,GAAI9D,GAExB,IAAI0F,OAAG,EACP,OAAQP,EAAYjF,OAElB,KAAKtB,EAAYQ,OACfkG,EAAMK,KAAK,CAACC,KAAMhH,EAAYQ,OAAQyG,KAAM7F,IAC5C,IAAMM,EAAQwF,SAASX,EAAYxF,KAAKW,OACxC,GAAIyF,MAAMzF,GACR,MAAO,CAAC0F,SAAS,EAAOC,MAAO,mEAEjCd,EAAYxF,KAAKW,MAAQA,EACzB,MAEF,KAAK1B,EAAYS,WAEf,QAAYc,KADZuF,EAAMJ,EAAMY,OAEV,MAAO,CAACF,SAAS,EAAOC,MAAO,qEAE5B,GAAIP,EAAIE,OAAShH,EAAYQ,OAChC,MAAO,CAAC4G,SAAS,EAAOC,MAAO,8GAEjCd,EAAYM,KAAKU,WAAaT,EAAIG,KAClCR,EAAiBK,EAAIG,MAAMJ,KAAKW,OAASpG,EAAI,EAC7C,MAEF,KAAKpB,EAAYU,eACfgG,EAAMK,KAAK,CAACC,KAAMhH,EAAYU,eAAgB+G,WAAW,EAAMR,KAAM7F,IACrE,MAEF,KAAKpB,EAAYW,OAEf,QAAYY,KADZuF,EAAMJ,EAAMY,OAEV,MAAO,CAACF,SAAS,EAAOC,MAAO,6DAE5B,IAAsB,IAAlBP,EAAIW,UACX,MAAO,CAACL,SAAS,EAAOC,MAAO,0GAEjCZ,EAAiBK,EAAIG,MAAMJ,KAAKW,OAASpG,EAAI,EAOjDqF,EAAiBM,KAAKR,GAIxB,IAAMO,EAAMJ,EAAMY,MAClB,YAAY/F,IAARuF,EACEA,EAAIE,OAAShH,EAAYQ,OACpB,CAAC4G,SAAS,EAAOC,MAAO,iIAEN,IAAlBP,EAAIW,UACJ,CAACL,SAAS,EAAOC,MAAO,0HAIxB,CAACD,SAAS,EAAOC,MAAO,4CAI5B,CAACD,SAAS,EAAMX,oBmB5IwBiB,CAAiBxG,GAAtDkG,EAFe,EAEfA,QAASX,EAFM,EAENA,iBAAkBY,EAFZ,EAEYA,MAGnC,IAAKD,EAQH,OAPArB,EAAS,CACPV,SAAU,QACVsC,OAAQ,wBACRC,MAAOhC,EAAgBC,EAAaC,GACpCR,MAAO+B,SAETQ,MAAMR,GAIRS,OAAOC,SAAS,CACdjB,IAAK,EACLkB,SAAU,WAEZC,YAAW,WACT7B,EAAgBK,KACf,MAiBK,uCAIJ,qBAAKvB,GAAG,SAAR,SACGjE,EAAOqF,KAAI,WAAiBlF,GAAO,IAAD,mBAArBE,EAAqB,KAAdI,EAAc,KACjC,OAAc,IAAVA,GAEG,yBACLwG,UAAU,QAEV1B,QAAS,kBArErB,SAAsB2B,GACpB,IAAK9B,EAAkB,CAErB,IAAM/E,EAAQV,EAAOuH,GAGfpH,EAAO,GACb,QAAmBQ,IAAfD,EAAMP,KAAoB,CAAC,IAAD,gBACVO,EAAMP,MADI,IAC5B,2BAA8B,CAAC,IAApBqH,EAAmB,QAE5B,GADArH,EAAKqH,EAAIC,KAAOP,OAAOQ,OAAOF,EAAIxD,MACZ,OAAlB7D,EAAKqH,EAAIC,KACX,QAJwB,+BAQ9BnC,EAAaiC,EAASpH,IAsDCwH,CAAajH,IAHvB,UAKJV,EAAOU,GAAOT,KALV,MAKmBa,EALnB,MAEAN,cCgBJoH,G,MAhFG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,gBAAiBC,EAAqB,EAArBA,eAAqB,EAG/BC,oBAAS,GAHsB,mBAGlDC,EAHkD,KAG3CC,EAH2C,KAMnDC,EAAcC,YAAU,CAC5BC,GAAI,CAAC/E,QAAS2E,EAAQ,EAAI,GAC1BK,KAAM,CAAChF,QAAS,GAChBiF,OAAQ,CAACC,SAAU,MACnBC,OAAQ,WACFR,GACFH,OAKAY,EAAgB,WACpBtD,EAAS,CACP,SAAY,OACZ,OAAU,cAEZ2C,IACAG,GAAS,IAGX,OACE,eAAC,IAAES,EAAH,CAAKrF,QAAS6E,EAAY7E,QAA1B,UAGE,sBACEkB,EAAE,MACFoE,EAAE,MACFC,iBAAiB,SACjBC,WAAW,SACXvB,UAAU,YACVjE,QAAS6E,EAAY7E,QANvB,sBAYA,sBACEkB,EAAE,MACFoE,EAAE,MACFC,iBAAiB,SACjBC,WAAW,SACXvB,UAAU,cACVjE,QAAS6E,EAAY7E,QANvB,gCAYA,sBACEkB,EAAG,IACHoE,EAAE,MACFrH,OA3Dc,GA4DdC,MA7Da,IA8DbuH,GAAI,GACJC,KAAK,QACLzB,UAAU,YACV1B,QAAS6C,IAEX,sBACElE,EAAGvD,IACH2H,EAAE,MACFC,iBAAiB,SACjBC,WAAW,SACXG,MAAO,CAAEC,SAAU,OAAQF,KAAM,SACjCzB,UAAU,YACV1B,QAAS6C,EAPX,uBC1DSS,EAhBC,WACd,OAAQ,sBAAKF,MAAO,CAAEG,SAAU,SAAxB,UACN,iKAIA,uBACA,kOAIK,mBAAGH,MAAO,CAACI,MAAO,SAAUC,KAAK,0BAAjC,8BAJL,WCoBWC,EApBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,8BACE,sBACEhF,EAAG,EAAGoE,EAAG1H,IAA+BM,MAAOP,EAAcM,OAAQJ,EACrE6H,KAAMQ,EAAO1F,OAAOC,OAEP,YAAI0F,MAAMxI,GAA8ByI,QAAQ/D,KAAI,SAAAlF,GACjE,OAAO,sBAEL+D,EAdY,IAcT/D,EAAqBkJ,GACxBf,EAAG1H,IACHM,MAfS,EAgBTD,OAfU,IAWLd,UC0IAmJ,EAjJK,SAAC,GAAmD,IAAjD9B,EAAgD,EAAhDA,gBAAiB+B,EAA+B,EAA/BA,YAAa3E,EAAkB,EAAlBA,YAG7CsE,EAAShG,EAAQ0B,GACjBvB,EAAQ6F,EAAO/F,YAAYE,MAJoC,EAOjCqE,oBAAS,GAPwB,mBAO9D8B,EAP8D,KAOlDC,EAPkD,OAQnC/B,oBAAS,GAR0B,mBAQ9DgC,EAR8D,KAQnDC,EARmD,OASjCjC,oBAAS,GATwB,mBAS9DkC,EAT8D,KASlDC,EATkD,OAUjCnC,oBAAS,GAVwB,mBAU9DoC,EAV8D,KAUlDC,EAVkD,KAa/DC,EAAYlC,YAAU,CAC1BC,GAAI,CAAC/E,QAAS,GACdgF,KAAM,CAAChF,QAAS,GAChBiF,OAAQ,CAACC,SAAU,MACnB+B,MAAO,OAIHC,EAAsBpC,YAAU,CACpCC,GAAI,CAAC/E,QAAS,GACdgF,KAAM,CAAChF,QAAS,GAChBiF,OAAQ,CAACC,SAAU,MACnB+B,MAAO,MAIHE,EAAqBrC,YAAU,CACnCC,GAAI,CAACqC,MAAO,EAAIC,KAAKC,IACrBtC,KAAM,CAACoC,MAAO,GACdnC,OAAQ,CAACC,SAAU,KACnBqC,MAAOf,EACPrB,OAAQ,kBAAMsB,GAAc,SAAAe,GAAK,OAAKA,QAIlCC,EAAmB3C,YAAU,CACjCC,GAAI,CAAC2C,KAAMd,EAAa,EAAI,GAC5B5B,KAAM,CAAC0C,KAAM,GACbzC,OAAQ,CAACC,SAAU,KACnBC,OAAQ,WACFyB,IACFL,IACAQ,GAAc,OAMdY,EAAkB7C,YAAU,CAChCC,GAAI,CAAC/E,QAAS0G,EAAY,EAAG,GAC7B1B,KAAM,CAAChF,QAAS,GAChBiF,OAAQ,CAACC,SAAU,KACnBC,OAAQ,WACFuB,GACFlC,OAMAoD,EAAmB9C,YAAU,CACjCC,GAAI,CAAC/E,QAAS8G,EAAa,EAAG,GAC9B9B,KAAM,CAAChF,QAAS,GAChBiF,OAAQ,CAACC,SAAU,KACnBC,OAAQ,WACF2B,GACF9C,YAAW,WACT2C,GAAa,KACZ,QAMHkB,EAAkB3H,EAAQ4H,MAAM,EAAG,EAAIlG,GAAaS,KAAI,SAAC6D,EAAQ/I,GAErE,IAAM4K,EAAe5K,GAAKyE,EAEpBoG,EApFW,IACI,GAmF4B7K,EACjD,OAAO,eAAC,IAAEkI,EAAH,CAAarF,QAASkH,EAAoBlH,QAA1C,UACL,cAAC,IAAEiI,OAAH,CACEC,GAAIvK,IACJwK,GAAIvK,IACJwK,EAAGJ,EAAS3H,EACZgI,YAAa,EACbC,OAAQ,QACRC,YAAa,IAEf,cAAC,IAAEN,OAAH,CACEC,GAAIf,EAAmBC,MAAMoB,aAAY,SAAAC,GAAK,OAC3C9K,IAAoB0C,GAAS2H,EAASX,KAAKqB,IAAID,GAAS,IAAQvC,EAAO/F,YAAYG,oBAEtF6H,GAAIhB,EAAmBC,MAAMoB,aAAY,SAAAC,GAAK,OAC3C7K,IAAqByC,GAAS2H,EAASX,KAAKsB,IAAIF,GAAS,IAAQvC,EAAO/F,YAAYG,oBAEvF8H,EAAGL,EACCN,EAAiBC,KAAKc,aAAY,SAAAd,GAAI,OACpCxB,EAAO/F,YAAYC,KAAOC,EAAQqH,GAAQ,KAAOxB,EAAO/F,YAAYC,KAAOC,MAE3E6F,EAAO/F,YAAYC,KAAOC,EAChCsF,MAAO,CAAED,KAAMQ,EAAO1F,OAAOC,UArBhBtD,MAkCnB,OAPAyL,qBAAU,WACR,IAAMC,EAAQ7E,YAAW,WACvB6C,GAAc,KACb,KACH,OAAO,kBAAMiC,aAAaD,MACzB,IAGD,eAAC,IAAExD,EAAH,CAAKrF,QAAS2H,EAAgB3H,QAA9B,UAGE,cAAC,IAAEiI,OAAH,CACEC,GAAIvK,IACJwK,GAAIvK,IACJwK,EAAG,GAAK/H,EACRsF,MAAO,CAAED,KAAM,WACf1F,QAASgH,EAAUhH,UAIpB6H,EAED,cAAC,IAAElH,KAAH,CACEO,EAAE,MACFoE,EAAE,MACFC,iBAAiB,SACjBC,WAAW,SACXG,MAAO,CAAEC,SAAU,OAAQF,KAAMQ,EAAO/F,YAAYI,WACpDP,QAAS4H,EAAiB5H,QAN5B,SAQGkG,EAAOtJ,WC/GDmM,EAhCW,SAAC,GAAmC,IAAjC7C,EAAgC,EAAhCA,OAAQ8C,EAAwB,EAAxBA,kBACnC,OACE,8BACE,sBACExD,WAAW,MACXD,iBAAiB,UACjBrE,EAAGvD,IACH2H,EAVQ,GAWRK,MAAO,CAAED,KAAMQ,EAAO1F,OAAOG,KAAMiF,SAAU,QAL/C,SAOGM,EAAOtJ,OAGTsJ,EAAOrF,SAASwB,KAAI,SAAC4G,EAAS9L,GAC7B,OACE,wBAEE+K,GAAIgB,GAA0B,GAAgC/L,EAC9DgL,GAAIe,GACJd,EArBU,GAsBVzC,MAAO,CACHD,KAAMsD,EAAoB7L,EAAI+I,EAAO1F,OAAOC,KAAO,mBACnD6H,OAAQpC,EAAO1F,OAAOC,KACtB8H,YAAaS,EAAoB7L,EAAI,EAAI,IAPxCA,UCHFgM,EAlBF,SAAC,GAAmD,IAAlDtJ,EAAiD,EAAjDA,OAAQqB,EAAyC,EAAzCA,EAAGoE,EAAsC,EAAtCA,EAAG8D,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,aAAcrJ,EAAa,EAAbA,QAOjD,YAJqB1C,IAAjB+L,IACFA,EAAe,GAIf,uBACErD,KAAMnG,EAAO9B,OAAOsL,GACpBpL,OAAQ4B,EAAO5B,OACfiD,GAAc,IAAXkI,EAAmBlI,EAAIA,EAAKrB,EAAO3B,MAAQ,EAC9CoH,EAAGA,EACHtF,QAASA,KCHTsJ,GAAY,IAEZC,GAAQC,YAAEL,GAgkBDM,GA9jBD,SAAC,GAAoF,IAAlF7H,EAAiF,EAAjFA,YAAaC,EAAoE,EAApEA,aAAc6H,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,UAAW1M,EAAgC,EAAhCA,QAASmF,EAAuB,EAAvBA,iBAEnE8D,EAAShG,EAAQ0B,GACjBqH,EAAU/C,EAAOrF,SAASgB,GAEhC+G,qBAAU,WACR9G,EAAS,CACPV,SAAU,QACVsC,OAAQ,cACRC,MAAOhC,EAAgBC,EAAaC,OAErC,CAACA,EAAcD,IAX8E,MAatE8C,mBAAS,CACjCkF,UAAW,IAAIC,KACfC,mBAAoB,EACpBC,sBAAuB,EACvB/I,MAAOiI,EAAQjI,MACfgJ,YAAY,EACZC,aAAa,EACbC,YAAa,GACbC,QAAS,GACTC,QAAS,GACTC,aAAc,GACdC,OAAQ,KAxBsF,mBAazF9C,EAbyF,KAalF+C,EAbkF,KA2BxFX,EAC8CpC,EAD9CoC,UAAWE,EACmCtC,EADnCsC,mBAAoBC,EACevC,EADfuC,sBAAuB/I,EACRwG,EADQxG,MAAOkJ,EACf1C,EADe0C,YAC7DC,EAA8C3C,EAA9C2C,QAASC,EAAqC5C,EAArC4C,QAASJ,EAA4BxC,EAA5BwC,WAAYC,EAAgBzC,EAAhByC,YAGhCO,EAAaxJ,EAAMyJ,WAAU,SAAAC,GAAI,MAAgB,UAAZA,EAAKzJ,MAC1C7C,GAAwB,IAAhBoM,EAAoBxJ,EAAMwJ,GAAc,KAChDG,EAAc3J,EAAMyJ,WAAU,SAAAC,GAAI,MAAgB,WAAZA,EAAKzJ,MAC3CpC,GAA0B,IAAjB8L,EAAqB3J,EAAM2J,GAAe,KAazD,SAASC,EAAcC,GACrB,OAAQA,EAAUzJ,UAGhB,IAAK,UACH,OAAIyJ,EAAUxJ,QAAUjD,EAAM8C,EAKhC,IAAK,aAAL,oBACqBF,GADrB,IACE,2BAA0B,CAAC,IAAhB0J,EAAe,QACxB,GAAIA,EAAKzJ,KAAO4J,EAAU5J,IAAMyJ,EAAKxJ,IAAM2J,EAAUxJ,MACnD,OAAO,GAHb,8BAME,OAAO,EAET,IAAK,cAAL,oBACqBL,GADrB,IACE,2BAA0B,CAAC,IAAhB0J,EAAe,QACxB,GAAIA,EAAKzJ,KAAO4J,EAAUxJ,QAA0B,IAAjBqJ,EAAKI,QACtC,OAAO,GAHb,8BAME,OAAO,EAGT,IAAK,QAAL,oBACsBtD,EAAM8C,QAD5B,IACE,2BAAkC,CAAC,IAAxBvI,EAAuB,QAChC,GAAI8I,EAAUxJ,QAAUU,EACtB,OAAO,GAHb,8BAME,OAAO,EAET,IAAK,aAAL,oBAC2BmI,GAD3B,IACE,2BAAuC,CAAC,IAA7BvK,EAA4B,QACrC,GAAIkL,EAAUxJ,QAAU1B,EACtB,OAAO,GAHb,8BAME,OAAO,EAET,IAAK,eAAL,oBAEuByK,GAFvB,IAEE,2BAA8B,CAC5B,GAD4B,UACbS,EAAU5J,GACvB,OAAO4J,EAAUxJ,OAJvB,8BAOE,OAAQwJ,EAAUxJ,MAEpB,QAEE,OADA0J,QAAQC,IAAI,8BACL,GAoEb,SAASC,EAAUjK,GACjB,OAAOA,EAAMqB,KAAI,SAACqI,EAAMvN,GAAP,OAAaA,IAAMqN,EAAN,2BACzBpM,GADyB,IAE5B8M,MAAO9M,EAAM8M,MAAQ,GAAK,IACxBR,KAIN,GAAItI,GAAoB0H,EAAqB7M,EAAQG,QACjD2M,IAA0BD,IAAuBE,IAAeC,EAAa,CAC/E,IAGIkB,EAHE7I,EAAcrF,EAAQ6M,GAI5B,OAAQxH,EAAYjF,OAGlB,KAAKtB,EAAYE,QACfsO,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOwG,EAAMxG,MAAMqB,KAAI,SAACqI,EAAMvN,GAAP,OAAaA,IAAMqN,IAA+B,IAAjBE,EAAKI,QAAzB,2BAC7BJ,GAD6B,IAEhCxJ,EAA2B,IAAxB9C,EAAM6B,cAAsByK,EAAKxJ,EAAIoI,GAAYoB,EAAKxJ,EAAIoI,KAC3DoB,UAER,MAEF,KAAK3O,EAAYI,KACfoO,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOwG,EAAMxG,MAAMqB,KAAI,SAACqI,EAAMvN,GAAP,OAAaA,IAAMqN,EAAN,2BAC7BpM,GAD6B,IAEhC6B,cAAuC,IAAxB7B,EAAM6B,cAAsB,EAAI,IAC7CyK,UAER,MAEF,KAAK3O,EAAYK,QACf+O,EAxEN,WACE,IADyB,EACrBA,EAAM,KADe,cAENnK,GAFM,IAEzB,2BAA0B,CAAC,IAAhB0J,EAAe,SACnBA,EAAKI,SAAWJ,IAAStM,GAASsM,EAAKxJ,IAAM9C,EAAM8C,IAAc,OAARiK,GAAgBT,EAAK5K,UAAYqL,EAAIrL,aACjGqL,EAAMT,IAJe,8BAOzB,OAAOS,EAiEGC,GAEJb,EADU,OAARY,EACO,SAAA3D,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOwG,EAAMxG,MAAMqB,KAAI,SAACqI,EAAMvN,GAAP,OAAauN,IAASS,EAAT,2BAC/BA,GAD+B,IAElCrL,UAAW,GACXuL,cAAeF,EAAIrL,UACnBgL,SAAS,IACP3N,IAAMqN,EAAN,2BACCpM,GADD,IAEF8M,MAAO9M,EAAM8M,MAAQ,GAAK,IACxBR,QAGG,SAAAlD,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOiK,EAAUzD,EAAMxG,WAG3B,MAEF,KAAKjF,EAAYM,KACf8O,EAtFN,WAA6B,IAAD,gBACPnK,GADO,IAC1B,2BAA0B,CAAC,IAAhB0J,EAAe,QACxB,GAAIA,EAAKI,QACP,OAAOJ,GAHe,8BAM1B,OAAO,KAgFGY,GAEJf,EADU,OAARY,EACO,SAAA3D,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOwG,EAAMxG,MAAMqB,KAAI,SAACqI,EAAMvN,GAAP,OAAauN,IAASS,EAAT,2BAC/BA,GAD+B,IAElCrL,UAAWqL,EAAIE,cACfP,SAAS,IACP3N,IAAMqN,EAAN,2BACCpM,GADD,IAEF8M,MAAO9M,EAAM8M,MAAQ,GAAK,IACxBR,QAGG,SAAAlD,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOiK,EAAUzD,EAAMxG,WAG3B,MAEF,KAAKjF,EAAYc,cACf,IAAM0O,EAAe1M,GAAUT,GAASS,EAAOqC,IAAM9C,EAAM8C,EAC3DqJ,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOuK,EACL/D,EAAMxG,MAAMqB,KAAI,SAACqI,EAAMvN,GAAP,OACdA,IAAMqN,EAAN,2BACKpM,GADL,IAEE4B,SAAU,KAEZ7C,IAAMwN,EAAN,2BACK9L,GADL,IAEEiB,UAAW,MACT4K,KAENlD,EAAMxG,MACRsJ,OAAO,GAAD,mBAAM9C,EAAM8C,QAAZ,CAAoBxO,SAE5B,MAEF,KAAKC,EAAYQ,OACf,IAAMiP,EAAsBhE,EAAM6C,aAAa/H,EAAYM,KAAK3B,KAAO,EAGnEuK,GAAuBlJ,EAAYxF,KAAKW,MAC1C8M,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZsC,mBAAoBxH,EAAYM,KAAKW,OAAS,EAC9CwG,sBAAuBzH,EAAYM,KAAKW,OACxCvC,MAAOiK,EAAUzD,EAAMxG,YAKzBuJ,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZsC,mBAAoBtC,EAAMsC,mBAAqB,EAC/CC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOiK,EAAUzD,EAAMxG,OACvBqJ,aAAa,2BACR7C,EAAM6C,cADC,kBAET/H,EAAYM,KAAK3B,GAAKuK,EAAsB,SAInD,MAEF,KAAKzP,EAAYS,WACf+N,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZsC,mBAAoBxH,EAAYM,KAAKU,WACrCyG,sBAAuBzH,EAAYM,KAAKU,WACxCtC,MAAOiK,EAAUzD,EAAMxG,YAEzB,MAEF,KAAKjF,EAAYU,eACf,IADF,EACMgP,GAAc,EADpB,cAEqBzK,GAFrB,IAEE,2BAA0B,CAAC,IAAhB0J,EAAe,QACxB,GAAIA,EAAKxJ,IAAM9C,EAAM8C,GAAKwJ,EAAK7K,SAAW/B,EAAQQ,YAAa,CAC7DmN,GAAc,EACd,QALN,gCASIlB,EADEkB,EACO,SAAAjE,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOiK,EAAUzD,EAAMxG,UAGhB,SAAAwG,GAAK,kCACTA,GADS,IAEZsC,mBAAoBxH,EAAYM,KAAKW,OAAS,EAC9CwG,sBAAuBzH,EAAYM,KAAKW,OACxCvC,MAAOiK,EAAUzD,EAAMxG,WAG3B,MAEF,KAAKjF,EAAYW,OACf6N,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrD/I,MAAOiK,EAAUzD,EAAMxG,YAEzB,MAEF,KAAKjF,EAAYO,aACf6O,EA7LN,WAA6B,IAAD,gBACPnK,GADO,IAC1B,2BAA0B,CAAC,IAAhB0J,EAAe,QACxB,IAAoB,IAAhBA,EAAKlJ,QAAmBkJ,EAAKxJ,IAAM9C,EAAM8C,EAC3C,OAAOwJ,GAHe,gCAM1B,OAAO,KAuLGgB,GAEJnB,EADU,OAARY,EACO,SAAA3D,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrDK,QAAQ,GAAD,mBAAM5C,EAAM4C,SAAZ,CAAqBe,EAAIlK,KAChCD,MAAOwG,EAAMxG,MAAMqB,KAAI,SAACqI,EAAMvN,GAAP,OAAauN,EAAKzJ,KAAOkK,EAAIlK,GAAhB,2BAE7ByJ,GAF6B,IAGhCzK,cAAe,IAEfyK,QAIG,SAAAlD,GAAK,kCACTA,GADS,IAEbyC,YAAa,0DAGhB,MAEF,KAAKlO,EAAYG,WACfqO,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrDG,YAAY,GAAD,mBAAM1C,EAAM0C,aAAZ,CAAyB9L,EAAM8C,IAC1CF,MAAOiK,EAAUzD,EAAMxG,YAEzB,MAEF,KAAKjF,EAAYC,OACf,IAAM2P,EAAkC,IAAxBvN,EAAM6B,cAAsB7B,EAAM8C,EAAIoI,GAAYlL,EAAM8C,EAAIoI,IA5PlF,SAAwBpI,GAAI,IAAD,gBACNF,GADM,IACzB,2BAA0B,CAAC,IAAhB0J,EAAe,QACxB,GAAIA,EAAKnJ,WAAamJ,EAAKxJ,IAAMA,EAC/B,OAAO,GAHc,gCAMzB,OAAO,EAuPC0K,CAAeD,GAQjBpB,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEbyC,YAAa,qDATdM,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZuC,sBAAuBvC,EAAMuC,sBAAwB,EACrDI,QAAQ,GAAD,mBAAM3C,EAAM2C,SAAZ,CAAqBwB,IAC5B3K,MAAOiK,EAAUzD,EAAMxG,YAS3B,MAEF,QACE+J,QAAQC,IAAI,0BAIpB,IAAMa,EAAY/G,YAAU,CAC1BC,GAAI,CAAC/E,QAASgK,EAAa,EAAI,GAC/BhF,KAAM,CAAChF,QAAS,GAChBiF,OAAQ,CAACC,SAAU,KACnB+B,MAAO,IACP9B,OAAQ,WACF6E,IACFlI,EAAS,CACPV,SAAU,QACVsC,OAAQ,YACRC,MAAOhC,EAAgBC,EAAaC,GACpCR,MAAOgG,KAAKyE,OAAO,IAAIjC,KAASD,GAAa,OAE/C5F,YAAW,WACT0F,MACC,UAKHqC,EAAajH,YAAU,CAC3BC,GAAI,CAAC/E,QAASiK,EAAc,EAAI,GAChCjF,KAAM,CAAChF,QAAS,GAChBiF,OAAQ,CAACC,SAAU,KACnB+B,MAAO,IACP9B,OAAQ,WACF8E,IACFnI,EAAS,CACPV,SAAU,QACVsC,OAAQ,aACRC,MAAOhC,EAAgBC,EAAaC,GACpCR,MAAOgG,KAAKyE,OAAO,IAAIjC,KAASD,GAAa,OAE/C5F,YAAW,WACT2F,MACC,UAKHqC,GAAcC,YAAWjL,EAAM5D,OAAQ4D,EAAMqB,KAAI,SAACqI,EAAMvN,GAAP,MAAc,CACnE4H,GAAI,CACF7D,EAAGwJ,EAAKxJ,EACRpB,UAAW4K,EAAK5K,UAChBE,QAAS0K,EAAK1K,QACdkL,KAAMR,EAAKQ,MAAQ,GAErBjG,OAAQ,CAACC,SAAU,KACnBC,OAAQ,WAEN,IAAI6E,IAAcC,EAKlB,GAAI9M,IAAMqN,GAAcpI,GA7V1B,SAAmB8J,GAAQ,oBAGJ/B,GAHI,IAGzB,2BACE,GAD4B,UACb+B,EAAOhL,EACpB,OAAO,EALc,oDAUNF,GAVM,IAUzB,2BAA0B,CAAC,IAAhB0J,EAAe,QACxB,GAAIA,EAAKnJ,WAAamJ,EAAKxJ,IAAMgL,EAAOhL,GAA0B,IAArBgL,EAAOpM,UAClD,OAAO,GAZc,gCAezB,OAAO,EA+UDqM,CAAUzB,GACZH,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZxG,MAAOwG,EAAMxG,MAAMqB,KAAI,SAACqI,EAAMvN,GAAP,OAAaA,IAAMqN,IAA+B,IAAjBE,EAAKI,QAAzB,2BAC/BJ,GAD+B,IAElC5K,UAAW4K,EAAK5K,UAAY,KAC1B4K,KACJT,YAAa,sCARnB,CAeA,GAAI9M,IAAMqN,GAAcpI,GAAoBoF,EAAMuC,wBAA0B9M,EAAQG,OAAQ,CAAC,IAAD,EAlb9F,WACE,IAAK,IAAID,EAAI,EAAGA,EAAI8L,EAAQ9H,SAAS/D,OAAQD,IAC3C,IAAKyN,EAAc3B,EAAQ9H,SAAShE,IAClC,MAAO,CAACiP,OAAO,EAAO9K,QAAS2H,EAAQ9H,SAAShE,GAAGmE,UAAW,GAGlE,MAAO,CAAC8K,OAAO,GA6acC,GAAnBD,EADkF,EAClFA,MAAO9K,EAD2E,EAC3EA,QAEbiJ,EADE6B,EACO,SAAA5E,GAAK,kCAASA,GAAT,IAAgBwC,YAAY,KAEjC,SAAAxC,GAAK,kCAASA,GAAT,IAAgByC,YAAa3I,MAK3CnE,IAAMqN,GAAcpI,GACjBoF,EAAMuC,sBAAwBD,GAC9BtC,EAAMuC,wBAA0B9M,EAAQG,QAE7C4G,YAAW,WACTuG,GAAS,SAAA/C,GAAK,kCACTA,GADS,IAEZsC,mBAAoBtC,EAAMsC,mBAAqB,SAEhD,YAOT,OACI,8BACGkC,GAAY3J,KAAI,SAACiK,EAAQnP,GACxB,IAAMuN,EAAO1J,EAAM7D,GACnB,OAAQ,cAACoM,GAAD,CAEN1J,OAAQ6K,EAAK7K,OACbqB,EAAGoL,EAAOpL,EACVoE,EAAGgH,EAAOxM,UAAU0I,aAAY,SAAA+D,GAAC,OAAI3M,EAAM8K,EAAK7K,OAAQ0M,MACxDlD,aAAcqB,EAAKzK,cACnBmJ,QAA+B,IAAvBsB,EAAK7K,OAAOuJ,OACpBpJ,QAASsM,EAAOtM,SANX7C,MAUPgN,EAAQ9H,KAAI,SAACnB,EAAG/D,GACd,IAAMa,EAASF,EAAQ9B,OACvB,OAAQ,cAACuN,GAAD,CAEN1J,OAAQ7B,EACRkD,EAAGA,EACHoE,EAAG1F,EAAM5B,GAASA,EAAOC,QACzBoL,aAAc,EACdD,QAAQ,EACRpJ,QAAS,GANJ7C,MAWT+M,EAAY7H,KAAI,SAACnB,EAAG/D,GAClB,IAAMwC,EAAa7B,EAAQ4B,WAC3B,OAAQ,cAAC6J,GAAD,CAEN1J,OAAQF,EAERuB,EAAGA,EACHoE,EAAG1F,EAAMD,GAAa,IACtB0J,aAAc,EACdD,QAAQ,EACRpJ,QAAS,GAPJ7C,MAWX,cAAC,IAAEwD,KAAH,CACEO,EAAE,MACFoE,EAAE,MACFC,iBAAiB,SACjBC,WAAW,SACXxF,QAAS6L,EAAU7L,QACnB2F,MAAO,CAAEC,SAAU,OAAQF,KAAMQ,EAAO1F,OAAOG,MANjD,6BAUA,cAAC,IAAEA,KAAH,CACEO,EAAE,MACFoE,EAAE,MACFC,iBAAiB,SACjBC,WAAW,SACXxF,QAAS+L,EAAW/L,QACpB2F,MAAO,CAAEC,SAAU,OAAQF,KAAMQ,EAAO1F,OAAOG,MANjD,uBAUA,cAAC,IAAEA,KAAH,CACEO,EAAE,MACFoE,EAAE,MACFC,iBAAiB,SACjBC,WAAW,SACXxF,QAAS+L,EAAW/L,QACpB2F,MAAO,CAAEC,SAAU,OAAQF,KAAMQ,EAAO1F,OAAOG,MANjD,UAQmB,IAAhBsJ,EAAuB,GAAKA,QCpjBtBuC,GAlBU,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cAAe3L,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KACpD,OACE,sBAAK4E,MAAO,CAAEC,SAAU,OAAQ8G,UAAW,UAA3C,UACE,8CAAiBD,EAAjB,gBACA,uBACC3L,EAECC,GACA,sBAAK4E,MAAO,CAAEC,SAAU,OAAQ8G,UAAW,UAA3C,UACE,uBACC3L,EACD,8BCDK4L,GAVS,SAAC,GAAsC,IAApC/L,EAAmC,EAAnCA,SAAUgM,EAAyB,EAAzBA,mBACnC,OACE,sBAAKjH,MAAO,CAAEC,SAAU,OAAQ8G,UAAW,UAA3C,UACG9L,EACD,uBACA,wBAAQ2B,QAASqK,EAAjB,0BCiBAC,GAGY,iBAHZA,GAImB,wBAJnBA,GAKe,oBALfA,GAMe,oBANfA,GASY,iBATZA,GAUW,gBAVXA,GAWY,iBAXZA,GAcU,eAdVA,GAeY,iBAIZC,GACO,EADPA,GAEK,EAFLA,GAGM,EAGNC,IAAO,mBAGVF,IAAwB,SAAArF,GACvB,OAAO,2BAAIA,GAAX,IAAkBwF,YAAY,OAJrB,cAMVH,IAA2B,SAAArF,GAC1B,OAAIA,EAAMyF,oBAAsBH,GACvB,2BAAItF,GAAX,IAAkByF,kBAAmBH,KAE9BtF,KAVA,cAaVqF,IAA+B,SAAArF,GAC9B,OAAO,2BAAIA,GAAX,IAAkByF,kBAAmBH,QAd5B,cAgBVD,IAA2B,SAAArF,GAC1B,OAAO,2BAAIA,GAAX,IAAkB0F,eAAe,OAjBxB,cAsBVL,IAAwB,SAACrF,EAAD,GAA2B,IAAlBnK,EAAiB,EAAjBA,MAAOP,EAAU,EAAVA,KACvC,OAAO,2BAAI0K,GAAX,IAAkBvK,QAAQ,GAAD,mBAAMuK,EAAMvK,SAAZ,CAAqB,CAACI,QAAOP,eAvB7C,cAyBV+P,IAAuB,SAAArF,GACtB,OAAO,2BAAIA,GAAX,IAAkBvK,QAAS,QA1BlB,cA4BV4P,IAAwB,SAACrF,EAAOhF,GAC/B,OAAO,2BAAIgF,GAAX,IAAkBvK,QAASuF,EAAkBJ,kBAAkB,OA7BtD,cAiCVyK,IAAsB,SAACrF,GACtB,IAAMtB,EAAShG,EAAQsH,EAAM5F,aAG7B,OAAI4F,EAAM3F,aAAe,EAAIqE,EAAOrF,SAASzD,OACpC,2BACFoK,GADL,IAEE3F,aAAc2F,EAAM3F,aAAe,EACnCiK,MAAOtE,EAAMsE,MAAQ,EACrB7O,QAAS,GACTmF,kBAAkB,IAIXoF,EAAM5F,YAAc,EAAI1B,EAAQ9C,OAClC,2BACFoK,GADL,IAEE5F,YAAa4F,EAAM5F,YAAc,EACjCC,aAAc,EACdiK,MAAOtE,EAAMsE,MAAQ,EACrBmB,kBAAmBH,GACnBI,eAAe,EACfjQ,QAAS,GACTmF,kBAAkB,IAKb,2BACFoF,GADL,IAEE2F,MAAM,OA/DD,cAoEVN,IAAwB,SAACrF,GACxB,OAAO,2BACFA,GADL,IAEEsE,MAAOtE,EAAMsE,MAAQ,EACrB7O,QAAS,GACTmF,kBAAkB,OAzEX,GA8EPgL,GAAU,SAAC5F,EAAD,GAA+B,IAArBzE,EAAoB,EAApBA,KAAMsK,EAAc,EAAdA,QACxBC,EAAUP,GAAQhK,GACxB,OAAKuK,EACEA,EAAQ9F,EAAO6F,GADD7F,GAyKR+F,GA9ID,SAACC,GAAW,IAtBDC,EAwBfhJ,EAAmB+I,EAAnB/I,eAFe,EAIGiJ,qBAAWN,GAxB9B,CAGLxL,YAA6B,EAC7BC,aAA+B,EAC/BsL,MAAM,EACNrB,MAAO,EAGPkB,cAXqBS,GAlHR,GA8HbR,kBAAmBQ,EAAcX,GAA8BA,GAC/DI,gBAAeO,EAGfxQ,QAAS,GACTmF,kBAAkB,IAKG,mBAIhBoF,EAJgB,KAITmG,EAJS,KAKjBC,EAAM,SAAC7K,EAAMsK,GAAP,OAAmBM,EAAS,CAAE5K,OAAMsK,aAG9CzL,EASE4F,EATF5F,YACAC,EAQE2F,EARF3F,aACAmL,EAOExF,EAPFwF,WACAC,EAMEzF,EANFyF,kBACAC,EAKE1F,EALF0F,cACAjQ,EAIEuK,EAJFvK,QACAmF,EAGEoF,EAHFpF,iBACA0J,EAEEtE,EAFFsE,MACAqB,EACE3F,EADF2F,KAGIjH,EAAShG,EAAQ0B,GACjBqH,EAAU/C,EAAOrF,SAASgB,GAGhC,SAASgM,IACPD,EAAIf,IAGN,SAASiB,IACPF,EAAIf,IAGN,SAASkB,IACPH,EAAIf,IAGN,SAASmB,IACPJ,EAAIf,IA+CN,IAAMoB,EAAwBnJ,YAAU,CACtCC,GAAI,CAACgB,MAAOiH,EACVC,GAAqBH,GAA8B5G,EAAO1F,OAAOE,IAAM,QACnE,oBACNsE,KAAM,CAACe,MAAO,oBACdd,OAAQ,CAACC,SAAU,QAGfgJ,EAAkBjB,IAAsBH,GACxCqB,EAAmBD,GAAmBhB,EAG5C,OAAIC,EACK,cAAC,EAAD,IAIP,sBAAKxH,MAAO,CAAEG,SAAUnI,GAAxB,UACE,eAAC,IAAEyQ,IAAH,CAAOlQ,MAAOP,EAAcM,OAAQL,EAAeqG,UAAU,QACxD0B,MAAO,CAAE0I,gBAAiBJ,EAAsBlI,OADrD,UAKGkH,GAAqBH,IA5BnB,cAAC,EAAD,CACL5G,OAAQA,IA6BLgI,GACC,cAAC,EAAD,CACEhI,OAAQA,EACR8C,kBAAmBnH,IAIrBmL,EAA4BkB,EAxD3B,cAAC,GAAD,CAELtM,YAAaA,EACbC,aAAcA,EACd8H,UAAW,kBAAMiE,EAAIf,KACrBnD,UAAW,kBAAMkE,EAAIf,KACrB5P,QAASA,EACTmF,iBAAkBA,GANb0J,GATA,cAAC,EAAD,CACLlK,YAAaA,EACb2E,YAAauH,EACbtJ,gBAAiBuJ,IAVZ,cAAC,EAAD,CACLtJ,eAAgBA,EAChBD,gBAAiBqJ,OAuEhBK,IACEhB,EACC,cAAC,GAAD,CACET,cAAe5K,EAAe,EAC9Bf,UAAWmI,EAAQnI,UACnBC,KAAMkI,EAAQlI,OAnDf,cAAC,GAAD,CACLH,SAAUsF,EAAOtF,SACjBgM,mBAAoBoB,KAqDnBG,GACC,cAAC,EAAD,CACEvM,YAAaA,EACbC,aAAcA,EACdI,aA3FR,SAAsB5E,EAAOP,GAC3B8Q,EAAIf,GAAuB,CAACxP,QAAOP,UA2F7BE,OAAQD,EAAiBkM,EAAQjM,OAAQC,GACzCiF,eAAgB,kBAAM0L,EAAIf,KAC1B1K,gBAAiB,SAACK,GAAD,OAAsBoL,EAAIf,GAAuBrK,IAClEvF,QAASA,EACTmF,iBAAkBA,QCjSb,OAA0B,oCCQnCkM,GAAS9E,YAAE+E,KCNFC,GDQF,WAAO,IAAD,EAEa9J,oBAAS,GAFtB,mBAEV+J,EAFU,KAEDC,EAFC,KAMXC,EAAc7J,YAAU,CAC5BC,GAAI,CAAC6J,OAAQH,EAAU,IAAM,GAC7BzJ,KAAM,CAAC4J,OAAQ,GACf3J,OAAQ,CAACC,SAAU,OAGrB,OACE,sBAAKjB,UAAU,OAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,GAAD,CACEQ,eAbmB,kBAAMiK,GAAW,QAgBxC,cAACJ,GAAD,CACEO,IAAKC,GACLC,WAAYN,EAAUF,IAAMS,OAAOC,QAAUV,IAAMS,OAAOE,QAC1DC,UAAU,EACVC,MAAM,EACNR,OAAQD,EAAYC,aEtBbS,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OfOV7N,IAAQqO,SAASjM,OAAOkM,SAASC,SAAWnM,OAAOkM,SAASE,QgBJhEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,GAAD,MAEFC,SAASC,eAAe,SAM1BlB,O","file":"static/js/main.e155fefe.chunk.js","sourcesContent":["// Blocks available for usage\n\nexport const EVENTS = {\n  ROCKET_LAUNCH: 'ROCKET_LAUNCH'\n};\n\nexport const BLOCK_NAMES = {\n  BRIDGE: 'BUILD_BRIDGE',\n  FORWARD: 'FORWARD',\n  TAKE_PHOTO: 'TAKE_PHOTO',\n  TURN: 'TURN',\n  PICK_UP: 'PICK_UP',\n  DROP: 'DROP',\n  PRESS_BUTTON: 'PRESS_BUTTON',\n  REPEAT: 'REPEAT',\n  END_REPEAT: 'END REPEAT',\n  IF_BUTTON_BLUE: 'IF_BUTTON_BLUE',\n  END_IF: 'END_IF',\n};\n\nexport const BLOCKS = {\n\n  [BLOCK_NAMES.BRIDGE]: {\n    name: 'Build Bridge'\n  },\n  [BLOCK_NAMES.FORWARD]: {\n    name: 'Move Forward'\n  },\n  [BLOCK_NAMES.TURN]: {\n    name: 'Turn Around'\n  },\n  [BLOCK_NAMES.PICK_UP]: {\n    name: 'Pick Up Object'\n  },\n  [BLOCK_NAMES.DROP]: {\n    name: 'Drop Object'\n  },\n  [BLOCK_NAMES.LAUNCH_ROCKET]: {\n    name: 'Launch Rocket'\n  },\n  [BLOCK_NAMES.TAKE_PHOTO]: {\n    name: 'Take Photo'\n  },\n  [BLOCK_NAMES.PRESS_BUTTON]: {\n    name: 'Press Button'\n  },\n  [BLOCK_NAMES.REPEAT]: {\n    name: 'Repeat',\n    args: [\n      {'key': 'count', 'text': 'How many times to repeat?'}\n    ]\n  },\n  [BLOCK_NAMES.END_REPEAT]: {\n    name: 'End Repeat'\n  },\n  [BLOCK_NAMES.IF_BUTTON_BLUE]: {\n    name: 'If Button is Blue'\n  },\n  [BLOCK_NAMES.END_IF]: {\n    name: 'End If'\n  },\n}\n\nexport const remaining_blocks = (blocks, program) => {\n\n  // Count up how many times each block is currently used in the program\n  const counts = {};\n  for (let i = 0; i < program.length; i++) {\n    const block = program[i].block;\n    if (counts[block] === undefined) {\n      counts[block] = 1;\n    } else {\n      counts[block]++;\n    }\n  }\n\n  // Remove\n  return blocks.reduce((acc, [block, count]) => (\n    [...acc, [block, count - (counts[block] || 0)]]\n  ), []);\n}\n\nexport const instruction_label = ({ block, args }) => {\n  const name = BLOCKS[block].name;\n  switch (block) {\n    case BLOCK_NAMES.REPEAT:\n      return `${name} ${args.count}`;\n\n    default:\n      return name;\n  }\n}\n\n// Check if a program is structurally correct\n// e.g. ensure all repeat blocks have an 'end repeat'\n// This function also adds metadata to block that's useful for execution\n// e.g. for 'end' blocks, keep tracks of where the jump back to should be\nexport const validate_program = (program) => {\n  const augmentedProgram = [];\n  const stack = [];\n  for (let i = 0; i < program.length; i++) {\n\n    // Make a copy of the instruction before mutation\n    const instruction = Object.assign({}, program[i]);\n    instruction.meta = {id: i};\n\n    let top;\n    switch (instruction.block) {\n\n      case BLOCK_NAMES.REPEAT:\n        stack.push({type: BLOCK_NAMES.REPEAT, line: i});\n        const count = parseInt(instruction.args.count);\n        if (isNaN(count)) {\n          return {isValid: false, error: 'Tenacity only understands an integer number of times to repeat!'};\n        }\n        instruction.args.count = count;\n        break;\n\n      case BLOCK_NAMES.END_REPEAT:\n        top = stack.pop();\n        if (top === undefined) {\n          return {isValid: false, error: 'Tenacity can only End Repeat after a matching Repeat instruction.'};\n        }\n        else if (top.type !== BLOCK_NAMES.REPEAT) {\n          return {isValid: false, error: 'Tenacity tried to End Repeat, but it looks like some other part of the program needs to be resolved first.'};\n        }\n        instruction.meta.jumpBackTo = top.line;\n        augmentedProgram[top.line].meta.jumpTo = i + 1;\n        break;\n\n      case BLOCK_NAMES.IF_BUTTON_BLUE:\n        stack.push({type: BLOCK_NAMES.IF_BUTTON_BLUE, condition: true, line: i});\n        break;\n\n      case BLOCK_NAMES.END_IF:\n        top = stack.pop();\n        if (top === undefined) {\n          return {isValid: false, error: 'Tenacity can only End If after a matching If instruction.'};\n        }\n        else if (top.condition !== true) {\n          return {isValid: false, error: 'Tenacity tried to End If, but it looks like some other part of the program needs to be resolved first.'};\n        }\n        augmentedProgram[top.line].meta.jumpTo = i + 1;\n        break;\n\n      default:\n        break;\n    }\n\n    augmentedProgram.push(instruction);\n  }\n\n  // Make sure nothing is left on the stack\n  const top = stack.pop();\n  if (top !== undefined) {\n    if (top.type === BLOCK_NAMES.REPEAT) {\n      return {isValid: false, error: 'Tenacity found a Repeat instruction, but it needs a matching End Repeat instruction so that it knows when to stop repeating.'};\n    }\n    else if (top.condition === true) {\n      return {isValid: false, error: 'Tenacity found an If instruction, but it needs a matching End If instruction so that it knows when the condition ends.'};\n    }\n    else {\n      // TODO: Shouldn't ever come up, but make this error more descriptive just in case.\n      return {isValid: false, error: 'Tenacity found a mistake in the program.'};\n    }\n  }\n\n  return {isValid: true, augmentedProgram}\n}","export default __webpack_public_path__ + \"static/media/button_red_unpressed.86163d0f.svg\";","export default __webpack_public_path__ + \"static/media/button_red_pressed.108133ca.svg\";","export default __webpack_public_path__ + \"static/media/button_blue_unpressed.11c1cc6b.svg\";","export default __webpack_public_path__ + \"static/media/button_blue_pressed.14541aa3.svg\";","export default __webpack_public_path__ + \"static/media/bridge.76f2dfc2.svg\";","export default __webpack_public_path__ + \"static/media/lab.18e56e2e.svg\";","export default __webpack_public_path__ + \"static/media/rocket.0dec99f9.svg\";","export default __webpack_public_path__ + \"static/media/rover.b107911f.svg\";","export default __webpack_public_path__ + \"static/media/rover_flipped.1ce4141d.svg\";","export default __webpack_public_path__ + \"static/media/mercury_crater.af0b0b06.svg\";","export default __webpack_public_path__ + \"static/media/rock_blue.2c73d521.svg\";","export default __webpack_public_path__ + \"static/media/rock_red.31b2b06f.svg\";","export default __webpack_public_path__ + \"static/media/volcano.957d8bd8.svg\";","export default __webpack_public_path__ + \"static/media/photograph.86f8d649.svg\";","// Game dimensions\nexport const CANVAS_WIDTH = 800;\nexport const CANVAS_HEIGHT = 600;\nexport const GROUND_HEIGHT = 100;\n","import button_red_unpressed from '../assets/button_red_unpressed.svg';\nimport button_red_pressed from '../assets/button_red_pressed.svg';\nimport button_blue_unpressed from '../assets/button_blue_unpressed.svg';\nimport button_blue_pressed from '../assets/button_blue_pressed.svg';\nimport bridge from '../assets/bridge.svg';\nimport lab from '../assets/lab.svg';\nimport rocket from '../assets/rocket.svg';\nimport rover from '../assets/rover.svg';\nimport rover_flipped from '../assets/rover_flipped.svg';\nimport mercury_crater from '../assets/mercury_crater.svg';\nimport venus_crater from '../assets/mercury_crater.svg';\nimport rock_blue from '../assets/rock_blue.svg';\nimport rock_red from '../assets/rock_red.svg';\nimport volcano from '../assets/volcano.svg';\nimport photograph from '../assets/photograph.svg';\n\nimport { CANVAS_HEIGHT, GROUND_HEIGHT } from './constants';\n\nexport const OBJECTS = {\n  BRIDGE: {\n    images: [bridge],\n    height: 13.5,\n    width: 90\n  },\n  ROVER: {\n    images: [rover, rover_flipped],\n    height: 80,\n    width: 80\n  },\n  BUTTON_BLUE: {\n    images: [button_blue_unpressed, button_blue_pressed],\n    height: 40,\n    width: 40\n  },\n  BUTTON_RED: {\n    images: [button_red_unpressed, button_red_pressed],\n    height: 40,\n    width: 40\n  },\n  ROCKET: {\n    images: [rocket],\n    height: 100,\n    width: 57\n  },\n  LAB: {\n    images: [lab],\n    height: 250,\n    width: 150 \n  },\n  MERCURY_CRATER: {\n    images: [mercury_crater],\n    height: 30,\n    width: 90\n  },\n  VENUS_CRATER: {\n    images: [venus_crater],\n    height: 30,\n    width: 90\n  },\n  ROCK_RED: {\n    images: [rock_red],\n    height: 30,\n    width: 40\n  },\n  ROCK_BLUE: {\n    images: [rock_blue],\n    height: 30,\n    width: 40\n  },\n  VOLCANO: {\n    images: [volcano],\n    height: 100,\n    width: 100,\n  },\n  PHOTOGRAPH: {\n    images: [photograph],\n    height: 60,\n    width: 60\n  }\n}\n\n// Get y position of object based on its elevation off the ground\nexport const obj_y = (object, elevation = 0) => (\n  CANVAS_HEIGHT - GROUND_HEIGHT - object.height - elevation \n)","// Game is divided into Planets and Missions\n\nimport { BLOCK_NAMES, EVENTS } from './blocks';\nimport { OBJECTS } from './objects';\n\n// Defaults for objects\nconst defaults = {\n  elevation: 0,\n  opacity: 1,\n  costumeNumber: 0,\n}\nconst d = defaults;\n\nexport const PLANETS = [\n  {\n    name: 'Mercury',\n    introConfig: {\n      size: 15,\n      scale: 2,\n      orbitDuration: 10000,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#bfbaac',\n      sky: '#7d705b',\n      text: 'black'\n    },\n    briefing: 'The Tenacity rover has arrived on Mercury. Use the control panel to help Tenacity complete its missions.',\n    missions: [\n      {\n        objective: 'Navigate Tenacity back to the spacecraft for refueling.',\n        hint: 'Click on a function to add it to Tenacity\\'s program. Click \"Submit Instructions\" when the program is ready to run.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 2]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 500},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 300},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 500, message: 'Tenacity did not make it back to spacecraft.'}\n        ]\n      },\n      {\n        objective: 'Get close to the crater to explore it. But be careful not to fall in!',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'crater', object: OBJECTS.MERCURY_CRATER, x: 500, elevation: -30, allowFall: true},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 100},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 400, message: 'Tenacity did not make it close enough to crater.'}\n        ]\n      },\n      {\n        objective: 'Return the rock sample back to the rocket.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.TURN, 1]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'crater', object: OBJECTS.MERCURY_CRATER, x: 500, elevation: -30, allowFall: true},\n          {...d, id: 'rock', object: OBJECTS.ROCK_RED, x: 400, elevation: -30},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 100, message: 'Tenacity did not make it back to rocket.'},\n          {category: 'rover_carry', value: 'rock', message: 'Tenacity does not have rock sample.'},\n        ]\n      },\n      {\n        objective: \"We're done here on Mercury! Launch the rocket to head to the next planet.\",\n        blocks: [\n          [BLOCK_NAMES.LAUNCH_ROCKET, 1]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 400},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'event', value: EVENTS.ROCKET_LAUNCH, message: 'Rocket did not launch.'}\n        ]\n      }\n    ]\n  },\n  {\n    name: 'Venus',\n    introConfig: {\n      size: 20,\n      scale: 1.7,\n      orbitDuration: 28900,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#ae7c43',\n      sky: '#dbb78f',\n      text: 'black'\n    },\n    briefing: 'Welcome to Venus! Tenacity\\'s mission is to explore the volcanos on the planet.',\n    missions: [\n      {\n        objective: 'Get to the base of the volcano and take a photo.',\n        hint: 'To repeat a section of a program multiple times, put it in between a \"Repeat\" and \"End Repeat\" instruction.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 1],\n          [BLOCK_NAMES.TAKE_PHOTO, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'volcano', object: OBJECTS.VOLCANO, x: 700},\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 200},\n        ],\n        criteria: [\n          {category: 'photograph', value: 700, message: 'Tenacity did not take photograph of volcano.'},\n        ]\n      },\n      {\n        objective: 'Collect the rock sample.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 2],\n          [BLOCK_NAMES.BRIDGE, 1],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'crater', object: OBJECTS.VENUS_CRATER, x: 300, allowFall: true, elevation: -30},\n          {...d, id: 'rock', object: OBJECTS.ROCK_RED, x: 600, elevation: -30},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 100},\n        ],\n        criteria: [\n          {category: 'rover_carry', value: 'rock', message: 'Tenacity does not have rock sample.'},\n        ]\n      },\n      {\n        objective: 'Take photos at each of the five volcanos.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 3],\n          [BLOCK_NAMES.TURN, 2],\n          [BLOCK_NAMES.TAKE_PHOTO, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'volcano1', object: OBJECTS.VOLCANO, x: 200},\n          {...d, id: 'volcano2', object: OBJECTS.VOLCANO, x: 300},\n          {...d, id: 'volcano3', object: OBJECTS.VOLCANO, x: 400},\n          {...d, id: 'volcano4', object: OBJECTS.VOLCANO, x: 500},\n          {...d, id: 'volcano5', object: OBJECTS.VOLCANO, x: 600},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'photograph', value: 200, message: 'Tenacity did not take photograph of all volcano.'},\n          {category: 'photograph', value: 300, message: 'Tenacity did not take photograph of all volcano.'},\n          {category: 'photograph', value: 400, message: 'Tenacity did not take photograph of all volcano.'},\n          {category: 'photograph', value: 500, message: 'Tenacity did not take photograph of all volcano.'},\n          {category: 'photograph', value: 600, message: 'Tenacity did not take photograph of all volcano.'},\n        ]\n      },\n      {\n        objective: 'Drop off both rock samples at the rocket.',\n        hint: 'Tenacity can only hold one object at a time.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5],\n          [BLOCK_NAMES.TURN, 1],\n          [BLOCK_NAMES.BRIDGE, 1],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.DROP, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n        ],\n        items: [\n          {...d, id: 'crater1', object: OBJECTS.VENUS_CRATER, x: 500, allowFall: true, elevation: -30},\n          {...d, id: 'rock1', object: OBJECTS.ROCK_BLUE, x: 600, elevation: -30},\n          {...d, id: 'crater2', object: OBJECTS.VENUS_CRATER, x: 300, allowFall: true, elevation: -30},\n          {...d, id: 'rock2', object: OBJECTS.ROCK_BLUE, x: 200, elevation: -30},\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 400},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'location_x', id: 'rock1', value: 400, message: 'Both rock samples were not dropped off at rocket.'},\n          {category: 'location_x', id: 'rock2', value: 400, message: 'Both rock samples were not dropped off at rocket.'},\n        ]\n      },\n      {\n        objective: \"We're done here on Venus! Launch the rocket to head to the next planet.\",\n        blocks: [\n          [BLOCK_NAMES.LAUNCH_ROCKET, 1]\n        ],\n        items: [\n          {...d, id: 'crater1', object: OBJECTS.VENUS_CRATER, x: 500, allowFall: true, elevation: -30},\n          {...d, id: 'crater2', object: OBJECTS.VENUS_CRATER, x: 300, allowFall: true, elevation: -30},\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 400},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'event', value: EVENTS.ROCKET_LAUNCH, message: 'Rocket did not launch.'}\n        ]\n      }\n    ]\n  },\n  {\n    name: 'Earth',\n    introConfig: {\n      size: 21,\n      scale: 1.3,\n      orbitDuration: 47000,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#34bf9a',\n      sky: '#9df2ee',\n      text: 'black'\n    },\n    briefing: 'The Tenacity rover has arrived on Earth. Deliver the photos and rock samples to the lab before proceeding to the next planet.',\n    missions: [\n      {\n        objective: 'Unlock the lab. To unlock the lab, press all of the blue buttons without pressing the red button.',\n        hint: 'Any instructions between an \"If\" and an \"End If\" instruction will only run if the \"If\" condition is true.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 1],\n          [BLOCK_NAMES.PRESS_BUTTON, 1],\n          [BLOCK_NAMES.REPEAT, 1],\n          [BLOCK_NAMES.END_REPEAT, 1],\n          [BLOCK_NAMES.IF_BUTTON_BLUE, 1],\n          [BLOCK_NAMES.END_IF, 1],\n        ],\n        items: [\n          {...d, id: 'lab', object: OBJECTS.LAB, x: 400},\n          {...d, id: 'button1', object: OBJECTS.BUTTON_BLUE, x: 400, elevation: 70, button: true},\n          {...d, id: 'button2', object: OBJECTS.BUTTON_RED, x: 500, elevation: 70, button: true},\n          {...d, id: 'button3', object: OBJECTS.BUTTON_BLUE, x: 600, elevation: 70, button: true},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 300},\n        ],\n        criteria: [\n          {category: 'button_press', id: 'button1', value: true, message: 'Tenacity did not press all blue buttons.'},\n          {category: 'button_press', id: 'button2', value: false, message: 'Tenacity pressed a red button.'},\n          {category: 'button_press', id: 'button3', value: true, message: 'Tenacity did not press all blue buttons.'},\n        ]\n      },\n    ]\n  },\n]","import ReactGA from 'react-ga';\n\nimport { PLANETS } from './game/missions.js';\n\nReactGA.initialize('UA-123778931-5');\n\nconst logAnalytics = process.env.NODE_ENV != 'development';\n\nexport const getMissionLabel = (planetIndex, missionIndex) => {\n  return `${PLANETS[planetIndex].name}, Mission ${missionIndex + 1}`;\n}\n\nexport const logPageview = () => {\n  if (logAnalytics) {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n}\n\nexport const logEvent = (event) => {\n  if (logAnalytics) {\n    ReactGA.event(event);\n  }\n}","import { BLOCKS, instruction_label, validate_program } from '../game/blocks';\nimport { getMissionLabel, logEvent } from '../analytics';\n\nconst ControlPanel = ({ addToProgram, blocks, onResetProgram, onSubmitProgram,\n                  program, programSubmitted, planetIndex, missionIndex }) => {\n\n  function blockClicked(blockId) {\n    if (!programSubmitted) {\n\n      const block = BLOCKS[blockId];\n\n      // Check for block arguments to add\n      const args = {};\n      if (block.args !== undefined) {\n        for (const arg of block.args) {\n          args[arg.key] = window.prompt(arg.text);\n          if (args[arg.key] === null) {\n            return;\n          }\n        }\n      }\n      addToProgram(blockId, args);\n    }\n  }\n\n  function submitProgram() {\n\n    const { isValid, augmentedProgram, error } = validate_program(program);\n\n    // Don't allow submission of an invalid program\n    if (!isValid) {\n      logEvent({\n        category: 'Error',\n        action: 'Invalid Program Error',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: error\n      });\n      alert(error);\n      return;\n    }\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    setTimeout(() => {\n      onSubmitProgram(augmentedProgram);\n    }, 1000);\n  }\n\n  return (\n    <div id='control-panel'>\n      <div id='control-panel-container'>\n        <div>\n          <div id='program'>\n            {program.map((instruction, i) => {\n              return <div key={i}>\n                {instruction_label(instruction)}\n              </div>\n            })}\n          </div>\n          {!programSubmitted &&\n          <div>\n            <button onClick={onResetProgram}>Reset</button>\n            <button onClick={submitProgram}>Submit Instructions</button>\n          </div>\n          }\n        </div>\n        <div id='blocks'>\n          {blocks.map(([block, count], i) => {\n            if (count === 0)\n              return false;\n            return <button\n              className='block'\n              key={i}\n              onClick={() => blockClicked(block)}\n            >\n              {BLOCKS[block].name} (x{count})\n            </button>\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ControlPanel;","import { useState } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport { logEvent } from '../analytics';\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\nimport '../css/GameIntro.css';\n\nconst BUTTON_WIDTH = 200;\nconst BUTTON_HEIGHT = 80;\n\nconst GameIntro = ({ onCompleteIntro, onStartPlaying }) => {\n\n  // State to keep track of whether play button has been clicked\n  const [start, setStart] = useState(false);\n\n  // Fade in and fade out for titles\n  const titleSpring = useSpring({\n    to: {opacity: start ? 0 : 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    onRest: () => {\n      if (start)\n        onCompleteIntro();\n    }\n  });\n\n  // Start playing music and begin game\n  const completeIntro = () => {\n    logEvent({\n      'category': 'Game',\n      'action': 'Play Game'\n    });\n    onStartPlaying();\n    setStart(true);\n  };\n\n  return (\n    <a.g opacity={titleSpring.opacity}>\n\n      {/* Main title */}\n      <text\n        x='50%'\n        y='30%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        className='titleText'\n        opacity={titleSpring.opacity}\n      >\n        Tenacity\n      </text>\n\n      {/* Subtitle */}\n      <text\n        x='50%'\n        y='45%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        className='subheadText'\n        opacity={titleSpring.opacity}\n      >\n        A game by Brian Yu\n      </text>\n\n      {/* Play button */}\n      <rect\n        x={(CANVAS_WIDTH - BUTTON_WIDTH) / 2}\n        y='360'\n        height={BUTTON_HEIGHT}\n        width={BUTTON_WIDTH}\n        rx={20}\n        fill='white'\n        className='hoverable'\n        onClick={completeIntro}\n      />\n      <text\n        x={CANVAS_WIDTH / 2}\n        y='400'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        style={{ fontSize: '48px', fill: 'black' }}\n        className='hoverable'\n        onClick={completeIntro}\n      >\n        Play\n      </text>\n\n    </a.g>\n  );\n}\n\nexport default GameIntro;","const GameWIP = () => {\n  return (<div style={{ maxWidth: '500px' }}>\n    <div>\n      Tenacity is a work in progress, and you've reached the end of what's been\n      developed so far! Check back soon for more missions.\n    </div>\n    <br/>\n    <div>\n      Tenacity is developed by Brian Yu at Harvard Graduate School of Education.\n      While the game is in development, I would love to hear thoughts, feedback, and\n      recommendations: you can reach me\n      at <a style={{color: 'white'}} href=\"mailto:brian@brianyu.me\">brian@brianyu.me</a>.\n    </div>\n  </div>);\n}\n\nexport default GameWIP;","import { CANVAS_HEIGHT, CANVAS_WIDTH, GROUND_HEIGHT } from '../game/constants';\n\nconst SHOW_TICKS = true;\nconst TICK_INTERVAL = 100;\nconst TICK_WIDTH = 1;\nconst TICK_HEIGHT = 10;\n\nconst Ground = ({ planet }) => {\n  return (\n    <g>\n      <rect\n        x={0} y={CANVAS_HEIGHT - GROUND_HEIGHT} width={CANVAS_WIDTH} height={GROUND_HEIGHT}\n        fill={planet.colors.main}\n      />\n      {SHOW_TICKS && [...Array(CANVAS_WIDTH / TICK_INTERVAL).keys()].map(i => {\n        return <rect\n          key={i}\n          x={i * TICK_INTERVAL - (TICK_WIDTH / 2)}\n          y={CANVAS_HEIGHT - GROUND_HEIGHT}\n          width={TICK_WIDTH}\n          height={TICK_HEIGHT}\n        />\n      })}\n    </g>\n  );\n}\n\nexport default Ground;","import { useState, useEffect } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\nimport { PLANETS } from '../game/missions';\n\nconst START_RADIUS = 100;\nconst RADIUS_INCREMENT = 50;\n\nconst PlanetIntro = ({ onCompleteIntro, onZoomIntro, planetIndex }) => {\n\n  // Determine current planet and scale\n  const planet = PLANETS[planetIndex];\n  const scale = planet.introConfig.scale;\n\n  // State to keep track of stage in animation\n  const [resetOrbit, setResetOrbit] = useState(false);\n  const [exitIntro, setExitIntro] = useState(false);\n  const [planetZoom, setPlanetZoom] = useState(false);\n  const [planetText, setPlanetText] = useState(false);\n\n  // Fade in for sun\n  const sunSpring = useSpring({\n    to: {opacity: 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    delay: 1500,\n  });\n\n  // Fade in for planets\n  const planetOpacitySpring = useSpring({\n    to: {opacity: 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    delay: 3000\n  })\n\n  // Angle for planets' orbit\n  const planetMotionSpring = useSpring({\n    to: {angle: 4 * Math.PI},\n    from: {angle: 0},\n    config: {duration: 20000},\n    reset: resetOrbit,\n    onRest: () => setResetOrbit(state => !state)\n  });\n\n  // Planet zoom\n  const planetZoomSpring = useSpring({\n    to: {zoom: planetZoom ? 1 : 0},\n    from: {zoom: 0},\n    config: {duration: 1000},\n    onRest: () => {\n      if (planetZoom) {\n        onZoomIntro();\n        setPlanetText(true);\n      } \n    }\n  });\n\n  // Fade out for scene\n  const sceneExitSpring = useSpring({\n    to: {opacity: exitIntro ? 0: 1},\n    from: {opacity: 1},\n    config: {duration: 2000},\n    onRest: () => {\n      if (exitIntro) {\n        onCompleteIntro();\n      }\n    }\n  });\n\n  // Fade in for planet text\n  const planetTextSpring = useSpring({\n    to: {opacity: planetText ? 1: 0},\n    from: {opacity: 0},\n    config: {duration: 1000},\n    onRest: () => {\n      if (planetText) {\n        setTimeout(() => {\n          setExitIntro(true);\n        }, 2000);\n      }\n    }\n  })\n\n  // Generate orbit and planet for each visible planet\n  const renderedPlanets = PLANETS.slice(0, 1 + planetIndex).map((planet, i) => {\n\n    const isLastPlanet = i == planetIndex;\n\n    const radius = START_RADIUS + RADIUS_INCREMENT * i;\n    return <a.g key={i} opacity={planetOpacitySpring.opacity}>\n      <a.circle\n        cx={CANVAS_WIDTH / 2}\n        cy={CANVAS_HEIGHT / 2}\n        r={radius * scale}\n        fillOpacity={0}\n        stroke={'white'}\n        strokeWidth={2}\n      />\n      <a.circle\n        cx={planetMotionSpring.angle.interpolate(theta =>\n          (CANVAS_WIDTH / 2) + scale * (radius * Math.cos(theta * (10000 / planet.introConfig.orbitDuration))))\n        }\n        cy={planetMotionSpring.angle.interpolate(theta =>\n          (CANVAS_HEIGHT / 2) - scale * (radius * Math.sin(theta * (10000 / planet.introConfig.orbitDuration))))\n        }\n        r={isLastPlanet ?\n            planetZoomSpring.zoom.interpolate(zoom => \n              planet.introConfig.size * scale + zoom * (1600 - planet.introConfig.size * scale)\n            )\n            : planet.introConfig.size * scale}\n        style={{ fill: planet.colors.main }}\n      /> \n    </a.g>;\n  });\n\n  // Fade out intro screen\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setPlanetZoom(true);\n    }, 10000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <a.g opacity={sceneExitSpring.opacity}>\n\n      {/* Sun */}\n      <a.circle\n        cx={CANVAS_WIDTH / 2}\n        cy={CANVAS_HEIGHT / 2}\n        r={50 * scale}\n        style={{ fill: '#f0f067' }}\n        opacity={sunSpring.opacity}  \n      />\n\n      {/* Other Planets */}\n      {renderedPlanets}\n\n      <a.text\n        x='50%'\n        y='50%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        style={{ fontSize: '80px', fill: planet.introConfig.textColor }}\n        opacity={planetTextSpring.opacity}\n      >\n        {planet.name}\n      </a.text>\n    </a.g>\n  );\n}\n\nexport default PlanetIntro;","import { CANVAS_WIDTH } from '../game/constants';\n\nconst PADDING = 15;\nconst CIRCLE_RADIUS = 20;\n\nconst ProgressIndicator = ({ planet, completedMissions }) => {\n  return (\n    <g>\n      <text\n        textAnchor='end'\n        dominantBaseline='hanging'\n        x={CANVAS_WIDTH - PADDING}\n        y={PADDING}\n        style={{ fill: planet.colors.text, fontSize: '24px' }}\n      >\n        {planet.name}\n      </text>\n\n      {planet.missions.map((mission, i) => {\n        return (\n          <circle\n            key={i}\n            cx={PADDING + CIRCLE_RADIUS + (CIRCLE_RADIUS * 2 + PADDING) * i}\n            cy={PADDING + CIRCLE_RADIUS}\n            r={CIRCLE_RADIUS}\n            style={{\n                fill: completedMissions > i ? planet.colors.main : 'rgba(0, 0, 0, 0)',\n                stroke: planet.colors.main,\n                strokeWidth: completedMissions > i ? 0 : 1\n            }}\n          />\n        )\n      })}\n    </g>\n  )\n};\n\nexport default ProgressIndicator;","const Item = ({object, x, y, center, costumeIndex, opacity}) => {\n\n  // Use costume 0 by default\n  if (costumeIndex === undefined) {\n    costumeIndex = 0;\n  }\n\n  return (\n    <image\n      href={object.images[costumeIndex]}\n      height={object.height}\n      x={center === false ? x : x - (object.width / 2)}\n      y={y}\n      opacity={opacity}\n    />\n  )\n}\n\nexport default Item;","import { useState, useEffect } from 'react';\nimport { useSpring, useSprings, animated as a } from 'react-spring';\n\nimport Item from './Item';\n\nimport { getMissionLabel, logEvent } from '../analytics';\nimport { BLOCK_NAMES, EVENTS } from '../game/blocks';\nimport { PLANETS } from '../game/missions';\nimport { OBJECTS, obj_y } from '../game/objects';\n\nconst STEP_SIZE = 100;\n\nconst AItem = a(Item);\n\nconst Level = ({ planetIndex, missionIndex, onSuccess, onFailure, program, programSubmitted }) => {\n\n  const planet = PLANETS[planetIndex];\n  const mission = planet.missions[missionIndex];\n\n  useEffect(() => {\n    logEvent({\n      category: 'Level',\n      action: 'Start Level',\n      label: getMissionLabel(planetIndex, missionIndex)\n    });\n  }, [missionIndex, planetIndex]);\n\n  const [state, setState] = useState({\n    startTime: new Date(),\n    currentInstruction: 0,\n    instructionsCompleted: 0,\n    items: mission.items,\n    winMessage: false,\n    loseMessage: false,\n    photographs: [], // x locations of photographs\n    bridges: [], // x locations of bridges\n    buttons: [], // ids of buttons that have been pressed\n    loopMetadata: {}, // how many times has each loop run so far\n    events: [] // events that have taken place\n  });\n\n  const { startTime, currentInstruction, instructionsCompleted, items, photographs,\n          bridges, buttons, winMessage, loseMessage } = state;\n\n  // Determine index of rover\n  const roverIndex = items.findIndex(item => item.id === 'rover');\n  const rover = roverIndex !== -1 ? items[roverIndex] : null;\n  const rocketIndex = items.findIndex(item => item.id === 'rocket');\n  const rocket = rocketIndex !== -1 ? items[rocketIndex] : null;\n\n  // Check if level is won\n  function checkWin() {\n    for (let i = 0; i < mission.criteria.length; i++) {\n      if (!checkCriteria(mission.criteria[i])) {\n        return {isWin: false, message: mission.criteria[i].message || true};\n      }\n    }\n    return {isWin: true};\n  }\n\n  // Check if particular criteria is true\n  function checkCriteria(criterion) {\n    switch (criterion.category) {\n      \n      // Confirm x location of rover\n      case 'rover_x':\n        if (criterion.value === rover.x) {\n          return true;\n        }\n        return false;\n\n      case 'location_x':\n        for (const item of items) {\n          if (item.id === criterion.id && item.x === criterion.value) {\n            return true;\n          }\n        }\n        return false;\n\n      case 'rover_carry':\n        for (const item of items) {\n          if (item.id === criterion.value && item.carried === true) {\n            return true;\n          }\n        }\n        return false;\n      \n      // Confirm that event took place\n      case 'event':\n        for (const event of state.events) {\n          if (criterion.value === event) {\n            return true;\n          }\n        }\n        return false;\n\n      case 'photograph':\n        for (const photograph of photographs)  {\n          if (criterion.value === photograph) {\n            return true;\n          };\n        }\n        return false;\n\n      case 'button_press':\n        // If button is pressed, return true if that was the goal, false otherwise\n        for (const button of buttons) {\n          if (button === criterion.id) {\n            return criterion.value;\n          }\n        }\n        return !criterion.value;\n\n      default:\n        console.log('Error: Unknown criterion.');\n        return false;\n    }\n\n  }\n\n  // Check to see if item will fall into something that allows falling\n  function checkFall(target) {\n    \n    // If there's a bridge at target's x elevation, don't fall\n    for (const bridge of bridges) {\n      if (bridge === target.x) {\n        return false;\n      }\n    }\n\n    // If there's no bridge, check for an item that allows falling\n    for (const item of items) {\n      if (item.allowFall && item.x === target.x && target.elevation === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Checks if a bridge can be built at a particular x location\n  // Bridges can only be built over fallable items\n  function canBuildBridge(x) {\n    for (const item of items) {\n      if (item.allowFall && item.x === x) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Get object to pick up; closest object to rover, null if none\n  function getPickupObject() {\n    let obj = null; \n    for (const item of items) {\n      if (!item.carried && item !== rover && item.x === rover.x && (obj === null || item.elevation > obj.elevation)) {\n        obj = item;\n      }\n    }\n    return obj;\n  }\n\n  // Get the object that is currently carried\n  function getCarriedObject() {\n    for (const item of items) {\n      if (item.carried) {\n        return item;\n      }\n    }\n    return null;\n  }\n\n  // Get the button where the rover currently is\n  function getCurrentButton() {\n    for (const item of items) {\n      if (item.button === true && item.x === rover.x) {\n        return item;\n      }\n    }\n    return null;\n  }\n\n  // Takes a list of items and returns items with the util value for the rover flipped\n  // Doesn't functionally change anything about the items, but triggers an animation\n  function roverNoop(items) {\n    return items.map((item, i) => i === roverIndex ? {\n      ...rover,\n      util: (rover.util || 0) + 1\n    } : item);\n  }\n\n  // Run an instruction\n  if (programSubmitted && currentInstruction < program.length &&\n      instructionsCompleted === currentInstruction && !winMessage && !loseMessage) {\n    const instruction = program[currentInstruction];\n\n    // Decide which instruction to use\n    let obj;\n    switch (instruction.block) {\n\n      // Move the rover forward\n      case BLOCK_NAMES.FORWARD:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: state.items.map((item, i) => i === roverIndex || item.carried === true ? {\n              ...item,\n              x: rover.costumeNumber === 0 ? item.x + STEP_SIZE : item.x - STEP_SIZE\n            } : item),\n        }));\n        break;\n\n      case BLOCK_NAMES.TURN:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: state.items.map((item, i) => i === roverIndex ? {\n              ...rover,\n              costumeNumber: rover.costumeNumber === 0 ? 1 : 0\n            } : item),\n        }));\n        break;\n\n      case BLOCK_NAMES.PICK_UP:\n        obj = getPickupObject();\n        if (obj !== null) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: state.items.map((item, i) => item === obj ? {\n              ...obj,\n              elevation: 30,\n              prevElevation: obj.elevation,\n              carried: true\n            } : i === roverIndex ? {\n              ...rover,\n              util: (rover.util || 0) + 1\n            } : item),\n          }))\n        } else {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.DROP:\n        obj = getCarriedObject();\n        if (obj !== null) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: state.items.map((item, i) => item === obj ? {\n              ...obj,\n              elevation: obj.prevElevation,\n              carried: false\n            } : i === roverIndex ? {\n              ...rover,\n              util: (rover.util || 0) + 1,\n            } : item),\n          }));\n        } else {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.LAUNCH_ROCKET:\n        const shouldLaunch = rocket && rover && rocket.x === rover.x;\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: shouldLaunch ?\n            state.items.map((item, i) =>\n              i === roverIndex ? {\n                ...rover,\n                opacity: -10\n              } :\n              i === rocketIndex ? {\n                ...rocket,\n                elevation: 600\n              } : item\n            )\n          : state.items,\n          events: [...state.events, EVENTS.ROCKET_LAUNCH]\n        }));\n        break;\n\n      case BLOCK_NAMES.REPEAT:\n        const iterationsCompleted = state.loopMetadata[instruction.meta.id] || 0;\n\n        // Done looping\n        if (iterationsCompleted >= instruction.args.count) {\n          setState(state => ({\n            ...state,\n            currentInstruction: instruction.meta.jumpTo - 1,\n            instructionsCompleted: instruction.meta.jumpTo,\n            items: roverNoop(state.items),\n          }));\n\n        // Need to loop more\n        } else {\n          setState(state => ({\n            ...state,\n            currentInstruction: state.currentInstruction + 1,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n            loopMetadata: {\n              ...state.loopMetadata,\n              [instruction.meta.id]: iterationsCompleted + 1\n            }\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.END_REPEAT:\n        setState(state => ({\n          ...state,\n          currentInstruction: instruction.meta.jumpBackTo,\n          instructionsCompleted: instruction.meta.jumpBackTo,\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      case BLOCK_NAMES.IF_BUTTON_BLUE:\n        let blue_button = false;\n        for (const item of items) {\n          if (item.x === rover.x && item.object === OBJECTS.BUTTON_BLUE) {\n            blue_button = true;\n            break;\n          }\n        }\n        if (blue_button) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: roverNoop(state.items),\n          }));\n        } else {\n          setState(state => ({\n            ...state,\n            currentInstruction: instruction.meta.jumpTo - 1,\n            instructionsCompleted: instruction.meta.jumpTo,\n            items: roverNoop(state.items),\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.END_IF:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      case BLOCK_NAMES.PRESS_BUTTON:\n        obj = getCurrentButton();\n        if (obj !== null) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            buttons: [...state.buttons, obj.id],\n            items: state.items.map((item, i) => item.id === obj.id ?\n              {\n                ...item,\n                costumeNumber: 1 \n              }\n              : item\n            ),\n          }));\n        } else {\n          setState(state => ({\n            ...state,\n           loseMessage: 'Tenacity tried to press a button that wasn\\'t there.'\n          }));\n        }\n        break;\n\n      case BLOCK_NAMES.TAKE_PHOTO:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          photographs: [...state.photographs, rover.x],\n          items: roverNoop(state.items),\n        }));\n        break;\n\n      case BLOCK_NAMES.BRIDGE:\n        const bridgeX = rover.costumeNumber === 0 ? rover.x + STEP_SIZE : rover.x - STEP_SIZE;\n        if (canBuildBridge(bridgeX)) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            bridges: [...state.bridges, bridgeX],\n            items: roverNoop(state.items),\n          }));\n        } else {\n          setState(state => ({\n            ...state,\n           loseMessage: 'Tenacity can only build bridges over craters.'\n          }));\n        }\n        \n        break;\n\n      default:\n        console.log('ERROR: Unknown block.');\n    }\n}\n\nconst winSpring = useSpring({\n  to: {opacity: winMessage ? 1 : 0},\n  from: {opacity: 0},\n  config: {duration: 1000},\n  delay: 500,\n  onRest: () => {\n    if (winMessage) {\n      logEvent({\n        category: 'Level',\n        action: 'Win Level',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: Math.round((new Date() - startTime) / 1000)\n      });\n      setTimeout(() => {\n        onSuccess();\n      }, 2500);\n    }\n  }\n});\n\nconst loseSpring = useSpring({\n  to: {opacity: loseMessage ? 1 : 0},\n  from: {opacity: 0},\n  config: {duration: 1000},\n  delay: 500,\n  onRest: () => {\n    if (loseMessage) {\n      logEvent({\n        category: 'Level',\n        action: 'Lose Level',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: Math.round((new Date() - startTime) / 1000)\n      });\n      setTimeout(() => {\n        onFailure();\n      }, 2500);\n    }\n  }\n});\n\nconst itemSprings = useSprings(items.length, items.map((item, i) => ({\n  to: {\n    x: item.x,\n    elevation: item.elevation,\n    opacity: item.opacity,\n    util: item.util || 0 // utility variable to force transitions\n  },\n  config: {duration: 1000},\n  onRest: () => {\n\n    if (winMessage || loseMessage) {\n      return;\n    }\n\n    // Check for collisions\n    if (i === roverIndex && programSubmitted) {\n      if (checkFall(item)) {\n        setState(state => ({\n          ...state,\n          items: state.items.map((item, i) => i === roverIndex || item.carried === true ? {\n            ...item,\n            elevation: item.elevation - 20\n          } : item),\n          loseMessage: 'Tenacity fell into crater.'\n        }));\n        return;\n      }\n    }\n\n    // Check if program is over\n    if (i === roverIndex && programSubmitted && state.instructionsCompleted === program.length) {\n      const { isWin, message } = checkWin();\n      if (isWin) {\n        setState(state => ({...state, winMessage: true})); \n      } else {\n        setState(state => ({...state, loseMessage: message})); \n      }\n    }\n\n    // When rover completes its action, move on to the next instruction\n    if (i === roverIndex && programSubmitted\n        && state.instructionsCompleted > currentInstruction\n        && state.instructionsCompleted !== program.length) {\n\n      setTimeout(() => {\n        setState(state => ({\n          ...state,\n          currentInstruction: state.currentInstruction + 1\n        }));\n      }, 250);\n    }\n  }\n})));\n\n\n\nreturn (\n    <g>\n      {itemSprings.map((spring, i) => {\n        const item = items[i];\n        return (<AItem\n          key={i}\n          object={item.object}\n          x={spring.x}\n          y={spring.elevation.interpolate(e => obj_y(item.object, e))}\n          costumeIndex={item.costumeNumber}\n          center={item.object.center !== false}\n          opacity={spring.opacity}\n        />);\n      })}\n      {\n        bridges.map((x, i) => {\n          const bridge = OBJECTS.BRIDGE;\n          return (<AItem\n            key={i}\n            object={bridge}\n            x={x}\n            y={obj_y(bridge, -bridge.height)}\n            costumeIndex={0}\n            center={true}\n            opacity={1}\n          />);\n        })\n      }\n      {\n        photographs.map((x, i) => {\n          const photograph = OBJECTS.PHOTOGRAPH;\n          return (<AItem\n            key={i}\n            object={photograph}\n            // x={20 + (photograph.width + 10) * i}\n            x={x}\n            y={obj_y(photograph, -80)}\n            costumeIndex={0}\n            center={true}\n            opacity={1}\n          />);\n        })\n      }\n      <a.text\n        x='50%'\n        y='20%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={winSpring.opacity}\n        style={{ fontSize: '80px', fill: planet.colors.text }}\n      >\n        Mission Success\n      </a.text>\n      <a.text\n        x='50%'\n        y='20%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={loseSpring.opacity}\n        style={{ fontSize: '80px', fill: planet.colors.text }}\n      >\n        Try Again\n      </a.text>\n      <a.text\n        x='50%'\n        y='35%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={loseSpring.opacity}\n        style={{ fontSize: '30px', fill: planet.colors.text }}\n      >\n        {loseMessage === true ? '' : loseMessage}\n      </a.text>\n    </g>\n  );\n}\n\nexport default Level;","const MissionObjective = ({ missionNumber, objective, hint }) => {\n  return (\n    <div style={{ fontSize: '24px', textAlign: 'center' }}>\n      <strong>Mission {missionNumber} Objective</strong>\n      <br/>\n      {objective}\n      {\n        hint &&\n        <div style={{ fontSize: '18px', textAlign: 'center' }}>\n          <hr/>\n          {hint}\n          <br/>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default MissionObjective;","const MissionBriefing = ({ briefing, onCompleteBriefing }) => {\n  return (\n    <div style={{ fontSize: '24px', textAlign: 'center' }}>\n      {briefing}\n      <br/>\n      <button onClick={onCompleteBriefing}>Continue</button>\n    </div>\n  );\n}\n\nexport default MissionBriefing;","import React, { useReducer } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport ControlPanel from './ControlPanel';\nimport GameIntro from './GameIntro';\nimport GameWIP from './GameWIP';\nimport Ground from './Ground';\nimport PlanetIntro from './PlanetIntro';\nimport ProgressIndicator from './ProgressIndicator';\nimport Level from './Level';\nimport MissionObjective from './MissionObjective';\nimport MissionBriefing from './MissionBriefing';\n\nimport { PLANETS } from '../game/missions';\nimport { CANVAS_WIDTH, CANVAS_HEIGHT } from '../game/constants';\nimport { remaining_blocks } from '../game/blocks';\n\n// Skip certain sequences\nconst DEV_MODE = false;\nconst START_PLANET = 0;\nconst START_MISSION = 0;\n\nconst ACTION = {\n\n  // Intro screens\n  COMPLETE_INTRO: 'COMPLETE_INTRO',\n  COMPLETE_PLANET_INTRO: 'COMPLETE_PLANET_INTRO',\n  ZOOM_PLANET_INTRO: 'ZOOM_PLANET_INTRO',\n  COMPLETE_BRIEFING: 'COMPLETE_BRIEFING',\n\n  // Program actions\n  ADD_TO_PROGRAM: 'ADD_TO_PROGRAM',\n  RESET_PROGRAM: 'RESET_PROGRAM',\n  SUBMIT_PROGRAM: 'SUBMIT_PROGRAM',\n\n  // Changing missions\n  NEXT_MISSION: 'NEXT_MISSION',\n  REPEAT_MISSION: 'REPEAT_MISSION'\n}\n\n// Keeps track of current position in planet intro\nconst PLANET_INTRO_STATUS = {\n  NOT_SHOWN: 0,\n  ZOOMING: 1,\n  COMPLETE: 2\n};\n\nconst HANDLER = {\n\n  // Intro screens\n  [ACTION.COMPLETE_INTRO]: state => {\n    return {...state, introShown: true};\n  },\n  [ACTION.ZOOM_PLANET_INTRO]: state => {\n    if (state.planetIntroStatus === PLANET_INTRO_STATUS.NOT_SHOWN) {\n      return {...state, planetIntroStatus: PLANET_INTRO_STATUS.ZOOMING}\n    } else {\n      return state;\n    }\n  },\n  [ACTION.COMPLETE_PLANET_INTRO]: state => {\n    return {...state, planetIntroStatus: PLANET_INTRO_STATUS.COMPLETE}\n  },\n  [ACTION.COMPLETE_BRIEFING]: state => {\n    return {...state, briefingShown: true}\n  },\n\n  // Program actions\n  // TODO: add args\n  [ACTION.ADD_TO_PROGRAM]: (state, {block, args}) => {\n    return {...state, program: [...state.program, {block, args} ]}\n  },\n  [ACTION.RESET_PROGRAM]: state => {\n    return {...state, program: []}\n  },\n  [ACTION.SUBMIT_PROGRAM]: (state, augmentedProgram) => {\n    return {...state, program: augmentedProgram, programSubmitted: true}\n  },\n\n  // Changing missions\n  [ACTION.NEXT_MISSION]: (state) => {\n    const planet = PLANETS[state.planetIndex];\n\n    // Next mission on this planet\n    if (state.missionIndex + 1 < planet.missions.length) {\n      return {\n        ...state,\n        missionIndex: state.missionIndex + 1,\n        round: state.round + 1,\n        program: [],\n        programSubmitted: false,\n      }\n\n    // Next mission takes us to a new planet\n    } else if (state.planetIndex + 1 < PLANETS.length) {\n      return {\n        ...state,\n        planetIndex: state.planetIndex + 1,\n        missionIndex: 0,\n        round: state.round + 1,\n        planetIntroStatus: PLANET_INTRO_STATUS.NOT_SHOWN,\n        briefingShown: false,\n        program: [],\n        programSubmitted: false,\n      }\n    \n    // No more levels\n    } else {\n      return {\n        ...state,\n        done: true\n      }\n    }\n  },\n\n  [ACTION.REPEAT_MISSION]: (state) => {\n    return {\n      ...state,\n      round: state.round + 1,\n      program: [],\n      programSubmitted: false,\n    }\n  }\n};\n\nconst reducer = (state, { type, payload }) => {\n  const handler = HANDLER[type];\n  if (!handler) return state;\n  return handler(state, payload);\n};\n\n// Returns initial state. Includes devellopment flag for skipping parts.\nconst getInitialState = (development) => {\n\n  return {\n\n    // Track current mission for user\n    planetIndex: START_PLANET || 0,\n    missionIndex: START_MISSION || 0,\n    done: false,\n    round: 0,\n\n    // Track current status of game\n    introShown: development ? true : false,\n    planetIntroStatus: development ? PLANET_INTRO_STATUS.COMPLETE: PLANET_INTRO_STATUS.NOT_SHOWN,\n    briefingShown: development ? true : false,\n\n    // Current sequence of blocks\n    program: [],\n    programSubmitted: false,\n\n  }\n}\n\nconst Scene = (props) => {\n\n  const { onStartPlaying } = props;\n\n  const [state, dispatch] = useReducer(reducer, getInitialState(DEV_MODE));\n  const act = (type, payload) => dispatch({ type, payload });\n\n  const {\n    planetIndex,\n    missionIndex,\n    introShown,\n    planetIntroStatus,\n    briefingShown,\n    program,\n    programSubmitted,\n    round,\n    done\n  } = state;\n\n  const planet = PLANETS[planetIndex];\n  const mission = planet.missions[missionIndex];\n\n  // Handle entering and exiting introduction screens\n  function handleCompleteIntro() {\n    act(ACTION.COMPLETE_INTRO);\n  }\n\n  function handleZoomPlanetIntro() {\n    act(ACTION.ZOOM_PLANET_INTRO);\n  }\n\n  function handleCompletePlanetIntro() {\n    act(ACTION.COMPLETE_PLANET_INTRO);\n  }\n\n  function handleCompleteBriefing() {\n    act(ACTION.COMPLETE_BRIEFING);\n  }\n\n  function addToProgram(block, args) {\n    act(ACTION.ADD_TO_PROGRAM, {block, args});\n  }\n\n  function showIntro() {\n    return <GameIntro\n      onStartPlaying={onStartPlaying}\n      onCompleteIntro={handleCompleteIntro}\n    />;\n  }\n\n  function showPlanetIntro() {\n    return <PlanetIntro\n      planetIndex={planetIndex}\n      onZoomIntro={handleZoomPlanetIntro}\n      onCompleteIntro={handleCompletePlanetIntro}\n    />\n  }\n\n  function showLevel() {\n    return <Level\n      key={round}\n      planetIndex={planetIndex}\n      missionIndex={missionIndex}\n      onFailure={() => act(ACTION.REPEAT_MISSION)}\n      onSuccess={() => act(ACTION.NEXT_MISSION)}\n      program={program}\n      programSubmitted={programSubmitted}\n    />\n  }\n\n  function showBriefing() {\n    return <MissionBriefing\n      briefing={planet.briefing}\n      onCompleteBriefing={handleCompleteBriefing}\n    />\n  }\n\n  function showGround() {\n    return <Ground\n      planet={planet}\n    />\n  }\n\n  const backgroundColorSpring = useSpring({\n    to: {color: introShown ? (\n      planetIntroStatus >= PLANET_INTRO_STATUS.ZOOMING ? planet.colors.sky : 'black'\n      ) : 'rgba(0, 0, 0, 0)'},\n    from: {color: 'rgba(0, 0, 0, 0)'},\n    config: {duration: 1500}\n  });\n\n  const levelInProgress = planetIntroStatus === PLANET_INTRO_STATUS.COMPLETE;\n  const showControlPanel = levelInProgress && briefingShown;\n\n  // Temporary game over screen\n  if (done) {\n    return <GameWIP />;\n  }\n\n  return (\n    <div style={{ maxWidth: CANVAS_WIDTH }}>\n      <a.svg width={CANVAS_WIDTH} height={CANVAS_HEIGHT} className='scene'\n           style={{ backgroundColor: backgroundColorSpring.color }}\n      >\n\n        {/* Ground, appears when planet has been zoomed in  */}\n        {planetIntroStatus >= PLANET_INTRO_STATUS.ZOOMING && showGround()}\n\n        {levelInProgress && \n          <ProgressIndicator\n            planet={planet}\n            completedMissions={missionIndex}\n          />\n        }\n\n        {!introShown ? showIntro() : !levelInProgress ? showPlanetIntro() : showLevel()}\n      </a.svg>\n      {levelInProgress &&\n        (briefingShown ?\n          <MissionObjective\n            missionNumber={missionIndex + 1}\n            objective={mission.objective}\n            hint={mission.hint}\n          />\n        : showBriefing())\n      }\n      {showControlPanel &&\n        <ControlPanel\n          planetIndex={planetIndex}\n          missionIndex={missionIndex}\n          addToProgram={addToProgram}\n          blocks={remaining_blocks(mission.blocks, program)}\n          onResetProgram={() => act(ACTION.RESET_PROGRAM)}\n          onSubmitProgram={(augmentedProgram) => act(ACTION.SUBMIT_PROGRAM, augmentedProgram)}\n          program={program}\n          programSubmitted={programSubmitted}\n        />\n      }\n    </div>\n  );\n};\n\nexport default Scene;","export default __webpack_public_path__ + \"static/media/amerika.421d9361.mp3\";","import React, { useState } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\nimport Sound from 'react-sound';\n\nimport Scene from './Scene';\n\nimport backgroundMusic from '../assets/amerika.mp3';\n\nconst ASound = a(Sound);\n\nconst Page = () => {\n\n  const [playing, setPlaying] = useState(false);\n  const handleStartPlaying = () => setPlaying(true);\n\n  // Fade in audio\n  const audioSpring = useSpring({\n    to: {volume: playing ? 100 : 0},\n    from: {volume: 0},\n    config: {duration: 8000}\n  });\n\n  return (\n    <div className='page'>\n      <div className='scene-container'>\n        <Scene\n          onStartPlaying={handleStartPlaying}\n        />\n      </div>\n      <ASound\n        url={backgroundMusic}\n        playStatus={playing ? Sound.status.PLAYING : Sound.status.STOPPED}\n        autoLoad={true}\n        loop={true}\n        volume={audioSpring.volume}\n      />\n    </div>\n  );\n}\n\nexport default Page;","import Page from './components/Page';\n\nexport default Page;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { logPageview } from './analytics';\nimport reportWebVitals from './reportWebVitals';\n\nlogPageview();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}