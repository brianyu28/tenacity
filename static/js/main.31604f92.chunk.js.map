{"version":3,"sources":["game/blocks.js","components/ControlPanel.js","assets/rocket.svg","assets/rover.svg","assets/rover_flipped.svg","assets/mercury_crater.svg","assets/rock_red.svg","game/constants.js","game/objects.js","game/missions.js","analytics.js","components/GameIntro.js","components/GameWIP.js","components/Ground.js","components/PlanetIntro.js","components/ProgressIndicator.js","components/Level.js","components/Item.js","components/MissionObjective.js","components/MissionBriefing.js","components/Scene.js","assets/amerika.mp3","components/Page.js","App.js","reportWebVitals.js","index.js"],"names":["BLOCK_NAMES","BLOCKS","name","remaining_blocks","blocks","program","counts","i","length","block","undefined","reduce","acc","count","addToProgram","onResetProgram","onSubmitProgram","programSubmitted","id","map","instruction","onClick","window","scrollTo","top","behavior","setTimeout","className","blockClicked","CANVAS_WIDTH","CANVAS_HEIGHT","GROUND_HEIGHT","OBJECTS","ROVER","images","rover","rover_flipped","height","width","ROCKET","rocket","MERCURY_CRATER","mercury_crater","ROCK_RED","rock_red","d","elevation","opacity","costumeNumber","PLANETS","introConfig","size","scale","orbitDuration","textColor","colors","main","sky","text","briefing","missions","objective","items","object","x","criteria","category","value","hint","allowFall","ReactGA","initialize","getMissionLabel","planetIndex","missionIndex","logEvent","event","onCompleteIntro","onStartPlaying","useState","start","setStart","titleSpring","useSpring","to","from","config","duration","onRest","completeIntro","g","y","dominantBaseline","textAnchor","rx","fill","style","fontSize","maxWidth","color","href","planet","Array","keys","TICK_WIDTH","onZoomIntro","resetOrbit","setResetOrbit","exitIntro","setExitIntro","planetZoom","setPlanetZoom","planetText","setPlanetText","sunSpring","delay","planetOpacitySpring","planetMotionSpring","angle","Math","PI","reset","state","sceneExitSpring","planetTextSpring","renderedPlanets","slice","isLastPlanet","planetGrowthSpring","r","radius","circle","cx","cy","fillOpacity","stroke","strokeWidth","interpolate","theta","cos","sin","useEffect","timer","clearTimeout","completedMissions","mission","PADDING","AItem","a","center","costumeIndex","currentInstruction","onSuccess","onFailure","setCurrentInstruction","action","label","startTime","Date","instructionsCompleted","winMessage","loseMessage","setState","roverIndex","findIndex","item","checkCriteria","criterion","carried","console","log","obj","getPickupObject","util","winSpring","round","loseSpring","itemSprings","useSprings","target","checkFall","checkWin","spring","e","obj_y","missionNumber","textAlign","onCompleteBriefing","ACTION","HANDLER","introShown","planetIntroStatus","PLANET_INTRO_STATUS","NOT_SHOWN","ZOOMING","COMPLETE","briefingShown","planetIntroShown","done","reducer","type","payload","handler","props","development","useReducer","dispatch","act","handleCompleteIntro","handleZoomPlanetIntro","handleCompletePlanetIntro","handleCompleteBriefing","backgroundColorSpring","levelInProgress","showControlPanel","GameWIP","svg","backgroundColor","Ground","ProgressIndicator","Level","PlanetIntro","MissionObjective","MissionBriefing","ControlPanel","ASound","Sound","Page","playing","setPlaying","audioSpring","volume","Scene","url","backgroundMusic","playStatus","status","PLAYING","STOPPED","autoLoad","loop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","pageview","location","pathname","search","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.31604f92.chunk.js","sourcesContent":["// Blocks available for usage\n\nexport const BLOCK_NAMES = {\n  FORWARD: 'FORWARD',\n  TURN: 'TURN',\n  PICK_UP: 'PICK_UP'\n}\n\nexport const BLOCKS = {\n\n  [BLOCK_NAMES.FORWARD]: {\n    name: 'Move Forward'\n  },\n  [BLOCK_NAMES.TURN]: {\n    name: 'Turn Around'\n  },\n  [BLOCK_NAMES.PICK_UP]: {\n    name: 'Pick Up Object'\n  }\n\n}\n\nexport const remaining_blocks = (blocks, program) => {\n\n  // Count up how many times each block is currently used in the program\n  const counts = {};\n  for (let i = 0; i < program.length; i++) {\n    const block = program[i];\n    if (counts[block] === undefined) {\n      counts[block] = 1;\n    } else {\n      counts[block]++;\n    }\n  }\n\n  // Remove\n  return blocks.reduce((acc, [block, count]) => (\n    [...acc, [block, count - (counts[block] || 0)]]\n  ), []);\n}","import { BLOCKS } from '../game/blocks';\n\nexport default ({ addToProgram, blocks, onResetProgram, onSubmitProgram,\n                  program, programSubmitted }) => {\n\n  function blockClicked(block) {\n    if (!programSubmitted) {\n      addToProgram(block);\n    }\n  }\n\n  function submitProgram() {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    setTimeout(onSubmitProgram, 1000);\n  }\n\n  return (\n    <div id='control-panel'>\n      <div id='control-panel-container'>\n        <div>\n          <div id='program'>\n            {program.map((instruction, i) => {\n              return <div key={i}>\n                {BLOCKS[instruction].name}\n              </div>\n            })}\n          </div>\n          {!programSubmitted &&\n          <div>\n            <button onClick={onResetProgram}>Reset</button>\n            <button onClick={submitProgram}>Submit Instructions</button>\n          </div>\n          }\n        </div>\n        <div id='blocks'>\n          {blocks.map(([block, count], i) => {\n            if (count == 0)\n              return;\n            return <button\n              className='block'\n              key={i}\n              onClick={() => blockClicked(block)}\n            >\n              {BLOCKS[block].name} (x{count})\n            </button>\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/rocket.0dec99f9.svg\";","export default __webpack_public_path__ + \"static/media/rover.b107911f.svg\";","export default __webpack_public_path__ + \"static/media/rover_flipped.1ce4141d.svg\";","export default __webpack_public_path__ + \"static/media/mercury_crater.af0b0b06.svg\";","export default __webpack_public_path__ + \"static/media/rock_red.31b2b06f.svg\";","// Game dimensions\nexport const CANVAS_WIDTH = 800;\nexport const CANVAS_HEIGHT = 600;\nexport const GROUND_HEIGHT = 100;\n","import rocket from '../assets/rocket.svg';\nimport rover from '../assets/rover.svg';\nimport rover_flipped from '../assets/rover_flipped.svg';\nimport mercury_crater from '../assets/mercury_crater.svg';\nimport rock_red from '../assets/rock_red.svg';\n\nimport { CANVAS_HEIGHT, GROUND_HEIGHT } from './constants';\n\nexport const OBJECTS = {\n  ROVER: {\n    images: [rover, rover_flipped],\n    height: 80,\n    width: 80\n  },\n  ROCKET: {\n    images: [rocket],\n    height: 100,\n    width: 57\n  },\n  MERCURY_CRATER: {\n    images: [mercury_crater],\n    height: 30,\n    width: 90\n  },\n  ROCK_RED: {\n    images: [rock_red],\n    height: 30,\n    width: 40\n  }\n}\n\n// Get y position of object based on its elevation off the ground\nexport const obj_y = (object, elevation = 0) => (\n  CANVAS_HEIGHT - GROUND_HEIGHT - object.height - elevation \n)","// Game is divided into Planets and Missions\n\nimport { BLOCK_NAMES } from './blocks';\nimport { OBJECTS } from './objects';\n\n// Defaults for objects\nconst defaults = {\n  elevation: 0,\n  opacity: 1,\n  costumeNumber: 0,\n}\nconst d = defaults;\n\nexport const PLANETS = [\n  {\n    name: 'Mercury',\n    introConfig: {\n      size: 15,\n      scale: 2,\n      orbitDuration: 10000,\n      textColor: 'black'\n    },\n    colors: {\n      main: '#ae7c43',\n      sky: '#dbb78f',\n      text: 'black'\n    },\n    briefing: 'The Tenacity rover has arrived on Mercury. Use the control panel to help Tenacity complete its missions.',\n    missions: [\n      {\n        objective: 'Navigate Tenacity back to the spacecraft for refueling.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 2]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 500},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 300},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 500}\n        ]\n      },\n      {\n        objective: 'Get close to the crater to explore it. But be careful not to fall in!',\n        hint: 'You do not always need to use every block available to you.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'crater', object: OBJECTS.MERCURY_CRATER, x: 500, elevation: -30, allowFall: true},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 100},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 400}\n        ]\n      },\n      {\n        objective: 'Return the rock sample back to the rocket.',\n        blocks: [\n          [BLOCK_NAMES.FORWARD, 5],\n          [BLOCK_NAMES.PICK_UP, 1],\n          [BLOCK_NAMES.TURN, 1]\n        ],\n        items: [\n          {...d, id: 'rocket', object: OBJECTS.ROCKET, x: 100},\n          {...d, id: 'crater', object: OBJECTS.MERCURY_CRATER, x: 500, elevation: -30, allowFall: true},\n          {...d, id: 'rock', object: OBJECTS.ROCK_RED, x: 400, elevation: -30},\n          {...d, id: 'rover', object: OBJECTS.ROVER, x: 400},\n        ],\n        criteria: [\n          {category: 'rover_x', value: 100},\n          {category: 'rover_carry', value: 'rock'},\n        ]\n      }\n    ]\n  }\n]","import ReactGA from 'react-ga';\n\nimport { PLANETS } from './game/missions.js';\n\nReactGA.initialize('UA-123778931-5');\n\nconst logAnalytics = process.env.NODE_ENV != 'development';\n\nexport const getMissionLabel = (planetIndex, missionIndex) => {\n  return `${PLANETS[planetIndex].name}, Mission ${missionIndex + 1}`;\n}\n\nexport const logPageview = () => {\n  if (logAnalytics) {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n}\n\nexport const logEvent = (event) => {\n  if (logAnalytics) {\n    ReactGA.event(event);\n  }\n}","import { useState } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport { logEvent } from '../analytics';\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\nimport '../css/GameIntro.css';\n\nconst BUTTON_WIDTH = 200;\nconst BUTTON_HEIGHT = 80;\n\nexport default ({ onCompleteIntro, onStartPlaying }) => {\n\n  // State to keep track of whether play button has been clicked\n  const [start, setStart] = useState(false);\n\n  // Fade in and fade out for titles\n  const titleSpring = useSpring({\n    to: {opacity: start ? 0 : 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    onRest: () => {\n      if (start)\n        onCompleteIntro();\n    }\n  });\n\n  // Start playing music and begin game\n  const completeIntro = () => {\n    logEvent({\n      'category': 'Game',\n      'action': 'Play Game'\n    });\n    onStartPlaying();\n    setStart(true);\n  };\n\n  return (\n    <a.g opacity={titleSpring.opacity}>\n\n      {/* Main title */}\n      <text\n        x='50%'\n        y='30%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        className='titleText'\n        opacity={titleSpring.opacity}\n      >\n        Tenacity\n      </text>\n\n      {/* Subtitle */}\n      <text\n        x='50%'\n        y='45%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        className='subheadText'\n        opacity={titleSpring.opacity}\n      >\n        A game by Brian Yu\n      </text>\n\n      {/* Play button */}\n      <rect\n        x={(CANVAS_WIDTH - BUTTON_WIDTH) / 2}\n        y='360'\n        height={BUTTON_HEIGHT}\n        width={BUTTON_WIDTH}\n        rx={20}\n        fill='white'\n        className='hoverable'\n        onClick={completeIntro}\n      />\n      <text\n        x={CANVAS_WIDTH / 2}\n        y='400'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        style={{ fontSize: '48px', fill: 'black' }}\n        className='hoverable'\n        onClick={completeIntro}\n      >\n        Play\n      </text>\n\n    </a.g>\n  );\n}","export default () => {\n  return (<div style={{ maxWidth: '500px' }}>\n    <div>\n      Tenacity is a work in progress, and you've reached the end of what's been\n      developed so far! Check back soon for more missions.\n    </div>\n    <br/>\n    <div>\n      Tenacity is developed by Brian Yu at Harvard Graduate School of Education.\n      While the game is in development, I would love to hear thoughts, feedback, and\n      recommendations: you can reach me\n      at <a style={{color: 'white'}} href=\"mailto:brian@brianyu.me\">brian@brianyu.me</a>.\n    </div>\n  </div>);\n}","import { CANVAS_HEIGHT, CANVAS_WIDTH, GROUND_HEIGHT } from '../game/constants';\n\nconst SHOW_TICKS = true;\nconst TICK_INTERVAL = 100;\nconst TICK_WIDTH = 1;\nconst TICK_HEIGHT = 10;\n\nexport default ({ planet }) => {\n  return (\n    <g>\n      <rect\n        x={0} y={CANVAS_HEIGHT - GROUND_HEIGHT} width={CANVAS_WIDTH} height={GROUND_HEIGHT}\n        fill={planet.colors.main}\n      />\n      {SHOW_TICKS && [...Array(CANVAS_WIDTH / TICK_INTERVAL).keys()].map(i => {\n        return <rect\n          key={i}\n          x={i * TICK_INTERVAL - (TICK_WIDTH / 2)}\n          y={CANVAS_HEIGHT - GROUND_HEIGHT}\n          width={TICK_WIDTH}\n          height={TICK_HEIGHT}\n        />\n      })}\n    </g>\n  );\n}","import { useState, useEffect } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\nimport { PLANETS } from '../game/missions';\n\nconst START_RADIUS = 100;\nconst RADIUS_INCREMENT = 20;\n\nexport default ({ onCompleteIntro, onZoomIntro, planetIndex }) => {\n\n  // Determine current planet and scale\n  const planet = PLANETS[planetIndex];\n  const scale = planet.introConfig.scale;\n\n  // State to keep track of stage in animation\n  const [resetOrbit, setResetOrbit] = useState(false);\n  const [exitIntro, setExitIntro] = useState(false);\n  const [planetZoom, setPlanetZoom] = useState(false);\n  const [planetText, setPlanetText] = useState(false);\n\n  // Fade in for sun\n  const sunSpring = useSpring({\n    to: {opacity: 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    delay: 1500,\n  });\n\n  // Fade in for planets\n  const planetOpacitySpring = useSpring({\n    to: {opacity: 1},\n    from: {opacity: 0},\n    config: {duration: 1500},\n    delay: 3000\n  })\n\n  // Angle for planets' orbit\n  const planetMotionSpring = useSpring({\n    to: {angle: 2 * Math.PI},\n    from: {angle: 0},\n    config: {duration: 10000},\n    reset: resetOrbit,\n    onRest: () => setResetOrbit(state => !state)\n  });\n\n  // Fade out for scene\n  const sceneExitSpring = useSpring({\n    to: {opacity: exitIntro ? 0: 1},\n    from: {opacity: 1},\n    config: {duration: 2000},\n    onRest: () => {\n      if (exitIntro) {\n        onCompleteIntro();\n      }\n    }\n  });\n\n  // Fade in for planet text\n  const planetTextSpring = useSpring({\n    to: {opacity: planetText ? 1: 0},\n    from: {opacity: 0},\n    config: {duration: 1000},\n    onRest: () => {\n      if (planetText) {\n        setTimeout(() => {\n          setExitIntro(true);\n        }, 2000);\n      }\n    }\n  })\n\n  // Generate orbit and planet for each visible planet\n  const renderedPlanets = PLANETS.slice(0, 1 + planetIndex).map((planet, i) => {\n\n    const isLastPlanet = i == planetIndex;\n\n    let planetGrowthSpring = undefined;\n    if (isLastPlanet) {\n      planetGrowthSpring = useSpring({\n        to: {r: planetZoom ? 1600 : planet.introConfig.size * scale},\n        from: {r: planet.introConfig.size * scale},\n        config: {duration: 1000},\n        onRest: () => {\n          if (planetZoom) {\n            onZoomIntro();\n            setPlanetText(true);\n          }\n        }\n      });\n    }\n\n    const radius = START_RADIUS + RADIUS_INCREMENT * i;\n    return <a.g key={i} opacity={planetOpacitySpring.opacity}>\n      <a.circle\n        cx={CANVAS_WIDTH / 2}\n        cy={CANVAS_HEIGHT / 2}\n        r={radius * scale}\n        fillOpacity={0}\n        stroke={'white'}\n        strokeWidth={2}\n      />\n      <a.circle\n        cx={planetMotionSpring.angle.interpolate(theta => (CANVAS_WIDTH / 2) + scale * (radius * Math.cos(theta)))}\n        cy={planetMotionSpring.angle.interpolate(theta => (CANVAS_HEIGHT / 2) - scale * (radius * Math.sin(theta)))}\n        r={isLastPlanet ? planetGrowthSpring.r : planet.introConfig.size * scale}\n        style={{ fill: planet.colors.main }}\n      /> \n    </a.g>;\n  });\n\n  // Fade out intro screen\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setPlanetZoom(true);\n    }, 10000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <a.g opacity={sceneExitSpring.opacity}>\n\n      {/* Sun */}\n      <a.circle\n        cx={CANVAS_WIDTH / 2}\n        cy={CANVAS_HEIGHT / 2}\n        r={50 * scale}\n        style={{ fill: '#f0f067' }}\n        opacity={sunSpring.opacity}  \n      />\n\n      {/* Other Planets */}\n      {renderedPlanets}\n\n      <a.text\n        x='50%'\n        y='50%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        style={{ fontSize: '80px', fill: planet.introConfig.textColor }}\n        opacity={planetTextSpring.opacity}\n      >\n        {planet.name}\n      </a.text>\n    </a.g>\n  );\n}","import { CANVAS_HEIGHT, CANVAS_WIDTH } from '../game/constants';\n\nconst PADDING = 15;\nconst CIRCLE_RADIUS = 20;\n\nexport default ({ planet, completedMissions }) => {\n  return (\n    <g>\n      <text\n        textAnchor='end'\n        dominantBaseline='hanging'\n        x={CANVAS_WIDTH - PADDING}\n        y={PADDING}\n        style={{ fill: planet.colors.text, fontSize: '24px' }}\n      >\n        {planet.name}\n      </text>\n\n      {planet.missions.map((mission, i) => {\n        return (\n          <circle\n            key={i}\n            cx={PADDING + CIRCLE_RADIUS + (CIRCLE_RADIUS * 2 + PADDING) * i}\n            cy={PADDING + CIRCLE_RADIUS}\n            r={CIRCLE_RADIUS}\n            style={{\n                fill: completedMissions > i ? planet.colors.main : 'rgba(0, 0, 0, 0)',\n                stroke: planet.colors.main,\n                strokeWidth: completedMissions > i ? 0 : 1\n            }}\n          />\n        )\n      })}\n    </g>\n  )\n};","import { useState, useEffect } from 'react';\nimport { useSpring, useSprings, animated as a } from 'react-spring';\n\nimport { Item } from './Item';\n\nimport { getMissionLabel, logEvent } from '../analytics';\nimport { BLOCK_NAMES } from '../game/blocks';\nimport { PLANETS } from '../game/missions';\nimport { obj_y } from '../game/objects';\n\nconst AItem = a(Item);\n\nexport default ({ currentInstruction, planetIndex, missionIndex,\n                  onSuccess, onFailure,\n                  setCurrentInstruction, program, programSubmitted }) => {\n\n  const planet = PLANETS[planetIndex];\n  const mission = planet.missions[missionIndex];\n\n  useEffect(() => {\n    logEvent({\n      category: 'Level',\n      action: 'Start Level',\n      label: getMissionLabel(planetIndex, missionIndex)\n    });\n  }, []);\n\n  const [state, setState] = useState({\n    startTime: new Date(),\n    instructionsCompleted: 0,\n    items: mission.items,\n    winMessage: false,\n    loseMessage: false\n  });\n\n  const { startTime, instructionsCompleted, items, winMessage, loseMessage } = state;\n  \n  // Determine index of rover\n  const roverIndex = items.findIndex(item => item.id === 'rover');\n  const rover = items[roverIndex];\n\n  // Check if level is won\n  function checkWin() {\n    for (let i = 0; i < mission.criteria.length; i++) {\n      if (!checkCriteria(mission.criteria[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Check if particular criteria is true\n  function checkCriteria(criterion) {\n    switch (criterion.category) {\n      \n      // Confirm x location of rover\n      case 'rover_x':\n        if (criterion.value === rover.x) {\n          return true;\n        }\n        return false;\n\n      case 'rover_carry':\n        for (const item of items) {\n          if (item.id === criterion.value && item.carried === true) {\n            return true;\n          }\n        }\n        return false;\n\n      default:\n        console.log('Error: Unknown criterion.');\n        return false;\n    }\n\n  }\n\n  // Check to see if item will fall into something that allows falling\n  function checkFall(target) {\n    for (const item of items) {\n      if (item.allowFall && item.x == target.x && target.elevation === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Get object to pick up; closest object to rover, null if none\n  function getPickupObject() {\n    let obj = null; \n    for (const item of items) {\n      if (item !== rover && item.x === rover.x && (obj === null || item.elevation > obj.elevation)) {\n        obj = item;\n      }\n    }\n    return obj;\n  }\n\n  // Run an instruction\n  if (programSubmitted && currentInstruction < program.length &&\n      instructionsCompleted == currentInstruction && !winMessage && !loseMessage) {\n    const instruction = program[currentInstruction];\n\n    // Decide which instruction to use\n    switch (instruction) {\n\n      // Move the rover forward\n      case BLOCK_NAMES.FORWARD:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: state.items.map((item, i) => i === roverIndex || item.carried === true ? {\n              ...item,\n              x: rover.costumeNumber === 0 ? item.x + 100 : item.x - 100\n            } : item),\n        }));\n        break;\n\n      case BLOCK_NAMES.TURN:\n        setState(state => ({\n          ...state,\n          instructionsCompleted: state.instructionsCompleted + 1,\n          items: state.items.map((item, i) => i === roverIndex ? {\n              ...rover,\n              costumeNumber: rover.costumeNumber === 0 ? 1 : 0\n            } : item),\n        }));\n        break;\n\n      case BLOCK_NAMES.PICK_UP:\n        const obj = getPickupObject();\n        if (obj != null) {\n          setState(state => ({\n            ...state,\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: state.items.map((item, i) => item === obj ? {\n              ...obj,\n              elevation: 30,\n              carried: true\n            } : i === roverIndex ? {\n              ...rover,\n              util: (rover.util || 0) + 1\n            } : item),\n          }))\n        } else {\n          setState(state => ({\n            instructionsCompleted: state.instructionsCompleted + 1,\n            items: state.items.map((item, i) => i === roverIndex ? {\n              ...rover,\n              util: (rover.util || 0) + 1\n            } : item),\n          }));\n        }\n        break;\n\n      default:\n        console.log('ERROR: Unknown block.');\n    }\n}\n\nconst winSpring = useSpring({\n  to: {opacity: winMessage ? 1 : 0},\n  from: {opacity: 0},\n  config: {duration: 1000},\n  delay: 500,\n  onRest: () => {\n    if (winMessage) {\n      logEvent({\n        category: 'Level',\n        action: 'Win Level',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: Math.round((new Date() - startTime) / 1000)\n      });\n      setTimeout(() => {\n        onSuccess();\n      }, 2500);\n    }\n  }\n});\n\nconst loseSpring = useSpring({\n  to: {opacity: loseMessage ? 1 : 0},\n  from: {opacity: 0},\n  config: {duration: 1000},\n  delay: 500,\n  onRest: () => {\n    if (loseMessage) {\n      logEvent({\n        category: 'Level',\n        action: 'Lose Level',\n        label: getMissionLabel(planetIndex, missionIndex),\n        value: Math.round((new Date() - startTime) / 1000)\n      });\n      setTimeout(() => {\n        onFailure();\n      }, 2500);\n    }\n  }\n});\n\nconst itemSprings = useSprings(items.length, items.map((item, i) => ({\n  to: {\n    x: item.x,\n    elevation: item.elevation,\n    opacity: item.opacity,\n    util: item.util || 0 // utility variable to force transitions\n  },\n  config: {duration: 1000},\n  onRest: () => {\n\n    if (winMessage || loseMessage) {\n      return;\n    }\n\n    // Check for collisions\n    if (i === roverIndex && programSubmitted) {\n      if (checkFall(item)) {\n        setState(state => ({\n          ...state,\n          items: state.items.map((item, i) => i === roverIndex || item.carried === true ? {\n            ...item,\n            elevation: item.elevation - 20\n          } : item),\n          loseMessage: true\n        }));\n        return;\n      }\n    }\n\n    // Check if program is over\n    if (i === roverIndex && programSubmitted && state.instructionsCompleted === program.length) {\n      if (checkWin()) {\n        setState(state => ({...state, winMessage: true})); \n      } else {\n        setState(state => ({...state, loseMessage: true})); \n      }\n    }\n\n    // When rover completes its action, move on to the next instruction\n    if (i === roverIndex && programSubmitted\n        && state.instructionsCompleted > currentInstruction\n        && state.instructionsCompleted != program.length) {\n\n      setTimeout(() => {\n        setCurrentInstruction(currentInstruction + 1);\n      }, 250);\n    }\n  }\n})));\n\n\n\nreturn (\n    <g>\n      {itemSprings.map((spring, i) => {\n        const item = items[i];\n        return (<AItem\n          key={i}\n          object={item.object}\n          x={spring.x}\n          y={spring.elevation.interpolate(e => obj_y(item.object, e))}\n          costumeIndex={item.costumeNumber}\n          center={item.object.center !== false}\n          opacity={spring.opacity}\n        />);\n      })}\n      <a.text\n        x='50%'\n        y='20%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={winSpring.opacity}\n        style={{ fontSize: '80px', fill: planet.colors.text }}\n      >\n        Mission Success\n      </a.text>\n      <a.text\n        x='50%'\n        y='20%'\n        dominantBaseline='middle'\n        textAnchor='middle'\n        opacity={loseSpring.opacity}\n        style={{ fontSize: '80px', fill: planet.colors.text }}\n      >\n        Try Again\n      </a.text>\n    </g>\n  );\n}","export const Item = ({object, x, y, center, costumeIndex, opacity}) => {\n\n  // Use costume 0 by default\n  if (costumeIndex === undefined) {\n    costumeIndex = 0;\n  }\n\n  return (\n    <image\n      href={object.images[costumeIndex]}\n      height={object.height}\n      x={center === false ? x : x - (object.width / 2)}\n      y={y}\n      opacity={opacity}\n    />\n  )\n}","export default ({ missionNumber, objective }) => {\n  return (\n    <div style={{ fontSize: '24px', textAlign: 'center' }}>\n      <strong>Mission {missionNumber} Objective</strong>\n      <br/>\n      {objective}\n    </div>\n  );\n}","export default ({ briefing, onCompleteBriefing }) => {\n  return (\n    <div style={{ fontSize: '24px', textAlign: 'center' }}>\n      {briefing}\n      <br/>\n      <button onClick={onCompleteBriefing}>Continue</button>\n    </div>\n  );\n}","import React, { useReducer } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\n\nimport ControlPanel from './ControlPanel';\nimport GameIntro from './GameIntro';\nimport GameWIP from './GameWIP';\nimport Ground from './Ground';\nimport PlanetIntro from './PlanetIntro';\nimport ProgressIndicator from './ProgressIndicator';\nimport Level from './Level';\nimport MissionObjective from './MissionObjective';\nimport MissionBriefing from './MissionBriefing';\n\nimport { PLANETS } from '../game/missions';\nimport { CANVAS_WIDTH, CANVAS_HEIGHT, GROUND_HEIGHT } from '../game/constants';\nimport { remaining_blocks } from '../game/blocks';\n\n// Skip certain sequences\nconst DEV_MODE = false;\nconst MOST_RECENT_LEVEL = false;\n\nconst ACTION = {\n\n  // Intro screens\n  COMPLETE_INTRO: 'COMPLETE_INTRO',\n  COMPLETE_PLANET_INTRO: 'COMPLETE_PLANET_INTRO',\n  ZOOM_PLANET_INTRO: 'ZOOM_PLANET_INTRO',\n  COMPLETE_BRIEFING: 'COMPLETE_BRIEFING',\n\n  // Program actions\n  ADD_TO_PROGRAM: 'ADD_TO_PROGRAM',\n  RESET_PROGRAM: 'RESET_PROGRAM',\n  SUBMIT_PROGRAM: 'SUBMIT_PROGRAM',\n  SET_INST_PTR: 'SET_INST_PTR',\n\n  // Changing missions\n  NEXT_MISSION: 'NEXT_MISSION',\n  REPEAT_MISSION: 'REPEAT_MISSION'\n}\n\nconst HANDLER = {\n\n  // Intro screens\n  [ACTION.COMPLETE_INTRO]: state => {\n    return {...state, introShown: true};\n  },\n  [ACTION.ZOOM_PLANET_INTRO]: state => {\n    if (state.planetIntroStatus === PLANET_INTRO_STATUS.NOT_SHOWN) {\n      return {...state, planetIntroStatus: PLANET_INTRO_STATUS.ZOOMING}\n    } else {\n      return state;\n    }\n  },\n  [ACTION.COMPLETE_PLANET_INTRO]: state => {\n    return {...state, planetIntroStatus: PLANET_INTRO_STATUS.COMPLETE}\n  },\n  [ACTION.COMPLETE_BRIEFING]: state => {\n    return {...state, briefingShown: true}\n  },\n\n  // Program actions\n  [ACTION.ADD_TO_PROGRAM]: (state, block) => {\n    return {...state, program: [...state.program, block]}\n  },\n  [ACTION.RESET_PROGRAM]: state => {\n    return {...state, program: []}\n  },\n  [ACTION.SUBMIT_PROGRAM]: state => {\n    return {...state, programSubmitted: true}\n  },\n  [ACTION.SET_INST_PTR]: (state, instruction) => {\n    return {...state, currentInstruction: instruction}\n  },\n\n  // Changing missions\n  [ACTION.NEXT_MISSION]: (state) => {\n    const planet = PLANETS[state.planetIndex];\n\n    // Next mission on this planet\n    if (state.missionIndex + 1 < planet.missions.length) {\n      return {\n        ...state,\n        missionIndex: state.missionIndex + 1,\n        round: state.round + 1,\n        program: [],\n        programSubmitted: false,\n        currentInstruction: 0\n      }\n\n    // Next mission takes us to a new planet\n    } else if (state.planetIndex + 1 < PLANETS.length) {\n      return {\n        ...state,\n        planetIndex: state.planetIndex + 1,\n        missionIndex: 0,\n        round: state.round + 1,\n        planetIntroShown: false,\n        briefingShown: false,\n        program: [],\n        programSubmitted: false,\n        currentInstruction: 0\n      }\n    \n    // No more levels\n    } else {\n      return {\n        ...state,\n        done: true\n      }\n    }\n  },\n\n  [ACTION.REPEAT_MISSION]: (state) => {\n    return {\n      ...state,\n      round: state.round + 1,\n      program: [],\n      programSubmitted: false,\n      currentInstruction: 0\n    }\n  }\n};\n\n// Keeps track of current position in planet intro\nconst PLANET_INTRO_STATUS = {\n  NOT_SHOWN: 0,\n  ZOOMING: 1,\n  COMPLETE: 2\n};\n\nconst reducer = (state, { type, payload }) => {\n  const handler = HANDLER[type];\n  if (!handler) return state;\n  return handler(state, payload);\n};\n\n// Returns initial state. Includes devellopment flag for skipping parts.\nconst getInitialState = (development) => {\n\n  return {\n\n    // Track current mission for user\n    planetIndex: MOST_RECENT_LEVEL ? PLANETS.length - 1 :  0,\n    missionIndex: MOST_RECENT_LEVEL ? PLANETS[PLANETS.length - 1].missions.length - 1 : 0,\n    done: false,\n    round: 0,\n\n    // Track current status of game\n    introShown: development ? true : false,\n    planetIntroStatus: development ? PLANET_INTRO_STATUS.COMPLETE: PLANET_INTRO_STATUS.NOT_SHOWN,\n    briefingShown: development ? true : false,\n\n    // Current sequence of blocks\n    program: [],\n    programSubmitted: false,\n    currentInstruction: 0\n\n  }\n}\n\nexport default (props) => {\n\n  const { onStartPlaying } = props;\n\n  const [state, dispatch] = useReducer(reducer, getInitialState(DEV_MODE));\n  const act = (type, payload) => dispatch({ type, payload });\n\n  const {\n    planetIndex,\n    missionIndex,\n    introShown,\n    planetIntroStatus,\n    briefingShown,\n    program,\n    programSubmitted,\n    round,\n    currentInstruction,\n    done\n  } = state;\n\n  const planet = PLANETS[planetIndex];\n  const mission = planet.missions[missionIndex];\n\n  // Handle entering and exiting introduction screens\n  function handleCompleteIntro() {\n    act(ACTION.COMPLETE_INTRO);\n  }\n\n  function handleZoomPlanetIntro() {\n    act(ACTION.ZOOM_PLANET_INTRO);\n  }\n\n  function handleCompletePlanetIntro() {\n    act(ACTION.COMPLETE_PLANET_INTRO);\n  }\n\n  function handleCompleteBriefing() {\n    act(ACTION.COMPLETE_BRIEFING);\n  }\n\n  function addToProgram(block) {\n    act(ACTION.ADD_TO_PROGRAM, block);\n  }\n\n  function setCurrentInstruction(i) {\n    act(ACTION.SET_INST_PTR, i);\n  }\n\n  function showIntro() {\n    return <GameIntro\n      onStartPlaying={onStartPlaying}\n      onCompleteIntro={handleCompleteIntro}\n    />;\n  }\n\n  function showPlanetIntro() {\n    return <PlanetIntro\n      planetIndex={planetIndex}\n      onZoomIntro={handleZoomPlanetIntro}\n      onCompleteIntro={handleCompletePlanetIntro}\n    />\n  }\n\n  function showLevel() {\n    return <Level\n      key={round}\n      currentInstruction={currentInstruction}\n      planetIndex={planetIndex}\n      missionIndex={missionIndex}\n      onFailure={() => act(ACTION.REPEAT_MISSION)}\n      onSuccess={() => act(ACTION.NEXT_MISSION)}\n      setCurrentInstruction={setCurrentInstruction}\n      program={program}\n      programSubmitted={programSubmitted}\n    />\n  }\n\n  function showBriefing() {\n    return <MissionBriefing\n      briefing={planet.briefing}\n      onCompleteBriefing={handleCompleteBriefing}\n    />\n  }\n\n  function showGround() {\n    return <Ground\n      planet={planet}\n    />\n  }\n\n  const backgroundColorSpring = useSpring({\n    to: {color: introShown ? (\n      planetIntroStatus >= PLANET_INTRO_STATUS.ZOOMING ? planet.colors.sky : 'black'\n      ) : 'rgba(0, 0, 0, 0)'},\n    from: {color: 'rgba(0, 0, 0, 0)'},\n    config: {duration: 1500}\n  });\n\n  const levelInProgress = planetIntroStatus == PLANET_INTRO_STATUS.COMPLETE;\n  const showControlPanel = levelInProgress && briefingShown;\n\n  // Temporary game over screen\n  if (done) {\n    return <GameWIP />;\n  }\n\n  return (\n    <div style={{ maxWidth: CANVAS_WIDTH }}>\n      <a.svg width={CANVAS_WIDTH} height={CANVAS_HEIGHT} className='scene'\n           style={{ backgroundColor: backgroundColorSpring.color }}\n      >\n\n        {/* Ground, appears when planet has been zoomed in  */}\n        {planetIntroStatus >= PLANET_INTRO_STATUS.ZOOMING && showGround()}\n\n        {levelInProgress && \n          <ProgressIndicator\n            planet={planet}\n            completedMissions={missionIndex}\n          />\n        }\n\n        {!introShown ? showIntro() : !levelInProgress ? showPlanetIntro() : showLevel()}\n      </a.svg>\n      {levelInProgress &&\n        (briefingShown ? <MissionObjective missionNumber={missionIndex + 1} objective={mission.objective} />\n        : showBriefing())\n      }\n      {showControlPanel &&\n        <ControlPanel\n          addToProgram={addToProgram}\n          blocks={remaining_blocks(mission.blocks, program)}\n          onResetProgram={() => act(ACTION.RESET_PROGRAM)}\n          onSubmitProgram={() => act(ACTION.SUBMIT_PROGRAM)}\n          program={program}\n          programSubmitted={programSubmitted}\n        />\n      }\n    </div>\n  );\n};","export default __webpack_public_path__ + \"static/media/amerika.421d9361.mp3\";","import React, { useState } from 'react';\nimport { useSpring, animated as a } from 'react-spring';\nimport Sound from 'react-sound';\n\nimport Scene from './Scene';\n\nimport backgroundMusic from '../assets/amerika.mp3';\n\nconst ASound = a(Sound);\n\nexport default () => {\n\n  const [playing, setPlaying] = useState(false);\n  const handleStartPlaying = () => setPlaying(true);\n\n  // Fade in audio\n  const audioSpring = useSpring({\n    to: {volume: playing ? 100 : 0},\n    from: {volume: 0},\n    config: {duration: 8000}\n  });\n\n  return (\n    <div className='page'>\n      <div className='scene-container'>\n        <Scene\n          onStartPlaying={handleStartPlaying}\n        />\n      </div>\n      <ASound\n        url={backgroundMusic}\n        playStatus={playing ? Sound.status.PLAYING : Sound.status.STOPPED}\n        autoLoad={true}\n        loop={true}\n        volume={audioSpring.volume}\n      />\n    </div>\n  );\n}","import Page from './components/Page';\n\nexport default Page;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { logPageview } from './analytics';\nimport reportWebVitals from './reportWebVitals';\n\nlogPageview();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}